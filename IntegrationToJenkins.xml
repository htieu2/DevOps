<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="IntegrationDevelopment" resourceRoot="${projectDir}" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" id="5ae61a1a-6035-40e4-8ad9-4098ef699dfb" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ItpamServiceBinding" type="wsdl" bindingName="{http://www.ca.com/itpam}ItpamServiceBinding" soapVersion="1_1" anonymous="optional" definition="http://cscvieae28162.vdc.csc.com:8080/itpam/soap?wsdl" id="f73fd417-2d9f-47e2-abf5-c8bf2dd5849d" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://cscvieae28162.vdc.csc.com:8080/itpam/soap?wsdl"><con:part><con:url>http://cscvieae28162.vdc.csc.com:8080/itpam/soap?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.ca.com/itpam" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://www.ca.com/itpam" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://www.ca.com/itpam" xmlns:wsi="http://ws-i.org/profiles/basic/1.1/xsd">
      <xs:import namespace="http://ws-i.org/profiles/basic/1.1/xsd" schemaLocation="swaref.xsd"/>
      <!--<xs:simpleType name="swaRef"> 
    			<xs:restriction base="xs:anyURI" /> 
  			</xs:simpleType>-->
      <xs:simpleType name="name">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:simpleType name="refPath">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:simpleType name="id">
        <xs:restriction base="xs:long"/>
      </xs:simpleType>
      <xs:simpleType name="isallowOtherValue">
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>
      <xs:simpleType name="isReadOnly">
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>
      <xs:simpleType name="description">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:simpleType name="startDate">
        <xs:restriction base="xs:date"/>
      </xs:simpleType>
      <xs:simpleType name="startTime">
        <xs:restriction base="xs:time"/>
      </xs:simpleType>
      <xs:simpleType name="priority">
        <xs:restriction base="xs:integer"/>
      </xs:simpleType>
      <xs:simpleType name="userInteractionID">
        <xs:restriction base="xs:long"/>
      </xs:simpleType>
      <xs:simpleType name="userAction">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Approve"/>
          <xs:enumeration value="Reject"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="action">
        <xs:restriction base="xs:string">
          <xs:enumeration value="suspend"/>
          <xs:enumeration value="resume"/>
          <xs:enumeration value="abort"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="overwriteAction">
        <xs:restriction base="xs:string">
          <xs:enumeration value="incrementObjectVersion"/>
          <xs:enumeration value="skipImport"/>
          <xs:enumeration value="replaceObject"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="actionOnInstance">
        <xs:restriction base="xs:string">
          <xs:enumeration value="archive"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="attachments">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attachment" type="tns:attachment"/>
        </xs:sequence>
        <xs:attribute name="attachmentsParamName" type="xs:string" use="optional"/>
      </xs:complexType>
      <xs:complexType name="attachment">
        <xs:sequence>
          <xs:element name="attachmentID" type="wsi:swaRef"/>
          <xs:element name="name" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="localSourceLocation" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="attachmentsInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attachment" type="tns:attachmentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="attachmentInfo">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="attachmentID" type="xs:long"/>
          <xs:element maxOccurs="1" minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="contentId" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="contentType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="attachmentFilter">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="contentId" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="contentType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="attachmentIds">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="attachmentId" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchFilter">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="lookUpPath" type="tns:lookUpPath"/>
          <xs:element maxOccurs="1" minOccurs="0" name="keywords" type="tns:keywords"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lookUpPath">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute default="true" name="isRecursive" type="xs:boolean"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="keywords">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="keyword" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="param">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="name" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="params">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="param" type="tns:param"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="objLocation">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="path" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="options">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="startDate" type="tns:startDate"/>
          <xs:element maxOccurs="1" minOccurs="0" name="startTime" type="tns:startTime"/>
          <xs:element maxOccurs="1" minOccurs="0" name="tagId" type="xs:string"/>
          <xs:element default="true" maxOccurs="1" minOccurs="0" name="isAutoArchive" type="xs:boolean"/>
          <xs:element maxOccurs="1" minOccurs="0" name="priority" type="tns:priority"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="auth">
        <xs:choice>
          <xs:element maxOccurs="1" minOccurs="1" name="token" type="xs:string"/>
          <xs:group ref="tns:userAuth"/>
        </xs:choice>
      </xs:complexType>
      <xs:group name="userAuth">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="user" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:group>
      <xs:complexType name="pages">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="page" type="tns:page"/>
        </xs:sequence>
        <xs:attribute name="hasComplexType" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="page">
        <xs:choice maxOccurs="unbounded" minOccurs="0">
          <xs:group ref="tns:valGroup"/>
        </xs:choice>
        <xs:attribute name="name" type="tns:name"/>
      </xs:complexType>
      <xs:group name="valGroup">
        <xs:choice>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamString" type="tns:itpamString"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamPassword" type="tns:itpamValue"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamInt" type="tns:itpamInt"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamLong" type="tns:itpamLong"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamDouble" type="tns:itpamDouble"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamDate" type="tns:itpamDate"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="itpamBoolean" type="tns:itpamBoolean"/>
        </xs:choice>
      </xs:group>
      <xs:complexType name="startRequests">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="startRequest" type="tns:startRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="startRequest">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="description" type="tns:description"/>
        </xs:sequence>
        <xs:attribute name="name" type="tns:name"/>
        <xs:attribute name="refPath" type="tns:refPath"/>
      </xs:complexType>
      <xs:complexType name="userInteractions">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userInteraction" type="tns:userInteraction"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userInteraction">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="description" type="tns:description"/>
        </xs:sequence>
        <xs:attribute name="id" type="tns:id"/>
        <xs:attribute name="title" type="xs:string"/>
        <xs:attribute name="rootUUID" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="startRequestStatus">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="interactionId" type="xs:long"/>
          <xs:element maxOccurs="1" minOccurs="0" name="state" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="earliest-start-time" type="xs:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="0" name="start-time" type="xs:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="0" name="end-time" type="xs:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="0" name="refProcess" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="processID" type="xs:long"/>
          <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="flow">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="action" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
          <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
          <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:options"/>
          <xs:element maxOccurs="1" minOccurs="0" name="attachments" type="tns:attachments"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="execflow">
        <xs:sequence>
          <xs:choice>
            <xs:element maxOccurs="1" minOccurs="0" name="ROID" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="tagId" type="xs:string"/>
          </xs:choice>
          <xs:element maxOccurs="1" minOccurs="1" name="action" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CheckFlowResult">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="ROID" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="flow-state" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="submission-time" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="sender-address" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="connection-id" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="message" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="message-status" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="executeFlowResult">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="ROID" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="flow-name" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="flow-action" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="auth-user" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="submission-time" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="sender-address" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="connection-id" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="message" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="message-status" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="itpamValue">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="label" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="description" type="tns:description"/>
        </xs:sequence>
        <xs:attribute name="name" type="tns:name"/>
        <xs:attribute name="isReadOnly" type="tns:isReadOnly"/>
        <xs:attribute name="sequenceNo" type="xs:integer"/>
      </xs:complexType>
      <xs:complexType name="itpamString">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:stringOp"/>
            </xs:sequence>
            <xs:attribute name="minlength" type="xs:integer"/>
            <xs:attribute name="maxlength" type="xs:integer"/>
            <xs:attribute name="mask" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="stringOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:string">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="itpamInt">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:integer"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:integer"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:intOp"/>
            </xs:sequence>
            <xs:attribute name="minval" type="xs:integer"/>
            <xs:attribute name="maxval" type="xs:integer"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="intOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:int">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="itpamLong">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:long"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:long"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:longOp"/>
            </xs:sequence>
            <xs:attribute name="minval" type="xs:long"/>
            <xs:attribute name="maxval" type="xs:long"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="longOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:long">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="itpamDouble">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:double"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:double"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:doubleOp"/>
            </xs:sequence>
            <xs:attribute name="minval" type="xs:double"/>
            <xs:attribute name="maxval" type="xs:double"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="doubleOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:double">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="itpamDate">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:date"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:date"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:dateOp"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="dateOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:date">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="itpamBoolean">
        <xs:complexContent>
          <xs:extension base="tns:itpamValue">
            <xs:sequence>
              <xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:boolean"/>
              <xs:element maxOccurs="1" minOccurs="0" name="defaultValue" type="xs:boolean"/>
              <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:booleanOp"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="booleanOp">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="op">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:boolean">
                  <xs:attribute name="name" type="tns:name"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="isallowOtherValue" type="tns:isallowOtherValue"/>
      </xs:complexType>
      <xs:complexType name="dateRange">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="fromDate" type="xs:date"/>
          <xs:element maxOccurs="1" minOccurs="1" name="toDate" type="xs:date"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="executeProcess">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="flow" type="tns:flow"></xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProcessStatus">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="flow" type="tns:execflow"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getProcessLogs">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="processID" type="xs:long"/>
            <xs:element maxOccurs="1" minOccurs="0" name="filter" type="tns:logFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="logFilter">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="level" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="categories" type="tns:categories"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="categories">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="category" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getProcessLogsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="0" name="processLogs" type="tns:processLogs"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="processLogs">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="processlog" type="tns:processLog"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="processLog">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="logMessage" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="time" type="xs:dateTime"/>
        </xs:sequence>
        <xs:attribute name="level" type="xs:string"/>
        <xs:attribute name="category" type="xs:string"/>
      </xs:complexType>
      <xs:element name="exportObject">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="folderName" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="isAbsolute" type="xs:boolean"/>
            <xs:element maxOccurs="1" minOccurs="0" name="downloadFileName" type="tns:downloadFileName"/>
            <xs:element maxOccurs="1" minOccurs="0" name="filter" type="tns:exportLibFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="downloadFileName">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="downloadLocation" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="fileName" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="1" name="overwriteFile" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="exportLibFilter">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="0" name="exportObjectTypes" type="tns:exportObjectTypes"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="exportObjectTypes">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="objectType" type="tns:objectTypes"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="objectTypes">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Agenda"/>
          <xs:enumeration value="Calendar"/>
          <xs:enumeration value="CustomIcon"/>
          <xs:enumeration value="CustomOperator"/>
          <xs:enumeration value="CustomSensor"/>
          <xs:enumeration value="Dataset"/>
          <xs:enumeration value="InteractionRequestForm"/>
          <xs:enumeration value="Package"/>
          <xs:enumeration value="ProcessWatch"/>
          <xs:enumeration value="LogViewer"/>
          <xs:enumeration value="Resources"/>
          <xs:enumeration value="Process"/>
          <xs:enumeration value="Commander"/>
          <xs:enumeration value="StatePolicy"/>
          <xs:enumeration value="System"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="ExportLibraryResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="0" name="exportLibraryResponse" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="downloadedServer" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="exportLibObject" type="wsi:swaRef"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="controlProcess">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="ProcessID" type="xs:long"/>
            <xs:element maxOccurs="1" minOccurs="1" name="action" type="tns:action"/>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="controlProcessResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="actionStatus" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="controlInstance">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:choice>
              <xs:element maxOccurs="1" minOccurs="0" name="rootUUID" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="instanceId" type="xs:long"/>
              <xs:element maxOccurs="1" minOccurs="0" name="tagId" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="processName" type="xs:string"/>
            </xs:choice>
            <xs:element maxOccurs="1" minOccurs="1" name="action" type="tns:actionOnInstance"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="controlInstanceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="actionStatus" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckFlowResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="CheckFlowResult" type="tns:CheckFlowResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ExecuteC2OFlowResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="ExecuteC2OFlowResult" type="tns:executeFlowResult"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AsyncSoapResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="MessageID" type="xs:string"/>
            <xs:any minOccurs="0">
              <xs:annotation>
                <xs:documentation>These elements are transformed into dataset variables with the same names.</xs:documentation>
              </xs:annotation>
            </xs:any>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AsyncSoapResponseResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="status" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartRequestForms">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="0" name="filter" type="tns:searchFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartRequestFormsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="startRequests" type="tns:startRequests"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartRequestForm">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="objLocation" type="tns:objLocation"/>
          </xs:sequence>
          <xs:attribute default="false" name="getParamSequence" type="xs:boolean"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getStartRequestFormResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="refProcess" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="pages" type="tns:pages"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMatchingEvents">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventName" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventType" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventSource" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventDestination" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventExpression" type="xs:string"/>
            <xs:element default="false" maxOccurs="1" minOccurs="0" name="enablePatternMatch" type="xs:boolean"/>
            <xs:element default="false" maxOccurs="1" minOccurs="0" name="allowPartialMatch" type="xs:boolean"/>
            <xs:element default="false" maxOccurs="1" minOccurs="0" name="consumeEvents" type="xs:boolean"/>
            <xs:element default="true" maxOccurs="1" minOccurs="0" name="retrieveAllMatchingEvents" type="xs:boolean"/>
            <xs:element maxOccurs="1" minOccurs="0" name="uniqueId" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMatchingEventsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="5" minOccurs="0" name="events" type="tns:matchEvents"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="matchEvents">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="event" type="tns:eventData"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="eventData">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="eventId" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="eventName" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="eventType" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="eventSource" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="eventDestination" type="xs:string"/>
          <xs:choice>
            <xs:element maxOccurs="1" minOccurs="0" name="payload" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
          </xs:choice>
          <xs:element default="false" maxOccurs="1" minOccurs="1" name="toSingleSubscriber" type="xs:boolean"/>
          <xs:element maxOccurs="1" minOccurs="1" name="eventCreationTime" type="xs:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="1" name="eventExpirationTime" type="xs:dateTime"/>
          <xs:element maxOccurs="1" minOccurs="1" name="user" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="getITPamVersion">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ITPamVersionDetails">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="majorVersion" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="minorVersion" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="servicePack" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="patchNumber" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="buildNumber" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="requiredBuild" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="1" name="buildDate" type="xs:dateTime"/>
            <xs:element maxOccurs="1" minOccurs="0" name="buildDetails" type="tns:buildDetails"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="buildDetails">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="buildParam" type="tns:buildParam"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="buildParam">
        <xs:simpleContent>
          <xs:extension base="xs:string">
            <xs:attribute name="name" type="xs:string"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:element name="generateEvent">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="eventName" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventType" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventSource" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventDestination" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="eventExpDuration" type="xs:long"/>
            <xs:choice>
              <xs:element maxOccurs="1" minOccurs="0" name="payload" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
            </xs:choice>
            <xs:element default="false" maxOccurs="1" minOccurs="0" name="toSingleSubscriber" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executeStartRequest">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="objLocation" type="tns:objLocation"/>
            <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
            <xs:element maxOccurs="1" minOccurs="0" name="options" type="tns:options"/>
            <xs:element maxOccurs="1" minOccurs="0" name="attachments" type="tns:attachments"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executeStartRequestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="startRequestStatus" type="tns:startRequestStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkStartRequestStatus">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:choice>
              <xs:element maxOccurs="1" minOccurs="0" name="interactionId" type="tns:id"/>
              <xs:element maxOccurs="1" minOccurs="0" name="tagId" type="xs:string"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkStartRequestStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="startRequestStatus" type="tns:startRequestStatus"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPendingUserInteractions">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:choice>
              <xs:element maxOccurs="1" minOccurs="0" name="rootUUID" type="xs:string"/>
              <xs:element maxOccurs="1" minOccurs="0" name="processID" type="xs:long"/>
            </xs:choice>
          </xs:sequence>
          <xs:attribute default="false" name="getRootUUID" type="xs:boolean"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPendingUserInteractionsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="userInteractions" type="tns:userInteractions"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPendingInteractionRequestForm">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="userInteractionID" type="tns:userInteractionID"/>
          </xs:sequence>
          <xs:attribute default="false" name="getParamSequence" type="xs:boolean"/>
          <xs:attribute default="false" name="getApprovalRequired" type="xs:boolean"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="getPendingInteractionRequestFormResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="processID" type="xs:long"/>
            <xs:element maxOccurs="1" minOccurs="0" name="isApprovalRequired" type="xs:boolean"/>
            <xs:element maxOccurs="1" minOccurs="0" name="description" type="tns:description"/>
            <xs:element maxOccurs="1" minOccurs="0" name="pages" type="tns:pages"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executePendingInteraction">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="0" name="params" type="tns:params"/>
            <xs:element maxOccurs="1" minOccurs="1" name="userInteractionID" type="tns:userInteractionID"/>
            <xs:element maxOccurs="1" minOccurs="0" name="isApprove" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="executePendingInteractionResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="userInteractionID" type="tns:userInteractionID"/>
            <xs:element name="interactionTitle" type="xs:string"/>
            <xs:element name="state" type="xs:string"/>
            <xs:element name="startTime" type="xs:dateTime"/>
            <xs:element name="endTime" type="xs:dateTime"/>
            <xs:element name="parmitedUserGroup" type="xs:string"/>
            <xs:element name="closedBy" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="importFile">
        <xs:restriction base="xs:string"/>
      </xs:simpleType>
      <xs:complexType name="importFileParam">
        <xs:sequence>
          <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
          <xs:element maxOccurs="1" minOccurs="0" name="importLocation" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="localSourceLocation" type="xs:string"/>
          <xs:element maxOccurs="1" minOccurs="0" name="isSetCurrent" type="xs:boolean"/>
          <xs:element maxOccurs="1" minOccurs="0" name="isMakeAvailable" type="xs:boolean"/>
          <xs:element default="incrementObjectVersion" maxOccurs="1" minOccurs="0" name="overwriteAction" type="tns:overwriteAction"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="messages">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="1" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="importFileResponse">
        <xs:complexType>
          <xs:choice>
            <xs:element maxOccurs="1" minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element name="messages" type="tns:messages"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="generateEventResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="0" name="event" type="tns:eventData"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="importFileParam" type="tns:importFileParam"/>
      <xs:element name="checkServerStatus">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="checkServerStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="serverStatus" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttachments">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="0" name="filter" type="tns:attachmentFilter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getAttachmentsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="0" name="attachments" type="tns:attachmentsInfo"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAttachments">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="attachments" type="tns:attachmentIds"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteAttachmentsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="successMessage" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteArchivedInstances">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="auth" type="tns:auth"/>
            <xs:element maxOccurs="1" minOccurs="1" name="dateRange" type="tns:dateRange"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteArchivedInstancesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="successMessage" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="ExecuteC2OFlowSoapIn">
    <wsdl:part element="tns:executeProcess" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ExecuteC2OFlowSoapOut">
    <wsdl:part element="tns:ExecuteC2OFlowResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="GetProcessStateSoapIn">
    <wsdl:part element="tns:getProcessStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="GetFlowSoapOut">
    <wsdl:part element="tns:CheckFlowResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="controlFlowSoapIn">
    <wsdl:part element="tns:controlProcess" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="controlFlowOut">
    <wsdl:part element="tns:controlProcessResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="controlInstanceSoapIn">
    <wsdl:part element="tns:controlInstance" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="controlInstanceSoapOut">
    <wsdl:part element="tns:controlInstanceResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProcessLogsSoapIn">
    <wsdl:part element="tns:getProcessLogs" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getProcessLogsOut">
    <wsdl:part element="tns:getProcessLogsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="exportObjectSoapIn">
    <wsdl:part element="tns:exportObject" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="exportObjectOut">
    <wsdl:part element="tns:ExportLibraryResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ITPamVersionSoapIn">
    <wsdl:part element="tns:getITPamVersion" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ITPamVersionSoapOut">
    <wsdl:part element="tns:ITPamVersionDetails" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="sendEventSoapIn">
    <wsdl:part element="tns:generateEvent" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="sendEventSoapOut">
    <wsdl:part element="tns:generateEventResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getMatchingEventSoapIn">
    <wsdl:part element="tns:getMatchingEvents" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getMatchingEventSoapOut">
    <wsdl:part element="tns:getMatchingEventsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="AsyncSoapResponseSoapIn">
    <wsdl:part element="tns:AsyncSoapResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="AsyncSoapResponseSoapOut">
    <wsdl:part element="tns:AsyncSoapResponseResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStartRequestFormsRequest">
    <wsdl:part element="tns:getStartRequestForms" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStartRequestFormsResponse">
    <wsdl:part element="tns:getStartRequestFormsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStartRequestFormRequest">
    <wsdl:part element="tns:getStartRequestForm" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getStartRequestFormResponse">
    <wsdl:part element="tns:getStartRequestFormResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="executeStartRequestRequest">
    <wsdl:part element="tns:executeStartRequest" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="executeStartRequestResponse">
    <wsdl:part element="tns:executeStartRequestResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkStartRequestStatusRequest">
    <wsdl:part element="tns:checkStartRequestStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkStartRequestStatusResponse">
    <wsdl:part element="tns:checkStartRequestStatusResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingUserInteractionsRequest">
    <wsdl:part element="tns:getPendingUserInteractions" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingUserInteractionsResponse">
    <wsdl:part element="tns:getPendingUserInteractionsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingInteractionRequestFormRequest">
    <wsdl:part element="tns:getPendingInteractionRequestForm" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getPendingInteractionRequestFormResponse">
    <wsdl:part element="tns:getPendingInteractionRequestFormResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="executePendingInteractionRequest">
    <wsdl:part element="tns:executePendingInteraction" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="executePendingInteractionResponse">
    <wsdl:part element="tns:executePendingInteractionResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="ImportSoapIn">
    <wsdl:part element="tns:importFileParam" name="importFileParam"/>
    <wsdl:part name="objectXml" type="tns:importFile"/>
  </wsdl:message>
  <wsdl:message name="ImportSoapOut">
    <wsdl:part element="tns:importFileResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkServerStatusRequest">
    <wsdl:part element="tns:checkServerStatus" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="checkServerStatusResponse">
    <wsdl:part element="tns:checkServerStatusResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAttachmentsRequest">
    <wsdl:part element="tns:getAttachments" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="getAttachmentsResponse">
    <wsdl:part element="tns:getAttachmentsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="deleteAttachmentsRequest">
    <wsdl:part element="tns:deleteAttachments" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="deleteAttachmentsResponse">
    <wsdl:part element="tns:deleteAttachmentsResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="deleteArchivedInstancesRequest">
    <wsdl:part element="tns:deleteArchivedInstances" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="deleteArchivedInstancesResponse">
    <wsdl:part element="tns:deleteArchivedInstancesResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="ItpamServiceSoap">
    <wsdl:operation name="ExecuteProcess">
      <wsdl:documentation>This method allow user to execute flow</wsdl:documentation>
      <wsdl:input message="tns:ExecuteC2OFlowSoapIn"/>
      <wsdl:output message="tns:ExecuteC2OFlowSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="controlProcess">
      <wsdl:documentation>This method execute process control actions</wsdl:documentation>
      <wsdl:input message="tns:controlFlowSoapIn"/>
      <wsdl:output message="tns:controlFlowOut"/>
    </wsdl:operation>
    <wsdl:operation name="controlInstance">
      <wsdl:documentation>This method execute instance control actions</wsdl:documentation>
      <wsdl:input message="tns:controlInstanceSoapIn"/>
      <wsdl:output message="tns:controlInstanceSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="getProcessStatus">
      <wsdl:documentation>This method allow user to know the status of process</wsdl:documentation>
      <wsdl:input message="tns:GetProcessStateSoapIn"/>
      <wsdl:output message="tns:GetFlowSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="getProcessLogs">
      <wsdl:documentation>This method allow user retrieve logs for process</wsdl:documentation>
      <wsdl:input message="tns:getProcessLogsSoapIn"/>
      <wsdl:output message="tns:getProcessLogsOut"/>
    </wsdl:operation>
    <wsdl:operation name="exportObject">
      <wsdl:documentation>This method allow user to export library objects.</wsdl:documentation>
      <wsdl:input message="tns:exportObjectSoapIn"/>
      <wsdl:output message="tns:exportObjectOut"/>
    </wsdl:operation>
    <wsdl:operation name="getITPamVersionInfo">
      <wsdl:documentation>This method allow user to get ITPam version information.</wsdl:documentation>
      <wsdl:input message="tns:ITPamVersionSoapIn"/>
      <wsdl:output message="tns:ITPamVersionSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="generateEvent">
      <wsdl:documentation>This method allow user to generate or send event to itpam.</wsdl:documentation>
      <wsdl:input message="tns:sendEventSoapIn"/>
      <wsdl:output message="tns:sendEventSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="getMatchingEvents">
      <wsdl:documentation>This method allow user to get matching events for the wait event.</wsdl:documentation>
      <wsdl:input message="tns:getMatchingEventSoapIn"/>
      <wsdl:output message="tns:getMatchingEventSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="AsyncSoapResponse">
      <wsdl:documentation>This method allow user to complete pending async soap request executed by async soap module</wsdl:documentation>
      <wsdl:input message="tns:AsyncSoapResponseSoapIn"/>
      <wsdl:output message="tns:AsyncSoapResponseSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="getStartRequestForms">
      <wsdl:documentation>This method allow user to retrieve all the start request forms based on his permissions</wsdl:documentation>
      <wsdl:input message="tns:getStartRequestFormsRequest"/>
      <wsdl:output message="tns:getStartRequestFormsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getStartRequestForm">
      <wsdl:documentation>This method allow user to retrieve start request form</wsdl:documentation>
      <wsdl:input message="tns:getStartRequestFormRequest"/>
      <wsdl:output message="tns:getStartRequestFormResponse"/>
    </wsdl:operation>
    <wsdl:operation name="executeStartRequest">
      <wsdl:documentation>This method allow user to execute start request form</wsdl:documentation>
      <wsdl:input message="tns:executeStartRequestRequest"/>
      <wsdl:output message="tns:executeStartRequestResponse"/>
    </wsdl:operation>
    <wsdl:operation name="checkStartRequestStatus">
      <wsdl:documentation>This method allow user to execute start request form</wsdl:documentation>
      <wsdl:input message="tns:checkStartRequestStatusRequest"/>
      <wsdl:output message="tns:checkStartRequestStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPendingUserInteractions">
      <wsdl:documentation>This method allow user to retrieve all the pending user interactions based on his permissions</wsdl:documentation>
      <wsdl:input message="tns:getPendingUserInteractionsRequest"/>
      <wsdl:output message="tns:getPendingUserInteractionsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getPendingInteractionRequestForm">
      <wsdl:documentation>This method allow user to retrieve interaction request form for pending interaction request</wsdl:documentation>
      <wsdl:input message="tns:getPendingInteractionRequestFormRequest"/>
      <wsdl:output message="tns:getPendingInteractionRequestFormResponse"/>
    </wsdl:operation>
    <wsdl:operation name="executePendingInteraction">
      <wsdl:documentation>This method allow user take action on pending request</wsdl:documentation>
      <wsdl:input message="tns:executePendingInteractionRequest"/>
      <wsdl:output message="tns:executePendingInteractionResponse"/>
    </wsdl:operation>
    <wsdl:operation name="ImportObject">
      <wsdl:input message="tns:ImportSoapIn"/>
      <wsdl:output message="tns:ImportSoapOut"/>
    </wsdl:operation>
    <wsdl:operation name="checkServerStatus">
      <wsdl:documentation>This method test the status of server</wsdl:documentation>
      <wsdl:input message="tns:checkServerStatusRequest"/>
      <wsdl:output message="tns:checkServerStatusResponse"/>
    </wsdl:operation>
    <wsdl:operation name="getAttachments">
      <wsdl:documentation>This method test the status of server</wsdl:documentation>
      <wsdl:input message="tns:getAttachmentsRequest"/>
      <wsdl:output message="tns:getAttachmentsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteAttachments">
      <wsdl:documentation>This method test the status of server</wsdl:documentation>
      <wsdl:input message="tns:deleteAttachmentsRequest"/>
      <wsdl:output message="tns:deleteAttachmentsResponse"/>
    </wsdl:operation>
    <wsdl:operation name="deleteArchivedInstances">
      <wsdl:documentation>This method test the status of server</wsdl:documentation>
      <wsdl:input message="tns:deleteArchivedInstancesRequest"/>
      <wsdl:output message="tns:deleteArchivedInstancesResponse"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ItpamServiceBinding" type="tns:ItpamServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ExecuteProcess">
      <soap:operation soapAction="ExecuteC2OFlow" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="controlProcess">
      <soap:operation soapAction="controlProcess" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="controlInstance">
      <soap:operation soapAction="controlInstance" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProcessStatus">
      <soap:operation soapAction="GetFlowState" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProcessLogs">
      <soap:operation soapAction="getProcessLogs" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="exportObject">
      <soap:operation soapAction="exportObject" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getITPamVersionInfo">
      <soap:operation soapAction="getITPamVersionInfo" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="generateEvent">
      <soap:operation soapAction="generateEvent" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMatchingEvents">
      <soap:operation soapAction="getMatchingEvents" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AsyncSoapResponse">
      <soap:operation soapAction="AsyncSoapResponse" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStartRequestForms">
      <soap:operation soapAction="getStartRequestForms" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getStartRequestForm">
      <soap:operation soapAction="getStartRequestForm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executeStartRequest">
      <soap:operation soapAction="executeStartRequest" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkStartRequestStatus">
      <soap:operation soapAction="checkStartRequestStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPendingUserInteractions">
      <soap:operation soapAction="getPendingUserInteractions" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPendingInteractionRequestForm">
      <soap:operation soapAction="getPendingInteractionRequestForm" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="executePendingInteraction">
      <soap:operation soapAction="executePendingInteraction" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ImportObject">
      <soap:operation soapAction="importObject"/>
      <wsdl:input>
        <mime:multipartRelated>
          <mime:part>
            <soap:body parts="importFileParam" use="literal"/>
          </mime:part>
          <mime:part>
            <mime:content part="objectXml" type="text/xml"/>
          </mime:part>
        </mime:multipartRelated>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="checkServerStatus">
      <soap:operation soapAction="checkServerStatus" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttachments">
      <soap:operation soapAction="getAttachments" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteAttachments">
      <soap:operation soapAction="deleteAttachments" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteArchivedInstances">
      <soap:operation soapAction="deleteArchivedInstances" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ItpamService">
    <wsdl:documentation>This service allow user to execute flows and user request</wsdl:documentation>
    <wsdl:port binding="tns:ItpamServiceBinding" name="ItpamServiceSoap">
      <soap:address location="http://cscvieae28162.vdc.csc.com:8080/itpam/soap"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://cscoamndc102-de.amer.csc.com:8080/itpam/swaref.xsd</con:url><con:content><![CDATA[<!--Copyright (c) 2002-2004 by The Web Services-Interoperability Organization (WS-I) and 
  Certain of its Members. All Rights Reserved.
	
  Notice
  The material contained herein is not a license, either expressly or impliedly, to any 
  intellectual property owned or controlled by any of the authors or developers of this 
  material or WS-I. The material contained herein is provided on an "AS IS" basis and to 
  the maximum extent permitted by applicable law, this material is provided AS IS AND WITH 
  ALL FAULTS, and the authors and developers of this material and WS-I hereby disclaim all 
  other warranties and conditions, either express, implied or statutory, including, but not 
  limited to, any (if any) implied warranties, duties or conditions of  merchantability, 
  of fitness for a particular purpose, of accuracy or completeness of responses, of results, 
  of workmanlike effort, of lack of viruses, and of lack of negligence. ALSO, THERE IS NO 
  WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO 
  DESCRIPTION OR NON-INFRINGEMENT WITH REGARD TO THIS MATERIAL.
	
  IN NO EVENT WILL ANY AUTHOR OR DEVELOPER OF THIS MATERIAL OR WS-I BE LIABLE TO ANY OTHER 
  PARTY FOR THE COST OF PROCURING SUBSTITUTE GOODS OR SERVICES, LOST PROFITS, LOSS OF USE, 
  LOSS OF DATA, OR ANY INCIDENTAL, CONSEQUENTIAL, DIRECT, INDIRECT, OR SPECIAL DAMAGES 
  WHETHER UNDER CONTRACT, TORT, WARRANTY, OR OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR 
  ANY OTHER AGREEMENT RELATING TO THIS MATERIAL, WHETHER OR NOT SUCH PARTY HAD ADVANCE 
  NOTICE OF THE POSSIBILITY OF SUCH DAMAGES.
	
  WS-I License Information
  Use of this WS-I Material is governed by the WS-I Test License and other licenses.  Information on these 
  licenses are contained in the README.txt and ReleaseNotes.txt files.  By downloading this file, you agree 
  to the terms of these licenses.
	
  How To Provide Feedback
  The Web Services-Interoperability Organization (WS-I) would like to receive input, 
  suggestions and other feedback ("Feedback") on this work from a wide variety of 
  industry participants to improve its quality over time. 
	
  By sending email, or otherwise communicating with WS-I, you (on behalf of yourself if 
  you are an individual, and your company if you are providing Feedback on behalf of the 
  company) will be deemed to have granted to WS-I, the members of WS-I, and other parties 
  that have access to your Feedback, a non-exclusive, non-transferable, worldwide, perpetual, 
  irrevocable, royalty-free license to use, disclose, copy, license, modify, sublicense or 
  otherwise distribute and exploit in any manner whatsoever the Feedback you provide regarding 
  the work. You acknowledge that you have no expectation of confidentiality with respect to 
  any Feedback you provide. You represent and warrant that you have rights to provide this 
  Feedback, and if you are providing Feedback on behalf of a company, you represent and warrant 
  that you have the rights to provide Feedback on behalf of your company. You also acknowledge 
  that WS-I is not required to review, discuss, use, consider or in any way incorporate your 
  Feedback into future versions of its work. If WS-I does incorporate some or all of your 
  Feedback in a future version of the work, it may, but is not obligated to include your name 
  (or, if you are identified as acting on behalf of your company, the name of your company) on 
  a list of contributors to the work. If the foregoing is not acceptable to you and any company 
  on whose behalf you are acting, please do not provide any Feedback.
	
  Feedback on this document should be directed to wsi-test-comments@ws-i.org.-->
<xsd:schema targetNamespace="http://ws-i.org/profiles/basic/1.1/xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:simpleType name="swaRef">
    <xsd:restriction base="xsd:anyURI"/>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint></con:endpoints><con:operation isOneWay="false" action="AsyncSoapResponse" name="AsyncSoapResponse" bindingOperationName="AsyncSoapResponse" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="45e3f614-0b12-4992-9f33-6811d9aa3a0a"><con:settings/><con:call name="Request 1" id="6b3ad20b-834a-48fd-a2e7-d68760803d64"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:AsyncSoapResponse>
         <itp:MessageID>?</itp:MessageID>
         <!--You may enter ANY elements at this point-->
      </itp:AsyncSoapResponse>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="AsyncSoapResponse"/></con:call></con:operation><con:operation isOneWay="false" action="checkServerStatus" name="checkServerStatus" bindingOperationName="checkServerStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f83665c9-8f95-43a1-9610-82b29b6d275f"><con:settings/><con:call name="Request 1" id="05b00857-3924-4485-aa06-38076eddedd1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:checkServerStatus>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
      </itp:checkServerStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="checkServerStatus"/></con:call></con:operation><con:operation isOneWay="false" action="checkStartRequestStatus" name="checkStartRequestStatus" bindingOperationName="checkStartRequestStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d750bb47-5770-4305-bfa2-d8436913e9ee"><con:settings/><con:call name="Request 1" id="3415ad91-eee4-45fe-832d-836404793bc4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:checkStartRequestStatus>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--You have a CHOICE of the next 2 items at this level-->
         <!--Optional:-->
         <itp:interactionId>?</itp:interactionId>
         <!--Optional:-->
         <itp:tagId>?</itp:tagId>
      </itp:checkStartRequestStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="checkStartRequestStatus"/></con:call></con:operation><con:operation isOneWay="false" action="controlInstance" name="controlInstance" bindingOperationName="controlInstance" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d0ba1a17-b4a2-4f9e-af0d-b29be44665e0"><con:settings/><con:call name="Request 1" id="3448f6a7-4501-4b71-b484-6b5d61a3773c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:controlInstance>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--You have a CHOICE of the next 4 items at this level-->
         <!--Optional:-->
         <itp:rootUUID>?</itp:rootUUID>
         <!--Optional:-->
         <itp:instanceId>?</itp:instanceId>
         <!--Optional:-->
         <itp:tagId>?</itp:tagId>
         <!--Optional:-->
         <itp:processName>?</itp:processName>
         <itp:action>?</itp:action>
      </itp:controlInstance>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="controlInstance"/></con:call></con:operation><con:operation isOneWay="false" action="controlProcess" name="controlProcess" bindingOperationName="controlProcess" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d45358c8-cf0d-4c2a-b963-05f207ffbd4e"><con:settings/><con:call name="Request 1" id="c06f9fc2-9e1e-45af-8812-7e4442c100a6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:controlProcess>
         <itp:ProcessID>?</itp:ProcessID>
         <itp:action>?</itp:action>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
      </itp:controlProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="controlProcess"/></con:call></con:operation><con:operation isOneWay="false" action="deleteArchivedInstances" name="deleteArchivedInstances" bindingOperationName="deleteArchivedInstances" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="24ae77d9-506b-435e-af84-dcdf6aa481c1"><con:settings/><con:call name="Request 1" id="46493155-c9bf-48e1-8b84-858245717c56"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:deleteArchivedInstances>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>pamadmin</itp:user>
            <itp:password>pamadmin</itp:password>
         </itp:auth>
         <itp:dateRange>
            <itp:fromDate>06/01/2015</itp:fromDate>
            <itp:toDate>07/13/2015</itp:toDate>
         </itp:dateRange>
      </itp:deleteArchivedInstances>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteArchivedInstances"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="deleteAttachments" name="deleteAttachments" bindingOperationName="deleteAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="920d3480-cb76-4649-97b7-011cd6e165dc"><con:settings/><con:call name="Request 1" id="d2bc85db-2c01-4010-ac97-0c3e6e1174f6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:deleteAttachments>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:attachments>
            <!--1 or more repetitions:-->
            <itp:attachmentId>?</itp:attachmentId>
         </itp:attachments>
      </itp:deleteAttachments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="deleteAttachments"/></con:call></con:operation><con:operation isOneWay="false" action="executePendingInteraction" name="executePendingInteraction" bindingOperationName="executePendingInteraction" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="10d9ae1f-9e26-41c2-a273-7114ecffb14d"><con:settings/><con:call name="Request 1" id="855bf689-7576-4dbd-928f-d6cd50eb9ed2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executePendingInteraction>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--Optional:-->
         <itp:params>
            <!--1 or more repetitions:-->
            <itp:param name="?">?</itp:param>
         </itp:params>
         <itp:userInteractionID>?</itp:userInteractionID>
         <!--Optional:-->
         <itp:isApprove>?</itp:isApprove>
      </itp:executePendingInteraction>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="executePendingInteraction"/></con:call></con:operation><con:operation isOneWay="false" action="ExecuteC2OFlow" name="ExecuteProcess" bindingOperationName="ExecuteProcess" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1505a623-8080-4488-be82-e99d1a43ed0f"><con:settings/><con:call name="Request 1" id="d6334dc9-edee-4c26-a22f-f559aa20b781"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>?</itp:name>
            <itp:action>?</itp:action>
            <itp:auth>
               <!--You have a CHOICE of the next 2 items at this level-->
               <itp:token>?</itp:token>
               <itp:user>?</itp:user>
               <itp:password>?</itp:password>
            </itp:auth>
            <!--Optional:-->
            <itp:params>
               <!--1 or more repetitions:-->
               <itp:param name="?">?</itp:param>
            </itp:params>
            <!--Optional:-->
            <itp:options>
               <!--Optional:-->
               <itp:startDate>?</itp:startDate>
               <!--Optional:-->
               <itp:startTime>?</itp:startTime>
               <!--Optional:-->
               <itp:tagId>?</itp:tagId>
               <!--Optional:-->
               <itp:isAutoArchive>true</itp:isAutoArchive>
               <!--Optional:-->
               <itp:priority>?</itp:priority>
            </itp:options>
            <!--Optional:-->
            <itp:attachments attachmentsParamName="?">
               <!--Zero or more repetitions:-->
               <itp:attachment>
                  <itp:attachmentID>cid:450562742097</itp:attachmentID>
                  <itp:name>?</itp:name>
                  <!--Optional:-->
                  <itp:localSourceLocation>?</itp:localSourceLocation>
               </itp:attachment>
            </itp:attachments>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1" id="81d3f6ee-385e-4e29-a27a-a2dfad268de5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_ci_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration151</itp:param>
					 <!--Standard CI Adapter parameters-->

					<itp:param name="z_asset_tag">20150831031819</itp:param>
					<itp:param name="z_business_criticality">most critical</itp:param>
					<itp:param name="z_class">Business Service</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_location">Groote Eylandt</itp:param>
					<itp:param name="z_manufacturer_name">Wacom</itp:param>
					<itp:param name="z_match_type">BiosAsset</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">20150831031819</itp:param>
					<itp:param name="z_operational_status">Repair in Progress</itp:param>
					<itp:param name="z_os_domain">Window10</itp:param>
					<itp:param name="z_serial_number">serial_number20150831031819</itp:param>
					<itp:param name="z_status">In Stock</itp:param>
					<itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
					<itp:param name="z_supported">No</itp:param>
					<itp:param name="z_type">Mouse</itp:param>
					<itp:param name="z_used_for">Staging</itp:param>	
					<itp:param name="z_users_supported">[null]</itp:param>



				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 2_ok" id="3be48045-5d5b-407a-b872-7f05f86165c3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_ci_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration151</itp:param>
					 <!--Standard CI Adapter parameters-->

					<itp:param name="z_asset_tag">20150903035850</itp:param>
					<itp:param name="z_business_criticality">most critical</itp:param>
					<itp:param name="z_class">Business Service</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_location">Groote Eylandt</itp:param>
					<itp:param name="z_manufacturer_name">Wacom</itp:param>
					<itp:param name="z_match_type">BiosAsset</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">20150903035850</itp:param>
					<itp:param name="z_operational_status">Repair in Progress</itp:param>
					<itp:param name="z_os_domain">Window10</itp:param>
					<itp:param name="z_serial_number">serial_number20150903035850</itp:param>
					<itp:param name="z_status">In Stock</itp:param>
					<itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
					<itp:param name="z_supported">No</itp:param>
					<itp:param name="z_type">Mouse</itp:param>
					<itp:param name="z_used_for">Staging</itp:param>	
					<itp:param name="z_users_supported">[null]</itp:param>



				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 3" id="dd3d2c8c-1b46-42d9-901d-b8e694db567b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_ci_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration151</itp:param>
					 <!--Standard CI Adapter parameters-->

					<itp:param name="z_asset_tag">20150903045827</itp:param>
					<itp:param name="z_business_criticality">most critical</itp:param>
					<itp:param name="z_class">Business Service</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_location">Groote Eylandt</itp:param>
					<itp:param name="z_manufacturer_name">Wacom</itp:param>
					<itp:param name="z_match_type">BiosAsset</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">20150903045828</itp:param>
					<itp:param name="z_operational_status">Repair in Progress</itp:param>
					<itp:param name="z_os_domain">Window10</itp:param>
					<itp:param name="z_serial_number">serial_number20150903045827</itp:param>
					<itp:param name="z_status">In Stock</itp:param>
					<itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
					<itp:param name="z_supported">No</itp:param>
					<itp:param name="z_type">Mouse</itp:param>
					<itp:param name="z_used_for">Staging</itp:param>	
					<itp:param name="z_users_supported">[null]</itp:param>



				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of sd_ci_retire" id="8ba13712-3111-4902-b22b-417038c29ad3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_retire</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration155</itp:param>
               <!--Standard CI Adapter parameters-->
              
              
               <itp:param name="z_class">Business Service</itp:param>
               <itp:param name="z_company">CSC Internal</itp:param>
              
              
              
               <itp:param name="z_name">20150904032037</itp:param>
              
              
			<itp:param name="z_sys_id">9bb690e56f124a00c5afbd5dbb3ee43e</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="sd_ci_rel_create (snow ->3rd)" id="2951c55a-4db5-4ed8-9936-9c25b58d3fee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_create</itp:param>
		  <itp:param name="sender">cscpcomdc101de.emea.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>

		  <!--qbe servicenow incident adapter parameters-->		  
		  <itp:param name="z_parent_company">CSC Internal</itp:param>	
		  <itp:param name="z_parent_class">Business Service</itp:param>
		  <itp:param name="z_parent_config_item">20150908080057</itp:param>		  	  
		  <itp:param name="z_child_class">Business Service</itp:param>
		  <itp:param name="z_child_company">CSC Internal</itp:param>
		  <itp:param name="z_child_config_item">20150909080057</itp:param> 
		  <itp:param name="z_type">Members::Member of</itp:param>
          <itp:param name="z_sys_id">cb9855c36f9ac6001a72be4dbb3ee45e</itp:param>

		  <itp:param name="z_port"></itp:param>
		  <itp:param name="z_connection_strength"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username/><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="sd_ci_rel_break (sn-3rd)" id="b4b70e6d-6280-4026-a163-8a6cfbd172a0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_break</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration155</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">CSC Internal</itp:param>	
		  <itp:param name="z_parent_class">Business Service</itp:param>
		  <itp:param name="z_parent_config_item">20150909044048</itp:param>		  	  
		  <itp:param name="z_child_class">Business Service</itp:param>
		  <itp:param name="z_child_company">CSC Internal</itp:param>
		  <itp:param name="z_child_config_item">20150910044048</itp:param> 
		  <itp:param name="z_type">Members::Member of</itp:param>
          <itp:param name="z_sys_id">9fe91a436f1e8a00c5afbd5dbb3ee4d5</itp:param>

	

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 8" id="19b3506e-2d45-4917-aab2-6f9827805df3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Incident/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>hle49</itp:user>
					<itp:password>password</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="module">Incident</itp:param>
					<itp:param name="path">/Framwork/Processes/CSC ServiceNow to Standard/</itp:param>
					<itp:param name="z_transaction_code">pro_inc_report</itp:param>
					<!--  -->
					<!-- mandatory -->
					<itp:param name="z_number">INC0035286</itp:param>
					<itp:param name="z_assignment_group">AT&amp;T - Cyber &amp; Firewall Offshore</itp:param>
					<itp:param name="z_category">Environmental</itp:param>
					<itp:param name="z_subcategory">Computer Room Failure</itp:param>
					<itp:param name="z_company"></itp:param>
					<itp:param name="z_contact_email_address">test@csc.com</itp:param>
					<itp:param name="z_incident_summary">z_incident_summary</itp:param>
					<itp:param name="z_short_description">this is short description</itp:param>
					<itp:param name="z_work_notes">this is z_work_notes</itp:param>
					<itp:param name="z_created">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<!--  -->
					<!-- lookup -->
					<itp:param name="z_urgency">2</itp:param>
					<itp:param name="z_priority">2</itp:param>
					<itp:param name="z_impact">2</itp:param>
					<itp:param name="z_contact_type">External</itp:param>
					<!--  -->
					<!-- non-mandatory -->
					<itp:param name="z_business_service">z_business_service</itp:param>
					<itp:param name="z_configuration_item">z_configuration_item</itp:param>
					<itp:param name="z_contact_corporate_id">z_contact_corporate_id</itp:param>
					<itp:param name="z_contact_department">z_contact_department</itp:param>
					<itp:param name="z_contact_first_name">z_contact_first_name</itp:param>
					<itp:param name="z_contact_last_name">z_contact_last_name</itp:param>
					<itp:param name="z_contact_middle_name">z_contact_middle_name</itp:param>
					<itp:param name="z_contact_phone_number">z_contact_phone_number</itp:param>
					<!--  -->
					<!-- caller for contact address -->
					<itp:param name="z_caller_street">street A</itp:param>
					<itp:param name="z_caller_city">city B</itp:param>
					<itp:param name="z_caller_state">state C</itp:param>
					<itp:param name="z_caller_zip">Zip0001</itp:param>
					<!--  -->
					<!-- Time  -->
					<itp:param name="z_transaction_start_time">formatDate(now(),'yyyy-MM-dd HH:mm:ss')</itp:param>
					<itp:param name="z_due_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<!--  -->
					<!--  List -->
					<itp:param name="z_impacted_services">z_impacted_services1; z_impacted_services2; z_impacted_services3;</itp:param>
					<itp:param name="z_affected_cis">z_affected_cis1; z_affected_cis2; z_affected_cis3;</itp:param>
					<itp:param name="z_affected_locations">z_affected_locations1; z_affected_locations2;</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call id="a746bc3c-84dc-4885-8ee5-22e86f68aba1" name="pro_req_update (snow-3rd)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>tnguyen347</itp:user>
					<itp:password>tnguyen347</itp:password>
				</itp:auth>
				<itp:params>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_assignment_group"></itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_transaction_code">pro_req_update</itp:param>
					<itp:param name="z_external_number">TAN20151026</itp:param>
					<itp:param name="z_number">REQ0014956</itp:param> 
					<itp:param name="z_stage">Application Access</itp:param>
					<itp:param name="z_state">Work in Progress</itp:param>
					<itp:param name="location">100 MAIN ST, Charleston, South Carolina</itp:param>
					<itp:param name="requested_for">dlayne@csc.com</itp:param>
					<itp:param name="estimated_delivery_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="due_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="configuration_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="additional_comments">this request just for testing</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call><con:call id="eaff458a-2e13-4cce-bcf2-3d657332ddc5" name="create_request"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>vtran24</csc:user>
               <csc:password>vtran24</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">sd_req_assign</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_assignment_group"/>
               <csc:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"/>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference"/>
               <csc:param name="z_item_description"/>
               <csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
               <csc:param name="z_quantity"/>
               <csc:param name="z_request_identifier">TAN20151026</csc:param>
               <csc:param name="z_request_state"/>
               <csc:param name="z_requested_for">dlayne@csc.com</csc:param>
               <csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="z_service_attribute_name"/>
               <csc:param name="z_service_attribute_value"/>
               <csc:param name="z_short_description"/>
               <csc:param name="z_workinfo_notes">This create by calling SOAPUI by Tan for testing</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="executeStartRequest" name="executeStartRequest" bindingOperationName="executeStartRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="212a2fc3-2d72-4a84-8bff-9a0c863ab7c7"><con:settings/><con:call name="Request 1" id="a476f217-581b-4cc5-b894-3c6838a3d39a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeStartRequest>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:objLocation>
            <itp:name>?</itp:name>
            <itp:path>?</itp:path>
         </itp:objLocation>
         <!--Optional:-->
         <itp:params>
            <!--1 or more repetitions:-->
            <itp:param name="?">?</itp:param>
         </itp:params>
         <!--Optional:-->
         <itp:options>
            <!--Optional:-->
            <itp:startDate>?</itp:startDate>
            <!--Optional:-->
            <itp:startTime>?</itp:startTime>
            <!--Optional:-->
            <itp:tagId>?</itp:tagId>
            <!--Optional:-->
            <itp:isAutoArchive>true</itp:isAutoArchive>
            <!--Optional:-->
            <itp:priority>?</itp:priority>
         </itp:options>
         <!--Optional:-->
         <itp:attachments attachmentsParamName="?">
            <!--Zero or more repetitions:-->
            <itp:attachment>
               <itp:attachmentID>cid:1046626284136</itp:attachmentID>
               <itp:name>?</itp:name>
               <!--Optional:-->
               <itp:localSourceLocation>?</itp:localSourceLocation>
            </itp:attachment>
         </itp:attachments>
      </itp:executeStartRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="executeStartRequest"/></con:call></con:operation><con:operation isOneWay="false" action="exportObject" name="exportObject" bindingOperationName="exportObject" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="98f27953-2cad-4ff0-b38e-4111101be211"><con:settings/><con:call name="Request 1" id="e328306f-373b-4435-8fa8-7b4133e05e51"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:exportObject>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:folderName>?</itp:folderName>
         <itp:isAbsolute>?</itp:isAbsolute>
         <!--Optional:-->
         <itp:downloadFileName>
            <itp:downloadLocation>?</itp:downloadLocation>
            <itp:fileName>?</itp:fileName>
            <itp:overwriteFile>?</itp:overwriteFile>
         </itp:downloadFileName>
         <!--Optional:-->
         <itp:filter>
            <!--Optional:-->
            <itp:exportObjectTypes>
               <!--1 or more repetitions:-->
               <itp:objectType>?</itp:objectType>
            </itp:exportObjectTypes>
         </itp:filter>
      </itp:exportObject>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="exportObject"/></con:call></con:operation><con:operation isOneWay="false" action="generateEvent" name="generateEvent" bindingOperationName="generateEvent" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="121a0299-bace-4a89-883e-ff9ee3121c88"><con:settings/><con:call name="Request 1" id="af1e696b-4341-4ee7-ae37-3293d0621a53"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:generateEvent>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:eventName>?</itp:eventName>
         <!--Optional:-->
         <itp:eventType>?</itp:eventType>
         <!--Optional:-->
         <itp:eventSource>?</itp:eventSource>
         <!--Optional:-->
         <itp:eventDestination>?</itp:eventDestination>
         <!--Optional:-->
         <itp:eventExpDuration>?</itp:eventExpDuration>
         <!--You have a CHOICE of the next 2 items at this level-->
         <!--Optional:-->
         <itp:payload>?</itp:payload>
         <!--Optional:-->
         <itp:params>
            <!--1 or more repetitions:-->
            <itp:param name="?">?</itp:param>
         </itp:params>
         <!--Optional:-->
         <itp:toSingleSubscriber>false</itp:toSingleSubscriber>
      </itp:generateEvent>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="generateEvent"/></con:call></con:operation><con:operation isOneWay="false" action="getAttachments" name="getAttachments" bindingOperationName="getAttachments" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d14ae297-8d03-4302-acff-1685753482c1"><con:settings/><con:call name="Request 1" id="fc8b297b-7d76-48ba-b382-69f0d4020803"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getAttachments>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--Optional:-->
         <itp:filter>
            <!--Optional:-->
            <itp:contentId>?</itp:contentId>
            <!--Optional:-->
            <itp:contentType>?</itp:contentType>
         </itp:filter>
      </itp:getAttachments>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getAttachments"/></con:call></con:operation><con:operation isOneWay="false" action="getITPamVersionInfo" name="getITPamVersionInfo" bindingOperationName="getITPamVersionInfo" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="14264db8-f162-4960-b459-154a5897b67b"><con:settings/><con:call name="Request 1" id="3142c3e5-511b-40c6-8749-3db06c361d02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getITPamVersion>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
      </itp:getITPamVersion>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getITPamVersionInfo"/></con:call></con:operation><con:operation isOneWay="false" action="getMatchingEvents" name="getMatchingEvents" bindingOperationName="getMatchingEvents" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="41be2fd9-ed5c-4ec0-9b14-6a020cacdf69"><con:settings/><con:call name="Request 1" id="f64f7fb7-662b-44ad-b7b1-7d7595a5aaa6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getMatchingEvents>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--Optional:-->
         <itp:eventName>?</itp:eventName>
         <!--Optional:-->
         <itp:eventType>?</itp:eventType>
         <!--Optional:-->
         <itp:eventSource>?</itp:eventSource>
         <!--Optional:-->
         <itp:eventDestination>?</itp:eventDestination>
         <!--Optional:-->
         <itp:eventExpression>?</itp:eventExpression>
         <!--Optional:-->
         <itp:enablePatternMatch>false</itp:enablePatternMatch>
         <!--Optional:-->
         <itp:allowPartialMatch>false</itp:allowPartialMatch>
         <!--Optional:-->
         <itp:consumeEvents>false</itp:consumeEvents>
         <!--Optional:-->
         <itp:retrieveAllMatchingEvents>true</itp:retrieveAllMatchingEvents>
         <!--Optional:-->
         <itp:uniqueId>?</itp:uniqueId>
      </itp:getMatchingEvents>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getMatchingEvents"/></con:call></con:operation><con:operation isOneWay="false" action="getPendingInteractionRequestForm" name="getPendingInteractionRequestForm" bindingOperationName="getPendingInteractionRequestForm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="30e338ac-cec2-4398-b56c-0aaa3151e921"><con:settings/><con:call name="Request 1" id="e565eec1-1d1f-422a-9de8-a2d9a198f341"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getPendingInteractionRequestForm getParamSequence="false" getApprovalRequired="false">
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:userInteractionID>?</itp:userInteractionID>
      </itp:getPendingInteractionRequestForm>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPendingInteractionRequestForm"/></con:call></con:operation><con:operation isOneWay="false" action="getPendingUserInteractions" name="getPendingUserInteractions" bindingOperationName="getPendingUserInteractions" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ca126075-fa51-4ed7-8e95-28683d7cff57"><con:settings/><con:call name="Request 1" id="453fd24c-9cbd-4048-8215-2721d8cc4e53"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getPendingUserInteractions getRootUUID="false">
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--You have a CHOICE of the next 2 items at this level-->
         <!--Optional:-->
         <itp:rootUUID>?</itp:rootUUID>
         <!--Optional:-->
         <itp:processID>?</itp:processID>
      </itp:getPendingUserInteractions>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getPendingUserInteractions"/></con:call></con:operation><con:operation isOneWay="false" action="getProcessLogs" name="getProcessLogs" bindingOperationName="getProcessLogs" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5594fe24-6bac-4815-944c-73fde91e3497"><con:settings/><con:call name="Request 1" id="7b6bdbf8-d193-4eb1-8bbb-afec41a7d66d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getProcessLogs>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:processID>?</itp:processID>
         <!--Optional:-->
         <itp:filter>
            <!--Optional:-->
            <itp:level>?</itp:level>
            <!--Optional:-->
            <itp:categories>
               <!--1 or more repetitions:-->
               <itp:category>?</itp:category>
            </itp:categories>
         </itp:filter>
      </itp:getProcessLogs>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getProcessLogs"/></con:call></con:operation><con:operation isOneWay="false" action="GetFlowState" name="getProcessStatus" bindingOperationName="getProcessStatus" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ebb7202c-8490-42e8-9729-6bb6c3fc91de"><con:settings/><con:call name="Request 1" id="af5974dc-8bf3-4499-96ea-346c7385ee54"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getProcessStatus>
         <itp:flow>
            <!--You have a CHOICE of the next 2 items at this level-->
            <!--Optional:-->
            <itp:ROID>?</itp:ROID>
            <!--Optional:-->
            <itp:tagId>?</itp:tagId>
            <itp:action>?</itp:action>
            <itp:auth>
               <!--You have a CHOICE of the next 2 items at this level-->
               <itp:token>?</itp:token>
               <itp:user>?</itp:user>
               <itp:password>?</itp:password>
            </itp:auth>
         </itp:flow>
      </itp:getProcessStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="GetFlowState"/></con:call></con:operation><con:operation isOneWay="false" action="getStartRequestForm" name="getStartRequestForm" bindingOperationName="getStartRequestForm" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0b9db769-dae1-42e7-a19c-0c83170f98ae"><con:settings/><con:call name="Request 1" id="2a882718-25c4-48c1-9567-2f1701a19e6d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getStartRequestForm getParamSequence="false">
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <itp:objLocation>
            <itp:name>?</itp:name>
            <itp:path>?</itp:path>
         </itp:objLocation>
      </itp:getStartRequestForm>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getStartRequestForm"/></con:call></con:operation><con:operation isOneWay="false" action="getStartRequestForms" name="getStartRequestForms" bindingOperationName="getStartRequestForms" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3130aaf8-c749-400a-bd12-3f11c87e3f14"><con:settings/><con:call name="Request 1" id="33d8dbc7-d555-49b2-b5a2-d327bf1805b3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:getStartRequestForms>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--Optional:-->
         <itp:filter>
            <!--Optional:-->
            <itp:lookUpPath isRecursive="true">?</itp:lookUpPath>
            <!--Optional:-->
            <itp:keywords>
               <!--1 or more repetitions:-->
               <itp:keyword>?</itp:keyword>
            </itp:keywords>
         </itp:filter>
      </itp:getStartRequestForms>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="getStartRequestForms"/></con:call></con:operation><con:operation isOneWay="false" action="importObject" name="ImportObject" bindingOperationName="ImportObject" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="true" anonymous="optional" id="889416fb-c9ac-402f-85f0-6cef93108b1f"><con:settings/><con:call name="Request 1" id="79d50acc-4c54-4ebc-b17e-816ff3e184df"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:importFileParam>
         <itp:auth>
            <!--You have a CHOICE of the next 2 items at this level-->
            <itp:token>?</itp:token>
            <itp:user>?</itp:user>
            <itp:password>?</itp:password>
         </itp:auth>
         <!--Optional:-->
         <itp:importLocation>?</itp:importLocation>
         <!--Optional:-->
         <itp:localSourceLocation>?</itp:localSourceLocation>
         <!--Optional:-->
         <itp:isSetCurrent>?</itp:isSetCurrent>
         <!--Optional:-->
         <itp:isMakeAvailable>?</itp:isMakeAvailable>
         <!--Optional:-->
         <itp:overwriteAction>incrementObjectVersion</itp:overwriteAction>
      </itp:importFileParam>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="importObject"/></con:call><con:requestParts><con:part name="objectXml"><con:contentType>text/xml</con:contentType></con:part></con:requestParts></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_change_create}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_change_create.do?WSDL" id="67ab3f66-48ff-4c78-90d0-6805e54781bf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_change_create.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_change_create" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_change_create" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_change_create">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_change_create" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_create/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_change_create">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a3e96470-4acc-42da-af89-7b2ea39872e3"><con:settings/><con:call name="Request 1" id="69fd2bc5-1bbd-468b-bf91-14e7b2171547"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="01a055e4-77ec-41dc-86a6-0ef4fdb1ac7a"><con:settings/><con:call name="Request 1" id="b83ab227-85a9-46ab-ae3e-079acd141bc3"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="33cc4208-5d0d-4a25-9c05-d86b91f261fb"><con:settings/><con:call name="Request 1" id="384fd142-f296-41b7-b0af-f8ae7c4d69e4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c139b3f0-7fd9-4311-b84a-c90ef7ee3600"><con:settings/><con:call name="Request 1" id="7dc320d3-c67c-4054-bed6-2a85d98b4f30"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="208089ef-0851-4fff-84cb-ba0838613f05"><con:settings/><con:call name="Request 1" id="8743b6a9-f416-4771-b569-3636747e4aad"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a3b0aeb2-213b-4630-9df1-c1a1f7c50a81"><con:settings/><con:call name="Request 1" id="73e87312-0b8b-4b58-b8bf-8eedfeb7b45d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_create/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="04879a5a-29a7-426f-8b10-c3f430e0174a"><con:settings/><con:call name="Request 1" id="7c427d77-522f-4053-8e74-07ab6d4dbb30"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/change_task}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/change_task_list.do?WSDL" id="393f1b59-0cbe-430d-9afa-708df4e4c872" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/change_task_list.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/change_task_list.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/change_task" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/change_task" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/change_task">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="change_request" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sequence" type="xsd:decimal"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_template" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="change_task" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="change_task" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="change_task" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="change_task" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="change_task" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="change_task" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="change_task" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="change_task" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="change_task" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="change_task" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="change_task" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="change_task" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="change_task" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="change_task" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/change_task/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/change_task/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/change_task/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/change_task/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/change_task/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/change_task/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/change_task/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_change_task">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/change_task_list.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/change_task/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8cb989e1-5ad6-49fe-8574-d24b38f1f0a9"><con:settings/><con:call name="Request 1" id="b20a2065-d425-4fff-b5e0-2aadcb539a70"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:deleteMultiple>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <change_request>?</change_request>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_sequence>?</u_sequence>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </chan:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="5d4722d6-9d7f-4c19-90cf-6cbc7bea9857"><con:settings/><con:call name="Request 1" id="e5f35d93-5fca-41e8-9b6b-54ade8ad8aec"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:deleteRecord>
         <sys_id>?</sys_id>
      </chan:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3921adaf-fb5e-44b2-a746-e8a22e97f674"><con:settings/><con:call name="Request 1" id="195348af-7cb5-4af3-b16c-3befe44a2d94"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </chan:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="158f5b68-0e44-46ec-a5a8-5fd89b6b67a1"><con:settings/><con:call name="Request 1" id="bed6577c-7d3d-42db-9fad-f22e2a761e98"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:getKeys>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <change_request>?</change_request>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_sequence>?</u_sequence>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </chan:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="78bfa779-6b79-4390-9078-c43be4114040"><con:settings/><con:call name="Request 1" id="3888243a-0292-49f9-9511-dbf122776238"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:getRecords>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <change_request>?</change_request>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_sequence>?</u_sequence>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </chan:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="744341e8-668b-435c-bc43-930b31ad66df"><con:settings/><con:call name="Request 1" id="cc3bf8eb-a21e-49ba-9d06-8b6d4c64c464"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <change_request>?</change_request>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_sequence>?</u_sequence>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/change_task/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f41176e9-add7-4b67-be8a-15ae854773a2"><con:settings/><con:call name="Request 1" id="effd217d-ad4b-4722-9eb8-93435c290a3f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:update>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <change_request>?</change_request>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_sequence>?</u_sequence>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </chan:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_incident_create}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?WSDL" id="38b26a4e-d280-46e1-9dc3-fb1724e1e6ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_incident_create" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_incident_create" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_incident_create">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_create" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_create/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_incident_create">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="355aaf77-5dc7-4d92-9318-84661a32ea48"><con:settings/><con:call name="Request 1" id="ea1eaa64-cfbd-4661-81e6-16d84b204174"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_domain>?</u_domain>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="37a815d8-81cc-45d0-b91b-5237fbf85665"><con:settings/><con:call name="Request 1" id="5ea60a1f-9f3b-492d-a34d-e7407506da93"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7023ad32-7169-4ce0-8331-d4a2c67a8d5a"><con:settings/><con:call name="Request 1" id="95c17b0f-5340-405a-bbb0-553c5ec4e43f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="43e2da74-f0ba-4183-bb61-039b58ea4d6c"><con:settings/><con:call name="Request 1" id="8cd4d6be-38f2-43eb-beeb-f0ea57877168"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_domain>?</u_domain>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="21bc46d3-a1e1-4544-8e5f-cbe5382330ca"><con:settings/><con:call name="Request 1" id="5849c908-f19d-4fc7-8958-8c88297b28f4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_domain>?</u_domain>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0a39a6ec-de9c-45d9-9a26-d4cea48a29e3"><con:settings/><con:call name="Request 1" id="109d5830-8bcc-4e12-bd87-7e905f8a8ab0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_domain>?</u_domain>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_create/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bcdef677-ac61-45ef-a1e8-5fbd6ae3b32e"><con:settings/><con:call name="Request 1" id="a5e4d5b0-85ab-4b9b-908b-536a81bb6823"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_domain>?</u_domain>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_problem_create}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?WSDL" id="f920bc35-d850-4633-aae8-26ce9a4a06ec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_problem_create" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_problem_create" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_problem_create">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_problem_statement" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_workaround" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_problem_create" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_problem_create/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_problem_create">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ed8c0e06-aa0a-4739-8406-03e62463b7e5"><con:settings/><con:call name="Request 1" id="3b1e16a2-460b-4ef6-8121-9be4e17dda57"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_opened_by>?</u_opened_by>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_problem_statement>?</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <u_workaround>?</u_workaround>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f7453424-6fbd-4ba7-bdf4-b8bac6a9f5fb"><con:settings/><con:call name="Request 1" id="74989adf-07e2-4787-9206-d3883ff243b9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="38c37f13-c434-450b-bd79-c20bfc3fe129"><con:settings/><con:call name="Request 1" id="d81ee783-ed73-42bf-a4e7-fa0e2dd7f513"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="745d8764-d827-4c8d-812a-7979138e4c4f"><con:settings/><con:call name="Request 1" id="f1967a42-e370-447b-a583-deadcbf7fbed"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_opened_by>?</u_opened_by>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_problem_statement>?</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <u_workaround>?</u_workaround>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4da5066b-e169-4cc9-9c84-e39b9f2ca2eb"><con:settings/><con:call name="Request 1" id="ee75cd37-49eb-4d61-b704-840b8849a362"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_opened_by>?</u_opened_by>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_problem_statement>?</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <u_workaround>?</u_workaround>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8815cc20-856b-47b7-abbf-3b72a398053e"><con:settings/><con:call name="Request 1" id="0f64eaa4-a7a4-4966-b4a5-2d5ac8f8ad46"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_opened_by>?</u_opened_by>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_problem_statement>?</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <u_workaround>?</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_problem_create/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b50ff7a7-6f4e-42c8-aebe-0ed319c30c1f"><con:settings/><con:call name="Request 1" id="20bbbfda-5b0a-4ed5-a55d-fcc4a62f3af5"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_opened_by>?</u_opened_by>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_problem_statement>?</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <u_workaround>?</u_workaround>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/sc_task}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/sc_task_list.do?WSDL" id="b9f9f967-09ad-45d9-aafe-85a2dbff8aa5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/sc_task_list.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/sc_task_list.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/sc_task" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/sc_task" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/sc_task">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_stc" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="sc_task" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="sc_task" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="sc_task" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="sc_task" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="sc_task" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="sc_task" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="sc_task" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="sc_task" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="sc_task" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="sc_task" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="sc_task" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="sc_task" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="sc_task" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="sc_task" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/sc_task/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/sc_task/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/sc_task/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/sc_task/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/sc_task/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/sc_task/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/sc_task/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_sc_task">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/sc_task_list.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f04bf894-5c14-4a0e-92fe-c445e4b45dd7"><con:settings/><con:call name="Request 1" id="74332b2c-9051-4738-b4b5-11e7592d8f93"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:deleteMultiple>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <calendar_stc>?</calendar_stc>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <request_item>?</request_item>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6443bb5d-bd09-45a6-bc91-ba03e67cd435"><con:settings/><con:call name="Request 1" id="25204afc-7a89-43ac-acae-043605b4860d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:deleteRecord>
         <sys_id>?</sys_id>
      </sc:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e2ab3b7d-0199-4984-969c-e6d37a7f0d7b"><con:settings/><con:call name="Request 1" id="66998d13-12a1-49ca-aa31-67e186e6ad91"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </sc:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="75b7b6aa-441e-4cae-9f3d-013843b74496"><con:settings/><con:call name="Request 1" id="5df4f2ee-676a-48c3-874a-d46ea95bd2f0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:getKeys>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <calendar_stc>?</calendar_stc>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <request_item>?</request_item>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </sc:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bf8f13ab-23a4-4d12-91be-688a9f05c569"><con:settings/><con:call name="Request 1" id="bc6af924-d11d-4d9c-a637-d13662c30188"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:getRecords>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <calendar_stc>?</calendar_stc>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <request_item>?</request_item>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </sc:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8ad4a2ca-6d64-4d6c-a7a4-45532d0eb25b"><con:settings/><con:call name="Request 1" id="223f1b8a-3901-43d4-8d6d-52f6910fb90f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <calendar_stc>?</calendar_stc>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <request_item>?</request_item>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_task/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f3c98766-eab1-4be2-8203-63573cde0273"><con:settings/><con:call name="Request 1" id="6737f2cc-78b6-4b2e-9b69-00219030166c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:update>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <calendar_stc>?</calendar_stc>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <priority>?</priority>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <request_item>?</request_item>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <state>?</state>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_task/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_request_create}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_request_create.do?WSDL" id="4db25130-2845-4111-94f0-b00db122a99d" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_request_create.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_request_create" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_request_create" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_request_create">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_catalog_item_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_for_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_task_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_request_create" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_request_create/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_request_create">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8a2e506d-8911-403b-91b4-2bd31297676e"><con:settings/><con:call name="Request 1" id="ba5ef1bc-fbfc-4ce3-b852-7caaa0f19f04"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>?</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item>?</u_request_item>
         <!--Optional:-->
         <u_requested_for>?</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>?</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_task_description>?</u_task_description>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b49384bd-05ae-4d21-a028-6bb5f7cdb093"><con:settings/><con:call name="Request 1" id="4c968e18-50a5-4965-9e60-f8af5b08ed11"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="330c4fff-3f9e-433a-a944-1cb2aab8656b"><con:settings/><con:call name="Request 1" id="d12aff20-5861-4b1d-bf76-bd267b55be59"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="73ecb57e-dc2a-4cf4-8ab2-eee1654269f0"><con:settings/><con:call name="Request 1" id="88806fd6-a962-4959-aa11-4b2603da43a1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>?</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item>?</u_request_item>
         <!--Optional:-->
         <u_requested_for>?</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>?</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_task_description>?</u_task_description>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d75db605-8c64-4530-9908-0ad12d6ef86a"><con:settings/><con:call name="Request 1" id="b22fd042-e0e4-4f2f-9348-7c6d30490d4e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>?</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item>?</u_request_item>
         <!--Optional:-->
         <u_requested_for>?</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>?</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_task_description>?</u_task_description>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="93d95f61-37e5-496b-ad76-5c4be3a1f311"><con:settings/><con:call name="Request 1" id="8ebb0293-1284-46f3-a69c-f99a08c2188f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>?</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item>?</u_request_item>
         <!--Optional:-->
         <u_requested_for>?</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>?</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_task_description>?</u_task_description>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_request_create/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f14dc30b-92c4-4191-8165-307bca687d40"><con:settings/><con:call name="Request 1" id="691728b2-56b0-400c-9b65-ad40444e52e4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>?</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item>?</u_request_item>
         <!--Optional:-->
         <u_requested_for>?</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>?</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_task_description>?</u_task_description>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_request_create/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_cmdb_create}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?wsdl" id="05ce2ca9-7541-4d7e-b327-549c33a62eb8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?wsdl"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_create" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_cmdb_create" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_create">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_agent_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_devices" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attached_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_audible_alarm_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bandwidth" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_current" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_last_replaced" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_temperature" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_battery_voltage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_busines_criticality" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_bypass_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_hub" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_partitionvlans" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_print" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_route" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_can_switch" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_capacity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_rom" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cd_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_channels" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_chassis_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_class_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_classifier" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cluster_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_color" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_colors" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_computer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_core_thread" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_speed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cpu_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_amps" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_current_load_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_date_of_man" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_db_server" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_default_gateway" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_device_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_size" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_disk_space" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_dr_backup" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_charge_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_est_mins_remaining" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fault_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firewall_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_firmware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_floppy" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_footprint" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_form_factor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_substatus" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_hardware_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_high_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_horizontal_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_input_line_bads" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_install_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_kernel_release" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_key" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_available" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_license_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_battery_threshold_mins" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_low_voltage_transfer_point" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_mainframe" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_managed_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_master_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_msft_sms_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_input_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_nom_output_volt" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_operational_status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_address_width" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_service_pack" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_os_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_outlet_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_freq" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_output_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_package_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_paper" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_part_of" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pcl" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_physical_interface_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_pid" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ports" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_postscript" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_power_consumption" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ppm" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_print_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_provided_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rack_units_in_use" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_raid_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ram" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_range" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_power" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_rated_output_va" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_resolution_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_seconds_on_battery_desired" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_skip_sync" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sla" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_tcp_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_unverified" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ups_software_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_count" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_use_units" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_user_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_version" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_vertical_resolution" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_virtual" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_watts" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_create" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_create/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_cmdb_create">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="046db362-ab50-4d42-b7ac-0ab1ca050f0f"><con:settings/><con:call name="Request 1" id="4ec86acb-4cb7-48fa-88b1-2f27904dc0a2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_agent_software_version>?</u_agent_software_version>
         <!--Optional:-->
         <u_asset>?</u_asset>
         <!--Optional:-->
         <u_asset_tag>?</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to>?</u_assigned_to>
         <!--Optional:-->
         <u_attached_devices>?</u_attached_devices>
         <!--Optional:-->
         <u_attached_to>?</u_attached_to>
         <!--Optional:-->
         <u_attributes>?</u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status>?</u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth>?</u_bandwidth>
         <!--Optional:-->
         <u_battery_current>?</u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced>?</u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status>?</u_battery_status>
         <!--Optional:-->
         <u_battery_temperature>?</u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage>?</u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality>?</u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq>?</u_bypass_freq>
         <!--Optional:-->
         <u_can_hub>?</u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans>?</u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print>?</u_can_print>
         <!--Optional:-->
         <u_can_route>?</u_can_route>
         <!--Optional:-->
         <u_can_switch>?</u_can_switch>
         <!--Optional:-->
         <u_capacity>?</u_capacity>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_cd_rom>?</u_cd_rom>
         <!--Optional:-->
         <u_cd_speed>?</u_cd_speed>
         <!--Optional:-->
         <u_change_control>?</u_change_control>
         <!--Optional:-->
         <u_channels>?</u_channels>
         <!--Optional:-->
         <u_chassis_type>?</u_chassis_type>
         <!--Optional:-->
         <u_checked_in>?</u_checked_in>
         <!--Optional:-->
         <u_checked_out>?</u_checked_out>
         <!--Optional:-->
         <u_class_name>?</u_class_name>
         <!--Optional:-->
         <u_class_sys_id>?</u_class_sys_id>
         <!--Optional:-->
         <u_classification>?</u_classification>
         <!--Optional:-->
         <u_classifier>?</u_classifier>
         <!--Optional:-->
         <u_cluster_status>?</u_cluster_status>
         <!--Optional:-->
         <u_color>?</u_color>
         <!--Optional:-->
         <u_colors>?</u_colors>
         <!--Optional:-->
         <u_comments>?</u_comments>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_computer>?</u_computer>
         <!--Optional:-->
         <u_correlation_id>?</u_correlation_id>
         <!--Optional:-->
         <u_cost>?</u_cost>
         <!--Optional:-->
         <u_cost_cc>?</u_cost_cc>
         <!--Optional:-->
         <u_cost_center>?</u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count>?</u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread>?</u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count>?</u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer>?</u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name>?</u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed>?</u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type>?</u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps>?</u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state>?</u_current_load_state>
         <!--Optional:-->
         <u_date_of_man>?</u_date_of_man>
         <!--Optional:-->
         <u_db_server>?</u_db_server>
         <!--Optional:-->
         <u_default_gateway>?</u_default_gateway>
         <!--Optional:-->
         <u_delivery_date>?</u_delivery_date>
         <!--Optional:-->
         <u_department>?</u_department>
         <!--Optional:-->
         <u_device_type>?</u_device_type>
         <!--Optional:-->
         <u_discovery_source>?</u_discovery_source>
         <!--Optional:-->
         <u_disk_size>?</u_disk_size>
         <!--Optional:-->
         <u_disk_space>?</u_disk_space>
         <!--Optional:-->
         <u_dns_domain>?</u_dns_domain>
         <!--Optional:-->
         <u_dr_backup>?</u_dr_backup>
         <!--Optional:-->
         <u_due>?</u_due>
         <!--Optional:-->
         <u_due_in>?</u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining>?</u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining>?</u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count>?</u_fault_count>
         <!--Optional:-->
         <u_firewall_status>?</u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer>?</u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version>?</u_firmware_version>
         <!--Optional:-->
         <u_first_discovered>?</u_first_discovered>
         <!--Optional:-->
         <u_floppy>?</u_floppy>
         <!--Optional:-->
         <u_footprint>?</u_footprint>
         <!--Optional:-->
         <u_form_factor>?</u_form_factor>
         <!--Optional:-->
         <u_fqdn>?</u_fqdn>
         <!--Optional:-->
         <u_gl_account>?</u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus>?</u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version>?</u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point>?</u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution>?</u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_input_line_bads>?</u_input_line_bads>
         <!--Optional:-->
         <u_install_count>?</u_install_count>
         <!--Optional:-->
         <u_install_date>?</u_install_date>
         <!--Optional:-->
         <u_install_status>?</u_install_status>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number>?</u_invoice_number>
         <!--Optional:-->
         <u_ip_address>?</u_ip_address>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_kernel_release>?</u_kernel_release>
         <!--Optional:-->
         <u_key>?</u_key>
         <!--Optional:-->
         <u_last_discovered>?</u_last_discovered>
         <!--Optional:-->
         <u_lease_id>?</u_lease_id>
         <!--Optional:-->
         <u_license_available>?</u_license_available>
         <!--Optional:-->
         <u_license_count>?</u_license_count>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins>?</u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point>?</u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address>?</u_mac_address>
         <!--Optional:-->
         <u_mainframe>?</u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule>?</u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by>?</u_managed_by>
         <!--Optional:-->
         <u_managed_domain>?</u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>?</u_manufacturer>
         <!--Optional:-->
         <u_master_state>?</u_master_state>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_model_id>?</u_model_id>
         <!--Optional:-->
         <u_model_number>?</u_model_number>
         <!--Optional:-->
         <u_monitor>?</u_monitor>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_msft_sms_id>?</u_msft_sms_id>
         <!--Optional:-->
         <u_name>?</u_name>
         <!--Optional:-->
         <u_nom_input_freq>?</u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt>?</u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq>?</u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt>?</u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status>?</u_operational_status>
         <!--Optional:-->
         <u_order_date>?</u_order_date>
         <!--Optional:-->
         <u_os>?</u_os>
         <!--Optional:-->
         <u_os_address_width>?</u_os_address_width>
         <!--Optional:-->
         <u_os_domain>?</u_os_domain>
         <!--Optional:-->
         <u_os_service_pack>?</u_os_service_pack>
         <!--Optional:-->
         <u_os_version>?</u_os_version>
         <!--Optional:-->
         <u_outlet_count>?</u_outlet_count>
         <!--Optional:-->
         <u_output_freq>?</u_output_freq>
         <!--Optional:-->
         <u_output_source>?</u_output_source>
         <!--Optional:-->
         <u_owned_by>?</u_owned_by>
         <!--Optional:-->
         <u_package_name>?</u_package_name>
         <!--Optional:-->
         <u_paper>?</u_paper>
         <!--Optional:-->
         <u_parent>?</u_parent>
         <!--Optional:-->
         <u_part_of>?</u_part_of>
         <!--Optional:-->
         <u_pcl>?</u_pcl>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count>?</u_physical_interface_count>
         <!--Optional:-->
         <u_pid>?</u_pid>
         <!--Optional:-->
         <u_po_number>?</u_po_number>
         <!--Optional:-->
         <u_ports>?</u_ports>
         <!--Optional:-->
         <u_postscript>?</u_postscript>
         <!--Optional:-->
         <u_power_consumption>?</u_power_consumption>
         <!--Optional:-->
         <u_ppm>?</u_ppm>
         <!--Optional:-->
         <u_print_type>?</u_print_type>
         <!--Optional:-->
         <u_provided_by>?</u_provided_by>
         <!--Optional:-->
         <u_purchase_date>?</u_purchase_date>
         <!--Optional:-->
         <u_rack_units>?</u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use>?</u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type>?</u_raid_type>
         <!--Optional:-->
         <u_ram>?</u_ram>
         <!--Optional:-->
         <u_range>?</u_range>
         <!--Optional:-->
         <u_rated_output_power>?</u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va>?</u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units>?</u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery>?</u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired>?</u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>?</u_serial_number>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_skip_sync>?</u_skip_sync>
         <!--Optional:-->
         <u_sla>?</u_sla>
         <!--Optional:-->
         <u_start_date>?</u_start_date>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_support_group>?</u_support_group>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_supported_by>?</u_supported_by>
         <!--Optional:-->
         <u_tcp_port>?</u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_unverified>?</u_unverified>
         <!--Optional:-->
         <u_ups_software_version>?</u_ups_software_version>
         <!--Optional:-->
         <u_use_count>?</u_use_count>
         <!--Optional:-->
         <u_use_units>?</u_use_units>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <u_user_group>?</u_user_group>
         <!--Optional:-->
         <u_vendor>?</u_vendor>
         <!--Optional:-->
         <u_version>?</u_version>
         <!--Optional:-->
         <u_vertical_resolution>?</u_vertical_resolution>
         <!--Optional:-->
         <u_virtual>?</u_virtual>
         <!--Optional:-->
         <u_watts>?</u_watts>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9aec6bc5-b5a2-42a3-8fc5-8e62864c06d4"><con:settings/><con:call name="Request 1" id="42b5e302-0514-4406-af4a-92d1155e84d8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6e4a4786-4de7-4934-82ec-a1e268af4528"><con:settings/><con:call name="Request 1" id="d29ce0eb-14ae-42dd-9453-9a720c7647be"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6aa6c670-c9cc-4cc7-99ed-10ddf3184b2e"><con:settings/><con:call name="Request 1" id="53097d8c-d5f1-429d-8eac-3a2313462221"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_agent_software_version>?</u_agent_software_version>
         <!--Optional:-->
         <u_asset>?</u_asset>
         <!--Optional:-->
         <u_asset_tag>?</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to>?</u_assigned_to>
         <!--Optional:-->
         <u_attached_devices>?</u_attached_devices>
         <!--Optional:-->
         <u_attached_to>?</u_attached_to>
         <!--Optional:-->
         <u_attributes>?</u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status>?</u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth>?</u_bandwidth>
         <!--Optional:-->
         <u_battery_current>?</u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced>?</u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status>?</u_battery_status>
         <!--Optional:-->
         <u_battery_temperature>?</u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage>?</u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality>?</u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq>?</u_bypass_freq>
         <!--Optional:-->
         <u_can_hub>?</u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans>?</u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print>?</u_can_print>
         <!--Optional:-->
         <u_can_route>?</u_can_route>
         <!--Optional:-->
         <u_can_switch>?</u_can_switch>
         <!--Optional:-->
         <u_capacity>?</u_capacity>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_cd_rom>?</u_cd_rom>
         <!--Optional:-->
         <u_cd_speed>?</u_cd_speed>
         <!--Optional:-->
         <u_change_control>?</u_change_control>
         <!--Optional:-->
         <u_channels>?</u_channels>
         <!--Optional:-->
         <u_chassis_type>?</u_chassis_type>
         <!--Optional:-->
         <u_checked_in>?</u_checked_in>
         <!--Optional:-->
         <u_checked_out>?</u_checked_out>
         <!--Optional:-->
         <u_class_name>?</u_class_name>
         <!--Optional:-->
         <u_class_sys_id>?</u_class_sys_id>
         <!--Optional:-->
         <u_classification>?</u_classification>
         <!--Optional:-->
         <u_classifier>?</u_classifier>
         <!--Optional:-->
         <u_cluster_status>?</u_cluster_status>
         <!--Optional:-->
         <u_color>?</u_color>
         <!--Optional:-->
         <u_colors>?</u_colors>
         <!--Optional:-->
         <u_comments>?</u_comments>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_computer>?</u_computer>
         <!--Optional:-->
         <u_correlation_id>?</u_correlation_id>
         <!--Optional:-->
         <u_cost>?</u_cost>
         <!--Optional:-->
         <u_cost_cc>?</u_cost_cc>
         <!--Optional:-->
         <u_cost_center>?</u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count>?</u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread>?</u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count>?</u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer>?</u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name>?</u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed>?</u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type>?</u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps>?</u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state>?</u_current_load_state>
         <!--Optional:-->
         <u_date_of_man>?</u_date_of_man>
         <!--Optional:-->
         <u_db_server>?</u_db_server>
         <!--Optional:-->
         <u_default_gateway>?</u_default_gateway>
         <!--Optional:-->
         <u_delivery_date>?</u_delivery_date>
         <!--Optional:-->
         <u_department>?</u_department>
         <!--Optional:-->
         <u_device_type>?</u_device_type>
         <!--Optional:-->
         <u_discovery_source>?</u_discovery_source>
         <!--Optional:-->
         <u_disk_size>?</u_disk_size>
         <!--Optional:-->
         <u_disk_space>?</u_disk_space>
         <!--Optional:-->
         <u_dns_domain>?</u_dns_domain>
         <!--Optional:-->
         <u_dr_backup>?</u_dr_backup>
         <!--Optional:-->
         <u_due>?</u_due>
         <!--Optional:-->
         <u_due_in>?</u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining>?</u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining>?</u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count>?</u_fault_count>
         <!--Optional:-->
         <u_firewall_status>?</u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer>?</u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version>?</u_firmware_version>
         <!--Optional:-->
         <u_first_discovered>?</u_first_discovered>
         <!--Optional:-->
         <u_floppy>?</u_floppy>
         <!--Optional:-->
         <u_footprint>?</u_footprint>
         <!--Optional:-->
         <u_form_factor>?</u_form_factor>
         <!--Optional:-->
         <u_fqdn>?</u_fqdn>
         <!--Optional:-->
         <u_gl_account>?</u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus>?</u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version>?</u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point>?</u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution>?</u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_input_line_bads>?</u_input_line_bads>
         <!--Optional:-->
         <u_install_count>?</u_install_count>
         <!--Optional:-->
         <u_install_date>?</u_install_date>
         <!--Optional:-->
         <u_install_status>?</u_install_status>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number>?</u_invoice_number>
         <!--Optional:-->
         <u_ip_address>?</u_ip_address>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_kernel_release>?</u_kernel_release>
         <!--Optional:-->
         <u_key>?</u_key>
         <!--Optional:-->
         <u_last_discovered>?</u_last_discovered>
         <!--Optional:-->
         <u_lease_id>?</u_lease_id>
         <!--Optional:-->
         <u_license_available>?</u_license_available>
         <!--Optional:-->
         <u_license_count>?</u_license_count>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins>?</u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point>?</u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address>?</u_mac_address>
         <!--Optional:-->
         <u_mainframe>?</u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule>?</u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by>?</u_managed_by>
         <!--Optional:-->
         <u_managed_domain>?</u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>?</u_manufacturer>
         <!--Optional:-->
         <u_master_state>?</u_master_state>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_model_id>?</u_model_id>
         <!--Optional:-->
         <u_model_number>?</u_model_number>
         <!--Optional:-->
         <u_monitor>?</u_monitor>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_msft_sms_id>?</u_msft_sms_id>
         <!--Optional:-->
         <u_name>?</u_name>
         <!--Optional:-->
         <u_nom_input_freq>?</u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt>?</u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq>?</u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt>?</u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status>?</u_operational_status>
         <!--Optional:-->
         <u_order_date>?</u_order_date>
         <!--Optional:-->
         <u_os>?</u_os>
         <!--Optional:-->
         <u_os_address_width>?</u_os_address_width>
         <!--Optional:-->
         <u_os_domain>?</u_os_domain>
         <!--Optional:-->
         <u_os_service_pack>?</u_os_service_pack>
         <!--Optional:-->
         <u_os_version>?</u_os_version>
         <!--Optional:-->
         <u_outlet_count>?</u_outlet_count>
         <!--Optional:-->
         <u_output_freq>?</u_output_freq>
         <!--Optional:-->
         <u_output_source>?</u_output_source>
         <!--Optional:-->
         <u_owned_by>?</u_owned_by>
         <!--Optional:-->
         <u_package_name>?</u_package_name>
         <!--Optional:-->
         <u_paper>?</u_paper>
         <!--Optional:-->
         <u_parent>?</u_parent>
         <!--Optional:-->
         <u_part_of>?</u_part_of>
         <!--Optional:-->
         <u_pcl>?</u_pcl>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count>?</u_physical_interface_count>
         <!--Optional:-->
         <u_pid>?</u_pid>
         <!--Optional:-->
         <u_po_number>?</u_po_number>
         <!--Optional:-->
         <u_ports>?</u_ports>
         <!--Optional:-->
         <u_postscript>?</u_postscript>
         <!--Optional:-->
         <u_power_consumption>?</u_power_consumption>
         <!--Optional:-->
         <u_ppm>?</u_ppm>
         <!--Optional:-->
         <u_print_type>?</u_print_type>
         <!--Optional:-->
         <u_provided_by>?</u_provided_by>
         <!--Optional:-->
         <u_purchase_date>?</u_purchase_date>
         <!--Optional:-->
         <u_rack_units>?</u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use>?</u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type>?</u_raid_type>
         <!--Optional:-->
         <u_ram>?</u_ram>
         <!--Optional:-->
         <u_range>?</u_range>
         <!--Optional:-->
         <u_rated_output_power>?</u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va>?</u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units>?</u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery>?</u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired>?</u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>?</u_serial_number>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_skip_sync>?</u_skip_sync>
         <!--Optional:-->
         <u_sla>?</u_sla>
         <!--Optional:-->
         <u_start_date>?</u_start_date>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_support_group>?</u_support_group>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_supported_by>?</u_supported_by>
         <!--Optional:-->
         <u_tcp_port>?</u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_unverified>?</u_unverified>
         <!--Optional:-->
         <u_ups_software_version>?</u_ups_software_version>
         <!--Optional:-->
         <u_use_count>?</u_use_count>
         <!--Optional:-->
         <u_use_units>?</u_use_units>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <u_user_group>?</u_user_group>
         <!--Optional:-->
         <u_vendor>?</u_vendor>
         <!--Optional:-->
         <u_version>?</u_version>
         <!--Optional:-->
         <u_vertical_resolution>?</u_vertical_resolution>
         <!--Optional:-->
         <u_virtual>?</u_virtual>
         <!--Optional:-->
         <u_watts>?</u_watts>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="188f0c5e-766d-4fde-b480-bd74be803979"><con:settings/><con:call name="Request 1" id="cf2dfe32-06e8-422a-a61b-6f2e314ff32b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_agent_software_version>?</u_agent_software_version>
         <!--Optional:-->
         <u_asset>?</u_asset>
         <!--Optional:-->
         <u_asset_tag>?</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to>?</u_assigned_to>
         <!--Optional:-->
         <u_attached_devices>?</u_attached_devices>
         <!--Optional:-->
         <u_attached_to>?</u_attached_to>
         <!--Optional:-->
         <u_attributes>?</u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status>?</u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth>?</u_bandwidth>
         <!--Optional:-->
         <u_battery_current>?</u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced>?</u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status>?</u_battery_status>
         <!--Optional:-->
         <u_battery_temperature>?</u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage>?</u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality>?</u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq>?</u_bypass_freq>
         <!--Optional:-->
         <u_can_hub>?</u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans>?</u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print>?</u_can_print>
         <!--Optional:-->
         <u_can_route>?</u_can_route>
         <!--Optional:-->
         <u_can_switch>?</u_can_switch>
         <!--Optional:-->
         <u_capacity>?</u_capacity>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_cd_rom>?</u_cd_rom>
         <!--Optional:-->
         <u_cd_speed>?</u_cd_speed>
         <!--Optional:-->
         <u_change_control>?</u_change_control>
         <!--Optional:-->
         <u_channels>?</u_channels>
         <!--Optional:-->
         <u_chassis_type>?</u_chassis_type>
         <!--Optional:-->
         <u_checked_in>?</u_checked_in>
         <!--Optional:-->
         <u_checked_out>?</u_checked_out>
         <!--Optional:-->
         <u_class_name>?</u_class_name>
         <!--Optional:-->
         <u_class_sys_id>?</u_class_sys_id>
         <!--Optional:-->
         <u_classification>?</u_classification>
         <!--Optional:-->
         <u_classifier>?</u_classifier>
         <!--Optional:-->
         <u_cluster_status>?</u_cluster_status>
         <!--Optional:-->
         <u_color>?</u_color>
         <!--Optional:-->
         <u_colors>?</u_colors>
         <!--Optional:-->
         <u_comments>?</u_comments>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_computer>?</u_computer>
         <!--Optional:-->
         <u_correlation_id>?</u_correlation_id>
         <!--Optional:-->
         <u_cost>?</u_cost>
         <!--Optional:-->
         <u_cost_cc>?</u_cost_cc>
         <!--Optional:-->
         <u_cost_center>?</u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count>?</u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread>?</u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count>?</u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer>?</u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name>?</u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed>?</u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type>?</u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps>?</u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state>?</u_current_load_state>
         <!--Optional:-->
         <u_date_of_man>?</u_date_of_man>
         <!--Optional:-->
         <u_db_server>?</u_db_server>
         <!--Optional:-->
         <u_default_gateway>?</u_default_gateway>
         <!--Optional:-->
         <u_delivery_date>?</u_delivery_date>
         <!--Optional:-->
         <u_department>?</u_department>
         <!--Optional:-->
         <u_device_type>?</u_device_type>
         <!--Optional:-->
         <u_discovery_source>?</u_discovery_source>
         <!--Optional:-->
         <u_disk_size>?</u_disk_size>
         <!--Optional:-->
         <u_disk_space>?</u_disk_space>
         <!--Optional:-->
         <u_dns_domain>?</u_dns_domain>
         <!--Optional:-->
         <u_dr_backup>?</u_dr_backup>
         <!--Optional:-->
         <u_due>?</u_due>
         <!--Optional:-->
         <u_due_in>?</u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining>?</u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining>?</u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count>?</u_fault_count>
         <!--Optional:-->
         <u_firewall_status>?</u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer>?</u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version>?</u_firmware_version>
         <!--Optional:-->
         <u_first_discovered>?</u_first_discovered>
         <!--Optional:-->
         <u_floppy>?</u_floppy>
         <!--Optional:-->
         <u_footprint>?</u_footprint>
         <!--Optional:-->
         <u_form_factor>?</u_form_factor>
         <!--Optional:-->
         <u_fqdn>?</u_fqdn>
         <!--Optional:-->
         <u_gl_account>?</u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus>?</u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version>?</u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point>?</u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution>?</u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_input_line_bads>?</u_input_line_bads>
         <!--Optional:-->
         <u_install_count>?</u_install_count>
         <!--Optional:-->
         <u_install_date>?</u_install_date>
         <!--Optional:-->
         <u_install_status>?</u_install_status>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number>?</u_invoice_number>
         <!--Optional:-->
         <u_ip_address>?</u_ip_address>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_kernel_release>?</u_kernel_release>
         <!--Optional:-->
         <u_key>?</u_key>
         <!--Optional:-->
         <u_last_discovered>?</u_last_discovered>
         <!--Optional:-->
         <u_lease_id>?</u_lease_id>
         <!--Optional:-->
         <u_license_available>?</u_license_available>
         <!--Optional:-->
         <u_license_count>?</u_license_count>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins>?</u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point>?</u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address>?</u_mac_address>
         <!--Optional:-->
         <u_mainframe>?</u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule>?</u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by>?</u_managed_by>
         <!--Optional:-->
         <u_managed_domain>?</u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>?</u_manufacturer>
         <!--Optional:-->
         <u_master_state>?</u_master_state>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_model_id>?</u_model_id>
         <!--Optional:-->
         <u_model_number>?</u_model_number>
         <!--Optional:-->
         <u_monitor>?</u_monitor>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_msft_sms_id>?</u_msft_sms_id>
         <!--Optional:-->
         <u_name>?</u_name>
         <!--Optional:-->
         <u_nom_input_freq>?</u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt>?</u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq>?</u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt>?</u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status>?</u_operational_status>
         <!--Optional:-->
         <u_order_date>?</u_order_date>
         <!--Optional:-->
         <u_os>?</u_os>
         <!--Optional:-->
         <u_os_address_width>?</u_os_address_width>
         <!--Optional:-->
         <u_os_domain>?</u_os_domain>
         <!--Optional:-->
         <u_os_service_pack>?</u_os_service_pack>
         <!--Optional:-->
         <u_os_version>?</u_os_version>
         <!--Optional:-->
         <u_outlet_count>?</u_outlet_count>
         <!--Optional:-->
         <u_output_freq>?</u_output_freq>
         <!--Optional:-->
         <u_output_source>?</u_output_source>
         <!--Optional:-->
         <u_owned_by>?</u_owned_by>
         <!--Optional:-->
         <u_package_name>?</u_package_name>
         <!--Optional:-->
         <u_paper>?</u_paper>
         <!--Optional:-->
         <u_parent>?</u_parent>
         <!--Optional:-->
         <u_part_of>?</u_part_of>
         <!--Optional:-->
         <u_pcl>?</u_pcl>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count>?</u_physical_interface_count>
         <!--Optional:-->
         <u_pid>?</u_pid>
         <!--Optional:-->
         <u_po_number>?</u_po_number>
         <!--Optional:-->
         <u_ports>?</u_ports>
         <!--Optional:-->
         <u_postscript>?</u_postscript>
         <!--Optional:-->
         <u_power_consumption>?</u_power_consumption>
         <!--Optional:-->
         <u_ppm>?</u_ppm>
         <!--Optional:-->
         <u_print_type>?</u_print_type>
         <!--Optional:-->
         <u_provided_by>?</u_provided_by>
         <!--Optional:-->
         <u_purchase_date>?</u_purchase_date>
         <!--Optional:-->
         <u_rack_units>?</u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use>?</u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type>?</u_raid_type>
         <!--Optional:-->
         <u_ram>?</u_ram>
         <!--Optional:-->
         <u_range>?</u_range>
         <!--Optional:-->
         <u_rated_output_power>?</u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va>?</u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units>?</u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery>?</u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired>?</u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>?</u_serial_number>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_skip_sync>?</u_skip_sync>
         <!--Optional:-->
         <u_sla>?</u_sla>
         <!--Optional:-->
         <u_start_date>?</u_start_date>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_support_group>?</u_support_group>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_supported_by>?</u_supported_by>
         <!--Optional:-->
         <u_tcp_port>?</u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_unverified>?</u_unverified>
         <!--Optional:-->
         <u_ups_software_version>?</u_ups_software_version>
         <!--Optional:-->
         <u_use_count>?</u_use_count>
         <!--Optional:-->
         <u_use_units>?</u_use_units>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <u_user_group>?</u_user_group>
         <!--Optional:-->
         <u_vendor>?</u_vendor>
         <!--Optional:-->
         <u_version>?</u_version>
         <!--Optional:-->
         <u_vertical_resolution>?</u_vertical_resolution>
         <!--Optional:-->
         <u_virtual>?</u_virtual>
         <!--Optional:-->
         <u_watts>?</u_watts>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="192fe08e-6a3d-4a64-9497-adc6f1fdf3be"><con:settings/><con:call name="Request 1" id="7eb91e46-9544-44f2-bc97-d7220dfaa819"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_agent_software_version>?</u_agent_software_version>
         <!--Optional:-->
         <u_asset>?</u_asset>
         <!--Optional:-->
         <u_asset_tag>?</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to>?</u_assigned_to>
         <!--Optional:-->
         <u_attached_devices>?</u_attached_devices>
         <!--Optional:-->
         <u_attached_to>?</u_attached_to>
         <!--Optional:-->
         <u_attributes>?</u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status>?</u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth>?</u_bandwidth>
         <!--Optional:-->
         <u_battery_current>?</u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced>?</u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status>?</u_battery_status>
         <!--Optional:-->
         <u_battery_temperature>?</u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage>?</u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality>?</u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq>?</u_bypass_freq>
         <!--Optional:-->
         <u_can_hub>?</u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans>?</u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print>?</u_can_print>
         <!--Optional:-->
         <u_can_route>?</u_can_route>
         <!--Optional:-->
         <u_can_switch>?</u_can_switch>
         <!--Optional:-->
         <u_capacity>?</u_capacity>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_cd_rom>?</u_cd_rom>
         <!--Optional:-->
         <u_cd_speed>?</u_cd_speed>
         <!--Optional:-->
         <u_change_control>?</u_change_control>
         <!--Optional:-->
         <u_channels>?</u_channels>
         <!--Optional:-->
         <u_chassis_type>?</u_chassis_type>
         <!--Optional:-->
         <u_checked_in>?</u_checked_in>
         <!--Optional:-->
         <u_checked_out>?</u_checked_out>
         <!--Optional:-->
         <u_class_name>?</u_class_name>
         <!--Optional:-->
         <u_class_sys_id>?</u_class_sys_id>
         <!--Optional:-->
         <u_classification>?</u_classification>
         <!--Optional:-->
         <u_classifier>?</u_classifier>
         <!--Optional:-->
         <u_cluster_status>?</u_cluster_status>
         <!--Optional:-->
         <u_color>?</u_color>
         <!--Optional:-->
         <u_colors>?</u_colors>
         <!--Optional:-->
         <u_comments>?</u_comments>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_computer>?</u_computer>
         <!--Optional:-->
         <u_correlation_id>?</u_correlation_id>
         <!--Optional:-->
         <u_cost>?</u_cost>
         <!--Optional:-->
         <u_cost_cc>?</u_cost_cc>
         <!--Optional:-->
         <u_cost_center>?</u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count>?</u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread>?</u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count>?</u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer>?</u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name>?</u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed>?</u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type>?</u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps>?</u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state>?</u_current_load_state>
         <!--Optional:-->
         <u_date_of_man>?</u_date_of_man>
         <!--Optional:-->
         <u_db_server>?</u_db_server>
         <!--Optional:-->
         <u_default_gateway>?</u_default_gateway>
         <!--Optional:-->
         <u_delivery_date>?</u_delivery_date>
         <!--Optional:-->
         <u_department>?</u_department>
         <!--Optional:-->
         <u_device_type>?</u_device_type>
         <!--Optional:-->
         <u_discovery_source>?</u_discovery_source>
         <!--Optional:-->
         <u_disk_size>?</u_disk_size>
         <!--Optional:-->
         <u_disk_space>?</u_disk_space>
         <!--Optional:-->
         <u_dns_domain>?</u_dns_domain>
         <!--Optional:-->
         <u_dr_backup>?</u_dr_backup>
         <!--Optional:-->
         <u_due>?</u_due>
         <!--Optional:-->
         <u_due_in>?</u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining>?</u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining>?</u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count>?</u_fault_count>
         <!--Optional:-->
         <u_firewall_status>?</u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer>?</u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version>?</u_firmware_version>
         <!--Optional:-->
         <u_first_discovered>?</u_first_discovered>
         <!--Optional:-->
         <u_floppy>?</u_floppy>
         <!--Optional:-->
         <u_footprint>?</u_footprint>
         <!--Optional:-->
         <u_form_factor>?</u_form_factor>
         <!--Optional:-->
         <u_fqdn>?</u_fqdn>
         <!--Optional:-->
         <u_gl_account>?</u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus>?</u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version>?</u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point>?</u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution>?</u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_input_line_bads>?</u_input_line_bads>
         <!--Optional:-->
         <u_install_count>?</u_install_count>
         <!--Optional:-->
         <u_install_date>?</u_install_date>
         <!--Optional:-->
         <u_install_status>?</u_install_status>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number>?</u_invoice_number>
         <!--Optional:-->
         <u_ip_address>?</u_ip_address>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_kernel_release>?</u_kernel_release>
         <!--Optional:-->
         <u_key>?</u_key>
         <!--Optional:-->
         <u_last_discovered>?</u_last_discovered>
         <!--Optional:-->
         <u_lease_id>?</u_lease_id>
         <!--Optional:-->
         <u_license_available>?</u_license_available>
         <!--Optional:-->
         <u_license_count>?</u_license_count>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins>?</u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point>?</u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address>?</u_mac_address>
         <!--Optional:-->
         <u_mainframe>?</u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule>?</u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by>?</u_managed_by>
         <!--Optional:-->
         <u_managed_domain>?</u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>?</u_manufacturer>
         <!--Optional:-->
         <u_master_state>?</u_master_state>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_model_id>?</u_model_id>
         <!--Optional:-->
         <u_model_number>?</u_model_number>
         <!--Optional:-->
         <u_monitor>?</u_monitor>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_msft_sms_id>?</u_msft_sms_id>
         <!--Optional:-->
         <u_name>?</u_name>
         <!--Optional:-->
         <u_nom_input_freq>?</u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt>?</u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq>?</u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt>?</u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status>?</u_operational_status>
         <!--Optional:-->
         <u_order_date>?</u_order_date>
         <!--Optional:-->
         <u_os>?</u_os>
         <!--Optional:-->
         <u_os_address_width>?</u_os_address_width>
         <!--Optional:-->
         <u_os_domain>?</u_os_domain>
         <!--Optional:-->
         <u_os_service_pack>?</u_os_service_pack>
         <!--Optional:-->
         <u_os_version>?</u_os_version>
         <!--Optional:-->
         <u_outlet_count>?</u_outlet_count>
         <!--Optional:-->
         <u_output_freq>?</u_output_freq>
         <!--Optional:-->
         <u_output_source>?</u_output_source>
         <!--Optional:-->
         <u_owned_by>?</u_owned_by>
         <!--Optional:-->
         <u_package_name>?</u_package_name>
         <!--Optional:-->
         <u_paper>?</u_paper>
         <!--Optional:-->
         <u_parent>?</u_parent>
         <!--Optional:-->
         <u_part_of>?</u_part_of>
         <!--Optional:-->
         <u_pcl>?</u_pcl>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count>?</u_physical_interface_count>
         <!--Optional:-->
         <u_pid>?</u_pid>
         <!--Optional:-->
         <u_po_number>?</u_po_number>
         <!--Optional:-->
         <u_ports>?</u_ports>
         <!--Optional:-->
         <u_postscript>?</u_postscript>
         <!--Optional:-->
         <u_power_consumption>?</u_power_consumption>
         <!--Optional:-->
         <u_ppm>?</u_ppm>
         <!--Optional:-->
         <u_print_type>?</u_print_type>
         <!--Optional:-->
         <u_provided_by>?</u_provided_by>
         <!--Optional:-->
         <u_purchase_date>?</u_purchase_date>
         <!--Optional:-->
         <u_rack_units>?</u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use>?</u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type>?</u_raid_type>
         <!--Optional:-->
         <u_ram>?</u_ram>
         <!--Optional:-->
         <u_range>?</u_range>
         <!--Optional:-->
         <u_rated_output_power>?</u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va>?</u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units>?</u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery>?</u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired>?</u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>?</u_serial_number>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_skip_sync>?</u_skip_sync>
         <!--Optional:-->
         <u_sla>?</u_sla>
         <!--Optional:-->
         <u_start_date>?</u_start_date>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_support_group>?</u_support_group>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_supported_by>?</u_supported_by>
         <!--Optional:-->
         <u_tcp_port>?</u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_unverified>?</u_unverified>
         <!--Optional:-->
         <u_ups_software_version>?</u_ups_software_version>
         <!--Optional:-->
         <u_use_count>?</u_use_count>
         <!--Optional:-->
         <u_use_units>?</u_use_units>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <u_user_group>?</u_user_group>
         <!--Optional:-->
         <u_vendor>?</u_vendor>
         <!--Optional:-->
         <u_version>?</u_version>
         <!--Optional:-->
         <u_vertical_resolution>?</u_vertical_resolution>
         <!--Optional:-->
         <u_virtual>?</u_virtual>
         <!--Optional:-->
         <u_watts>?</u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="40b0eafa-8fb3-4211-9656-aea4d60d4aaa"><con:settings/><con:call name="Request 1" id="0aba0e8d-445e-4f6e-833c-85d0f766f00c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_agent_software_version>?</u_agent_software_version>
         <!--Optional:-->
         <u_asset>?</u_asset>
         <!--Optional:-->
         <u_asset_tag>?</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to>?</u_assigned_to>
         <!--Optional:-->
         <u_attached_devices>?</u_attached_devices>
         <!--Optional:-->
         <u_attached_to>?</u_attached_to>
         <!--Optional:-->
         <u_attributes>?</u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status>?</u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth>?</u_bandwidth>
         <!--Optional:-->
         <u_battery_current>?</u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced>?</u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status>?</u_battery_status>
         <!--Optional:-->
         <u_battery_temperature>?</u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage>?</u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality>?</u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq>?</u_bypass_freq>
         <!--Optional:-->
         <u_can_hub>?</u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans>?</u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print>?</u_can_print>
         <!--Optional:-->
         <u_can_route>?</u_can_route>
         <!--Optional:-->
         <u_can_switch>?</u_can_switch>
         <!--Optional:-->
         <u_capacity>?</u_capacity>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_cd_rom>?</u_cd_rom>
         <!--Optional:-->
         <u_cd_speed>?</u_cd_speed>
         <!--Optional:-->
         <u_change_control>?</u_change_control>
         <!--Optional:-->
         <u_channels>?</u_channels>
         <!--Optional:-->
         <u_chassis_type>?</u_chassis_type>
         <!--Optional:-->
         <u_checked_in>?</u_checked_in>
         <!--Optional:-->
         <u_checked_out>?</u_checked_out>
         <!--Optional:-->
         <u_class_name>?</u_class_name>
         <!--Optional:-->
         <u_class_sys_id>?</u_class_sys_id>
         <!--Optional:-->
         <u_classification>?</u_classification>
         <!--Optional:-->
         <u_classifier>?</u_classifier>
         <!--Optional:-->
         <u_cluster_status>?</u_cluster_status>
         <!--Optional:-->
         <u_color>?</u_color>
         <!--Optional:-->
         <u_colors>?</u_colors>
         <!--Optional:-->
         <u_comments>?</u_comments>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_computer>?</u_computer>
         <!--Optional:-->
         <u_correlation_id>?</u_correlation_id>
         <!--Optional:-->
         <u_cost>?</u_cost>
         <!--Optional:-->
         <u_cost_cc>?</u_cost_cc>
         <!--Optional:-->
         <u_cost_center>?</u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count>?</u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread>?</u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count>?</u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer>?</u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name>?</u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed>?</u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type>?</u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps>?</u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state>?</u_current_load_state>
         <!--Optional:-->
         <u_date_of_man>?</u_date_of_man>
         <!--Optional:-->
         <u_db_server>?</u_db_server>
         <!--Optional:-->
         <u_default_gateway>?</u_default_gateway>
         <!--Optional:-->
         <u_delivery_date>?</u_delivery_date>
         <!--Optional:-->
         <u_department>?</u_department>
         <!--Optional:-->
         <u_device_type>?</u_device_type>
         <!--Optional:-->
         <u_discovery_source>?</u_discovery_source>
         <!--Optional:-->
         <u_disk_size>?</u_disk_size>
         <!--Optional:-->
         <u_disk_space>?</u_disk_space>
         <!--Optional:-->
         <u_dns_domain>?</u_dns_domain>
         <!--Optional:-->
         <u_dr_backup>?</u_dr_backup>
         <!--Optional:-->
         <u_due>?</u_due>
         <!--Optional:-->
         <u_due_in>?</u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining>?</u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining>?</u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count>?</u_fault_count>
         <!--Optional:-->
         <u_firewall_status>?</u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer>?</u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version>?</u_firmware_version>
         <!--Optional:-->
         <u_first_discovered>?</u_first_discovered>
         <!--Optional:-->
         <u_floppy>?</u_floppy>
         <!--Optional:-->
         <u_footprint>?</u_footprint>
         <!--Optional:-->
         <u_form_factor>?</u_form_factor>
         <!--Optional:-->
         <u_fqdn>?</u_fqdn>
         <!--Optional:-->
         <u_gl_account>?</u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus>?</u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version>?</u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point>?</u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution>?</u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_input_line_bads>?</u_input_line_bads>
         <!--Optional:-->
         <u_install_count>?</u_install_count>
         <!--Optional:-->
         <u_install_date>?</u_install_date>
         <!--Optional:-->
         <u_install_status>?</u_install_status>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number>?</u_invoice_number>
         <!--Optional:-->
         <u_ip_address>?</u_ip_address>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_kernel_release>?</u_kernel_release>
         <!--Optional:-->
         <u_key>?</u_key>
         <!--Optional:-->
         <u_last_discovered>?</u_last_discovered>
         <!--Optional:-->
         <u_lease_id>?</u_lease_id>
         <!--Optional:-->
         <u_license_available>?</u_license_available>
         <!--Optional:-->
         <u_license_count>?</u_license_count>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins>?</u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point>?</u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address>?</u_mac_address>
         <!--Optional:-->
         <u_mainframe>?</u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule>?</u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by>?</u_managed_by>
         <!--Optional:-->
         <u_managed_domain>?</u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>?</u_manufacturer>
         <!--Optional:-->
         <u_master_state>?</u_master_state>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_model_id>?</u_model_id>
         <!--Optional:-->
         <u_model_number>?</u_model_number>
         <!--Optional:-->
         <u_monitor>?</u_monitor>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_msft_sms_id>?</u_msft_sms_id>
         <!--Optional:-->
         <u_name>?</u_name>
         <!--Optional:-->
         <u_nom_input_freq>?</u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt>?</u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq>?</u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt>?</u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status>?</u_operational_status>
         <!--Optional:-->
         <u_order_date>?</u_order_date>
         <!--Optional:-->
         <u_os>?</u_os>
         <!--Optional:-->
         <u_os_address_width>?</u_os_address_width>
         <!--Optional:-->
         <u_os_domain>?</u_os_domain>
         <!--Optional:-->
         <u_os_service_pack>?</u_os_service_pack>
         <!--Optional:-->
         <u_os_version>?</u_os_version>
         <!--Optional:-->
         <u_outlet_count>?</u_outlet_count>
         <!--Optional:-->
         <u_output_freq>?</u_output_freq>
         <!--Optional:-->
         <u_output_source>?</u_output_source>
         <!--Optional:-->
         <u_owned_by>?</u_owned_by>
         <!--Optional:-->
         <u_package_name>?</u_package_name>
         <!--Optional:-->
         <u_paper>?</u_paper>
         <!--Optional:-->
         <u_parent>?</u_parent>
         <!--Optional:-->
         <u_part_of>?</u_part_of>
         <!--Optional:-->
         <u_pcl>?</u_pcl>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count>?</u_physical_interface_count>
         <!--Optional:-->
         <u_pid>?</u_pid>
         <!--Optional:-->
         <u_po_number>?</u_po_number>
         <!--Optional:-->
         <u_ports>?</u_ports>
         <!--Optional:-->
         <u_postscript>?</u_postscript>
         <!--Optional:-->
         <u_power_consumption>?</u_power_consumption>
         <!--Optional:-->
         <u_ppm>?</u_ppm>
         <!--Optional:-->
         <u_print_type>?</u_print_type>
         <!--Optional:-->
         <u_provided_by>?</u_provided_by>
         <!--Optional:-->
         <u_purchase_date>?</u_purchase_date>
         <!--Optional:-->
         <u_rack_units>?</u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use>?</u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type>?</u_raid_type>
         <!--Optional:-->
         <u_ram>?</u_ram>
         <!--Optional:-->
         <u_range>?</u_range>
         <!--Optional:-->
         <u_rated_output_power>?</u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va>?</u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units>?</u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery>?</u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired>?</u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>?</u_serial_number>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_skip_sync>?</u_skip_sync>
         <!--Optional:-->
         <u_sla>?</u_sla>
         <!--Optional:-->
         <u_start_date>?</u_start_date>
         <!--Optional:-->
         <u_subcategory>?</u_subcategory>
         <!--Optional:-->
         <u_support_group>?</u_support_group>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_supported_by>?</u_supported_by>
         <!--Optional:-->
         <u_tcp_port>?</u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_unverified>?</u_unverified>
         <!--Optional:-->
         <u_ups_software_version>?</u_ups_software_version>
         <!--Optional:-->
         <u_use_count>?</u_use_count>
         <!--Optional:-->
         <u_use_units>?</u_use_units>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <u_user_group>?</u_user_group>
         <!--Optional:-->
         <u_vendor>?</u_vendor>
         <!--Optional:-->
         <u_version>?</u_version>
         <!--Optional:-->
         <u_vertical_resolution>?</u_vertical_resolution>
         <!--Optional:-->
         <u_virtual>?</u_virtual>
         <!--Optional:-->
         <u_watts>?</u_watts>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/cmdb_ci}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/cmdb_ci_list.do?WSDL" id="a4ff8977-acc5-484b-a97b-81c115c923f6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/cmdb_ci_list.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/cmdb_ci_list.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/cmdb_ci" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/cmdb_ci" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/cmdb_ci">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="asset_tag" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="serial_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="asset_tag" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="attributes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="can_print" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="change_control" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="checked_out" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_cc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cost_center" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="department" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="discovery_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="dns_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_in" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fault_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="first_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="fqdn" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="gl_account" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="install_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="invoice_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="ip_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="last_discovered" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="lease_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="mac_address" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="maintenance_schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="managed_domain" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="manufacturer" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="model_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="monitor" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="operational_status" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="owned_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="po_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="purchase_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="schedule" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="serial_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skip_sync" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="subcategory" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="support_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="supported_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_host_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_level_of_service" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_match_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_monitored" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_shared" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_supported" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_used_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="unverified" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="vendor" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="warranty_expiration" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="cmdb_ci" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="cmdb_ci" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/cmdb_ci/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_cmdb_ci">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/cmdb_ci_list.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ab240e02-0695-4953-9fd1-afaade10d29d"><con:settings/><con:call name="Request 1" id="b2ac9231-00ad-4de5-8bba-5011f40c36d6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:deleteMultiple>
         <!--Optional:-->
         <asset>?</asset>
         <!--Optional:-->
         <asset_tag>?</asset_tag>
         <!--Optional:-->
         <assigned>?</assigned>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <attributes>?</attributes>
         <!--Optional:-->
         <can_print>?</can_print>
         <!--Optional:-->
         <category>?</category>
         <!--Optional:-->
         <change_control>?</change_control>
         <!--Optional:-->
         <checked_in>?</checked_in>
         <!--Optional:-->
         <checked_out>?</checked_out>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <cost>?</cost>
         <!--Optional:-->
         <cost_cc>?</cost_cc>
         <!--Optional:-->
         <cost_center>?</cost_center>
         <!--Optional:-->
         <delivery_date>?</delivery_date>
         <!--Optional:-->
         <department>?</department>
         <!--Optional:-->
         <discovery_source>?</discovery_source>
         <!--Optional:-->
         <dns_domain>?</dns_domain>
         <!--Optional:-->
         <due>?</due>
         <!--Optional:-->
         <due_in>?</due_in>
         <!--Optional:-->
         <fault_count>?</fault_count>
         <!--Optional:-->
         <first_discovered>?</first_discovered>
         <!--Optional:-->
         <fqdn>?</fqdn>
         <!--Optional:-->
         <gl_account>?</gl_account>
         <!--Optional:-->
         <install_date>?</install_date>
         <!--Optional:-->
         <install_status>?</install_status>
         <!--Optional:-->
         <invoice_number>?</invoice_number>
         <!--Optional:-->
         <ip_address>?</ip_address>
         <!--Optional:-->
         <justification>?</justification>
         <!--Optional:-->
         <last_discovered>?</last_discovered>
         <!--Optional:-->
         <lease_id>?</lease_id>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <mac_address>?</mac_address>
         <!--Optional:-->
         <maintenance_schedule>?</maintenance_schedule>
         <!--Optional:-->
         <managed_by>?</managed_by>
         <!--Optional:-->
         <managed_domain>?</managed_domain>
         <!--Optional:-->
         <manufacturer>?</manufacturer>
         <!--Optional:-->
         <model_id>?</model_id>
         <!--Optional:-->
         <model_number>?</model_number>
         <!--Optional:-->
         <monitor>?</monitor>
         <!--Optional:-->
         <name>?</name>
         <!--Optional:-->
         <operational_status>?</operational_status>
         <!--Optional:-->
         <order_date>?</order_date>
         <!--Optional:-->
         <owned_by>?</owned_by>
         <!--Optional:-->
         <po_number>?</po_number>
         <!--Optional:-->
         <purchase_date>?</purchase_date>
         <!--Optional:-->
         <schedule>?</schedule>
         <!--Optional:-->
         <serial_number>?</serial_number>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skip_sync>?</skip_sync>
         <!--Optional:-->
         <start_date>?</start_date>
         <!--Optional:-->
         <subcategory>?</subcategory>
         <!--Optional:-->
         <support_group>?</support_group>
         <!--Optional:-->
         <supported_by>?</supported_by>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_level_of_service>?</u_level_of_service>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <unverified>?</unverified>
         <!--Optional:-->
         <vendor>?</vendor>
         <!--Optional:-->
         <warranty_expiration>?</warranty_expiration>
      </cmdb:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="cbf5e1e9-bb5e-4b4b-81f7-a6046bcf6952"><con:settings/><con:call name="Request 1" id="b7585f52-9b61-42ea-962a-e8c1d783047b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:deleteRecord>
         <sys_id>?</sys_id>
      </cmdb:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c78b8de1-5465-4b1a-932d-e71982e53c9f"><con:settings/><con:call name="Request 1" id="9cf2791a-1c12-49a2-82ea-40a5fe263848"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </cmdb:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="46f874af-f97e-4cf6-83da-6b23603f436e"><con:settings/><con:call name="Request 1" id="13659a3a-e9c0-4420-904d-d09844c65cea"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:getKeys>
         <!--Optional:-->
         <asset>?</asset>
         <!--Optional:-->
         <asset_tag>?</asset_tag>
         <!--Optional:-->
         <assigned>?</assigned>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <attributes>?</attributes>
         <!--Optional:-->
         <can_print>?</can_print>
         <!--Optional:-->
         <category>?</category>
         <!--Optional:-->
         <change_control>?</change_control>
         <!--Optional:-->
         <checked_in>?</checked_in>
         <!--Optional:-->
         <checked_out>?</checked_out>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <cost>?</cost>
         <!--Optional:-->
         <cost_cc>?</cost_cc>
         <!--Optional:-->
         <cost_center>?</cost_center>
         <!--Optional:-->
         <delivery_date>?</delivery_date>
         <!--Optional:-->
         <department>?</department>
         <!--Optional:-->
         <discovery_source>?</discovery_source>
         <!--Optional:-->
         <dns_domain>?</dns_domain>
         <!--Optional:-->
         <due>?</due>
         <!--Optional:-->
         <due_in>?</due_in>
         <!--Optional:-->
         <fault_count>?</fault_count>
         <!--Optional:-->
         <first_discovered>?</first_discovered>
         <!--Optional:-->
         <fqdn>?</fqdn>
         <!--Optional:-->
         <gl_account>?</gl_account>
         <!--Optional:-->
         <install_date>?</install_date>
         <!--Optional:-->
         <install_status>?</install_status>
         <!--Optional:-->
         <invoice_number>?</invoice_number>
         <!--Optional:-->
         <ip_address>?</ip_address>
         <!--Optional:-->
         <justification>?</justification>
         <!--Optional:-->
         <last_discovered>?</last_discovered>
         <!--Optional:-->
         <lease_id>?</lease_id>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <mac_address>?</mac_address>
         <!--Optional:-->
         <maintenance_schedule>?</maintenance_schedule>
         <!--Optional:-->
         <managed_by>?</managed_by>
         <!--Optional:-->
         <managed_domain>?</managed_domain>
         <!--Optional:-->
         <manufacturer>?</manufacturer>
         <!--Optional:-->
         <model_id>?</model_id>
         <!--Optional:-->
         <model_number>?</model_number>
         <!--Optional:-->
         <monitor>?</monitor>
         <!--Optional:-->
         <name>?</name>
         <!--Optional:-->
         <operational_status>?</operational_status>
         <!--Optional:-->
         <order_date>?</order_date>
         <!--Optional:-->
         <owned_by>?</owned_by>
         <!--Optional:-->
         <po_number>?</po_number>
         <!--Optional:-->
         <purchase_date>?</purchase_date>
         <!--Optional:-->
         <schedule>?</schedule>
         <!--Optional:-->
         <serial_number>?</serial_number>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skip_sync>?</skip_sync>
         <!--Optional:-->
         <start_date>?</start_date>
         <!--Optional:-->
         <subcategory>?</subcategory>
         <!--Optional:-->
         <support_group>?</support_group>
         <!--Optional:-->
         <supported_by>?</supported_by>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_level_of_service>?</u_level_of_service>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <unverified>?</unverified>
         <!--Optional:-->
         <vendor>?</vendor>
         <!--Optional:-->
         <warranty_expiration>?</warranty_expiration>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </cmdb:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="865dd244-aaaf-4d5f-84b9-714421a751c9"><con:settings/><con:call name="Request 1" id="40878c30-8b53-486b-a0b8-84ab02aea709"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:getRecords>
         <!--Optional:-->
         <asset>?</asset>
         <!--Optional:-->
         <asset_tag>?</asset_tag>
         <!--Optional:-->
         <assigned>?</assigned>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <attributes>?</attributes>
         <!--Optional:-->
         <can_print>?</can_print>
         <!--Optional:-->
         <category>?</category>
         <!--Optional:-->
         <change_control>?</change_control>
         <!--Optional:-->
         <checked_in>?</checked_in>
         <!--Optional:-->
         <checked_out>?</checked_out>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <cost>?</cost>
         <!--Optional:-->
         <cost_cc>?</cost_cc>
         <!--Optional:-->
         <cost_center>?</cost_center>
         <!--Optional:-->
         <delivery_date>?</delivery_date>
         <!--Optional:-->
         <department>?</department>
         <!--Optional:-->
         <discovery_source>?</discovery_source>
         <!--Optional:-->
         <dns_domain>?</dns_domain>
         <!--Optional:-->
         <due>?</due>
         <!--Optional:-->
         <due_in>?</due_in>
         <!--Optional:-->
         <fault_count>?</fault_count>
         <!--Optional:-->
         <first_discovered>?</first_discovered>
         <!--Optional:-->
         <fqdn>?</fqdn>
         <!--Optional:-->
         <gl_account>?</gl_account>
         <!--Optional:-->
         <install_date>?</install_date>
         <!--Optional:-->
         <install_status>?</install_status>
         <!--Optional:-->
         <invoice_number>?</invoice_number>
         <!--Optional:-->
         <ip_address>?</ip_address>
         <!--Optional:-->
         <justification>?</justification>
         <!--Optional:-->
         <last_discovered>?</last_discovered>
         <!--Optional:-->
         <lease_id>?</lease_id>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <mac_address>?</mac_address>
         <!--Optional:-->
         <maintenance_schedule>?</maintenance_schedule>
         <!--Optional:-->
         <managed_by>?</managed_by>
         <!--Optional:-->
         <managed_domain>?</managed_domain>
         <!--Optional:-->
         <manufacturer>?</manufacturer>
         <!--Optional:-->
         <model_id>?</model_id>
         <!--Optional:-->
         <model_number>?</model_number>
         <!--Optional:-->
         <monitor>?</monitor>
         <!--Optional:-->
         <name>?</name>
         <!--Optional:-->
         <operational_status>?</operational_status>
         <!--Optional:-->
         <order_date>?</order_date>
         <!--Optional:-->
         <owned_by>?</owned_by>
         <!--Optional:-->
         <po_number>?</po_number>
         <!--Optional:-->
         <purchase_date>?</purchase_date>
         <!--Optional:-->
         <schedule>?</schedule>
         <!--Optional:-->
         <serial_number>?</serial_number>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skip_sync>?</skip_sync>
         <!--Optional:-->
         <start_date>?</start_date>
         <!--Optional:-->
         <subcategory>?</subcategory>
         <!--Optional:-->
         <support_group>?</support_group>
         <!--Optional:-->
         <supported_by>?</supported_by>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_level_of_service>?</u_level_of_service>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <unverified>?</unverified>
         <!--Optional:-->
         <vendor>?</vendor>
         <!--Optional:-->
         <warranty_expiration>?</warranty_expiration>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </cmdb:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="dc48d98d-c236-48d9-94bf-53edc43e8803"><con:settings/><con:call name="Request 1" id="b0014f65-b41b-4438-b5b9-887827b69be8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:insert>
         <!--Optional:-->
         <asset>?</asset>
         <asset_tag>?</asset_tag>
         <!--Optional:-->
         <assigned>?</assigned>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <attributes>?</attributes>
         <!--Optional:-->
         <can_print>?</can_print>
         <!--Optional:-->
         <category>?</category>
         <!--Optional:-->
         <change_control>?</change_control>
         <!--Optional:-->
         <checked_in>?</checked_in>
         <!--Optional:-->
         <checked_out>?</checked_out>
         <!--Optional:-->
         <comments>?</comments>
         <company>?</company>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <cost>?</cost>
         <!--Optional:-->
         <cost_cc>?</cost_cc>
         <!--Optional:-->
         <cost_center>?</cost_center>
         <!--Optional:-->
         <delivery_date>?</delivery_date>
         <!--Optional:-->
         <department>?</department>
         <!--Optional:-->
         <discovery_source>?</discovery_source>
         <!--Optional:-->
         <dns_domain>?</dns_domain>
         <!--Optional:-->
         <due>?</due>
         <!--Optional:-->
         <due_in>?</due_in>
         <!--Optional:-->
         <fault_count>?</fault_count>
         <!--Optional:-->
         <first_discovered>?</first_discovered>
         <!--Optional:-->
         <fqdn>?</fqdn>
         <!--Optional:-->
         <gl_account>?</gl_account>
         <!--Optional:-->
         <install_date>?</install_date>
         <!--Optional:-->
         <install_status>?</install_status>
         <!--Optional:-->
         <invoice_number>?</invoice_number>
         <!--Optional:-->
         <ip_address>?</ip_address>
         <!--Optional:-->
         <justification>?</justification>
         <!--Optional:-->
         <last_discovered>?</last_discovered>
         <!--Optional:-->
         <lease_id>?</lease_id>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <mac_address>?</mac_address>
         <!--Optional:-->
         <maintenance_schedule>?</maintenance_schedule>
         <!--Optional:-->
         <managed_by>?</managed_by>
         <!--Optional:-->
         <managed_domain>?</managed_domain>
         <!--Optional:-->
         <manufacturer>?</manufacturer>
         <!--Optional:-->
         <model_id>?</model_id>
         <!--Optional:-->
         <model_number>?</model_number>
         <!--Optional:-->
         <monitor>?</monitor>
         <name>?</name>
         <!--Optional:-->
         <operational_status>?</operational_status>
         <!--Optional:-->
         <order_date>?</order_date>
         <!--Optional:-->
         <owned_by>?</owned_by>
         <!--Optional:-->
         <po_number>?</po_number>
         <!--Optional:-->
         <purchase_date>?</purchase_date>
         <!--Optional:-->
         <schedule>?</schedule>
         <serial_number>?</serial_number>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skip_sync>?</skip_sync>
         <!--Optional:-->
         <start_date>?</start_date>
         <!--Optional:-->
         <subcategory>?</subcategory>
         <!--Optional:-->
         <support_group>?</support_group>
         <!--Optional:-->
         <supported_by>?</supported_by>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_level_of_service>?</u_level_of_service>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <unverified>?</unverified>
         <!--Optional:-->
         <vendor>?</vendor>
         <!--Optional:-->
         <warranty_expiration>?</warranty_expiration>
      </cmdb:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/cmdb_ci/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="81debdc3-70d4-4310-b022-bebc75536731"><con:settings/><con:call name="Request 1" id="e3c1072c-fb00-4430-a8c3-25d9465e0742"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/cmdb_ci_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cmdb="http://www.service-now.com/cmdb_ci">
   <soapenv:Header/>
   <soapenv:Body>
      <cmdb:update>
         <!--Optional:-->
         <asset>?</asset>
         <asset_tag>?</asset_tag>
         <!--Optional:-->
         <assigned>?</assigned>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <attributes>?</attributes>
         <!--Optional:-->
         <can_print>?</can_print>
         <!--Optional:-->
         <category>?</category>
         <!--Optional:-->
         <change_control>?</change_control>
         <!--Optional:-->
         <checked_in>?</checked_in>
         <!--Optional:-->
         <checked_out>?</checked_out>
         <!--Optional:-->
         <comments>?</comments>
         <company>?</company>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <cost>?</cost>
         <!--Optional:-->
         <cost_cc>?</cost_cc>
         <!--Optional:-->
         <cost_center>?</cost_center>
         <!--Optional:-->
         <delivery_date>?</delivery_date>
         <!--Optional:-->
         <department>?</department>
         <!--Optional:-->
         <discovery_source>?</discovery_source>
         <!--Optional:-->
         <dns_domain>?</dns_domain>
         <!--Optional:-->
         <due>?</due>
         <!--Optional:-->
         <due_in>?</due_in>
         <!--Optional:-->
         <fault_count>?</fault_count>
         <!--Optional:-->
         <first_discovered>?</first_discovered>
         <!--Optional:-->
         <fqdn>?</fqdn>
         <!--Optional:-->
         <gl_account>?</gl_account>
         <!--Optional:-->
         <install_date>?</install_date>
         <!--Optional:-->
         <install_status>?</install_status>
         <!--Optional:-->
         <invoice_number>?</invoice_number>
         <!--Optional:-->
         <ip_address>?</ip_address>
         <!--Optional:-->
         <justification>?</justification>
         <!--Optional:-->
         <last_discovered>?</last_discovered>
         <!--Optional:-->
         <lease_id>?</lease_id>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <mac_address>?</mac_address>
         <!--Optional:-->
         <maintenance_schedule>?</maintenance_schedule>
         <!--Optional:-->
         <managed_by>?</managed_by>
         <!--Optional:-->
         <managed_domain>?</managed_domain>
         <!--Optional:-->
         <manufacturer>?</manufacturer>
         <!--Optional:-->
         <model_id>?</model_id>
         <!--Optional:-->
         <model_number>?</model_number>
         <!--Optional:-->
         <monitor>?</monitor>
         <name>?</name>
         <!--Optional:-->
         <operational_status>?</operational_status>
         <!--Optional:-->
         <order_date>?</order_date>
         <!--Optional:-->
         <owned_by>?</owned_by>
         <!--Optional:-->
         <po_number>?</po_number>
         <!--Optional:-->
         <purchase_date>?</purchase_date>
         <!--Optional:-->
         <schedule>?</schedule>
         <serial_number>?</serial_number>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skip_sync>?</skip_sync>
         <!--Optional:-->
         <start_date>?</start_date>
         <!--Optional:-->
         <subcategory>?</subcategory>
         <!--Optional:-->
         <support_group>?</support_group>
         <!--Optional:-->
         <supported_by>?</supported_by>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <u_host_name>?</u_host_name>
         <!--Optional:-->
         <u_level_of_service>?</u_level_of_service>
         <!--Optional:-->
         <u_match_type>?</u_match_type>
         <!--Optional:-->
         <u_monitored>?</u_monitored>
         <!--Optional:-->
         <u_shared>?</u_shared>
         <!--Optional:-->
         <u_supported>?</u_supported>
         <!--Optional:-->
         <u_used_for>?</u_used_for>
         <!--Optional:-->
         <unverified>?</unverified>
         <!--Optional:-->
         <vendor>?</vendor>
         <!--Optional:-->
         <warranty_expiration>?</warranty_expiration>
      </cmdb:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/cmdb_ci/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/sc_req_item}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/sc_req_item_list.do?WSDL" id="ea0d8e47-9ad6-4cbb-af71-a48e81f6258b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/sc_req_item_list.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/sc_req_item_list.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/sc_req_item" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/sc_req_item" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/sc_req_item">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="active" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="activity_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_history" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="approval_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assigned_to" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="backordered" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="billable" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="business_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="calendar_duration" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cat_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="closed_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="cmdb_ci" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="comments_and_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="context" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="contract" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_display" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="correlation_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="delivery_task" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="due_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="escalation" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="estimated_delivery" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="expected_start" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="follow_up" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="group_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="impact" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="knowledge" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="made_sla" type="xsd:boolean"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_at" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="opened_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="order" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="parent" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="priority" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="quantity" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="reassignment_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_frequency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="recurring_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="request" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sc_catalog" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="skills" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sla_due" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="stage" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="state" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_domain" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="task_for" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="time_worked" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_business_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location_changed" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_price" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_quantity" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_request_item_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by__email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_phone" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_update_source" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_approval" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="upon_reject" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="urgency" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="user_input" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="watch_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_end" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_notes_list" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="work_start" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="sc_req_item" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="sc_req_item" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="sc_req_item" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="sc_req_item" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="sc_req_item" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="sc_req_item" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="sc_req_item" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="sc_req_item" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="sc_req_item" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="sc_req_item" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="sc_req_item" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="sc_req_item" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="sc_req_item" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="sc_req_item" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/sc_req_item/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_sc_req_item">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/sc_req_item_list.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="68cd9d48-1221-47f9-bb51-42e95ccd482f"><con:settings/><con:call name="Request 1" id="8bac386a-86c4-4fdb-9fda-c1b2d1655608"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:deleteMultiple>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <backordered>?</backordered>
         <!--Optional:-->
         <billable>?</billable>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <cat_item>?</cat_item>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <configuration_item>?</configuration_item>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <context>?</context>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <estimated_delivery>?</estimated_delivery>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <price>?</price>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <quantity>?</quantity>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <recurring_frequency>?</recurring_frequency>
         <!--Optional:-->
         <recurring_price>?</recurring_price>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <stage>?</stage>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_price>?</u_price>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item_name>?</u_request_item_name>
         <!--Optional:-->
         <u_requested_by__email>?</u_requested_by__email>
         <!--Optional:-->
         <u_requested_by_phone>?</u_requested_by_phone>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="565847d2-1f7c-45d8-aaa8-1b9de517f5a4"><con:settings/><con:call name="Request 1" id="18d0ef47-78e6-4948-aade-bce4634aad80"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:deleteRecord>
         <sys_id>?</sys_id>
      </sc:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="75e493c9-a5c8-4475-ae37-19271a0c8d8d"><con:settings/><con:call name="Request 1" id="8e2f13ef-a665-4cd2-b8ad-36a8fe9e018f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </sc:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e03c5e6d-a4bb-4b50-b98f-e880d0cdb79a"><con:settings/><con:call name="Request 1" id="4be07bba-3334-4392-9a79-5944e93d15c6"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:getKeys>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <backordered>?</backordered>
         <!--Optional:-->
         <billable>?</billable>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <cat_item>?</cat_item>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <configuration_item>?</configuration_item>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <context>?</context>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <estimated_delivery>?</estimated_delivery>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <price>?</price>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <quantity>?</quantity>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <recurring_frequency>?</recurring_frequency>
         <!--Optional:-->
         <recurring_price>?</recurring_price>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <stage>?</stage>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_price>?</u_price>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item_name>?</u_request_item_name>
         <!--Optional:-->
         <u_requested_by__email>?</u_requested_by__email>
         <!--Optional:-->
         <u_requested_by_phone>?</u_requested_by_phone>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </sc:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9ef189bc-81d2-450d-bab7-6d70c982a450"><con:settings/><con:call name="Request 1" id="3d242c1b-0f50-452a-8093-3fdd37d3bf0a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:getRecords>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <backordered>?</backordered>
         <!--Optional:-->
         <billable>?</billable>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <cat_item>?</cat_item>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <!--Optional:-->
         <company>?</company>
         <!--Optional:-->
         <configuration_item>?</configuration_item>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <context>?</context>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <estimated_delivery>?</estimated_delivery>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <price>?</price>
         <!--Optional:-->
         <priority>?</priority>
         <!--Optional:-->
         <quantity>?</quantity>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <recurring_frequency>?</recurring_frequency>
         <!--Optional:-->
         <recurring_price>?</recurring_price>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <!--Optional:-->
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <stage>?</stage>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_domain>?</sys_domain>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_price>?</u_price>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item_name>?</u_request_item_name>
         <!--Optional:-->
         <u_requested_by__email>?</u_requested_by__email>
         <!--Optional:-->
         <u_requested_by_phone>?</u_requested_by_phone>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </sc:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b8423371-e842-4db7-a7b6-1c5cbcae6384"><con:settings/><con:call name="Request 1" id="f9e52a00-d19e-43db-ac70-2223b84a19da"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <backordered>?</backordered>
         <!--Optional:-->
         <billable>?</billable>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <cat_item>?</cat_item>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <configuration_item>?</configuration_item>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <context>?</context>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <estimated_delivery>?</estimated_delivery>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <price>?</price>
         <priority>?</priority>
         <!--Optional:-->
         <quantity>?</quantity>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <recurring_frequency>?</recurring_frequency>
         <!--Optional:-->
         <recurring_price>?</recurring_price>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <stage>?</stage>
         <!--Optional:-->
         <state>?</state>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_price>?</u_price>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item_name>?</u_request_item_name>
         <!--Optional:-->
         <u_requested_by__email>?</u_requested_by__email>
         <!--Optional:-->
         <u_requested_by_phone>?</u_requested_by_phone>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/insert"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/sc_req_item/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f6cce5b5-0662-40a4-bfc6-5e6bb06c33b5"><con:settings/><con:call name="Request 1" id="a11e0535-7e60-40d5-8f24-0b69f8c04266"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_req_item">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:update>
         <!--Optional:-->
         <active>?</active>
         <!--Optional:-->
         <activity_due>?</activity_due>
         <!--Optional:-->
         <approval>?</approval>
         <!--Optional:-->
         <approval_history>?</approval_history>
         <!--Optional:-->
         <approval_set>?</approval_set>
         <!--Optional:-->
         <assigned_to>?</assigned_to>
         <!--Optional:-->
         <assignment_group>?</assignment_group>
         <!--Optional:-->
         <backordered>?</backordered>
         <!--Optional:-->
         <billable>?</billable>
         <!--Optional:-->
         <business_duration>?</business_duration>
         <!--Optional:-->
         <calendar_duration>?</calendar_duration>
         <!--Optional:-->
         <cat_item>?</cat_item>
         <!--Optional:-->
         <close_notes>?</close_notes>
         <!--Optional:-->
         <closed_at>?</closed_at>
         <!--Optional:-->
         <closed_by>?</closed_by>
         <!--Optional:-->
         <cmdb_ci>?</cmdb_ci>
         <!--Optional:-->
         <comments>?</comments>
         <!--Optional:-->
         <comments_and_work_notes>?</comments_and_work_notes>
         <company>?</company>
         <!--Optional:-->
         <configuration_item>?</configuration_item>
         <!--Optional:-->
         <contact_type>?</contact_type>
         <!--Optional:-->
         <context>?</context>
         <!--Optional:-->
         <contract>?</contract>
         <!--Optional:-->
         <correlation_display>?</correlation_display>
         <!--Optional:-->
         <correlation_id>?</correlation_id>
         <!--Optional:-->
         <delivery_plan>?</delivery_plan>
         <!--Optional:-->
         <delivery_task>?</delivery_task>
         <!--Optional:-->
         <description>?</description>
         <!--Optional:-->
         <due_date>?</due_date>
         <!--Optional:-->
         <escalation>?</escalation>
         <!--Optional:-->
         <estimated_delivery>?</estimated_delivery>
         <!--Optional:-->
         <expected_start>?</expected_start>
         <!--Optional:-->
         <follow_up>?</follow_up>
         <!--Optional:-->
         <group_list>?</group_list>
         <!--Optional:-->
         <impact>?</impact>
         <!--Optional:-->
         <knowledge>?</knowledge>
         <!--Optional:-->
         <location>?</location>
         <!--Optional:-->
         <made_sla>?</made_sla>
         <!--Optional:-->
         <number>?</number>
         <!--Optional:-->
         <opened_at>?</opened_at>
         <!--Optional:-->
         <opened_by>?</opened_by>
         <!--Optional:-->
         <order>?</order>
         <!--Optional:-->
         <parent>?</parent>
         <!--Optional:-->
         <price>?</price>
         <priority>?</priority>
         <!--Optional:-->
         <quantity>?</quantity>
         <!--Optional:-->
         <reassignment_count>?</reassignment_count>
         <!--Optional:-->
         <recurring_frequency>?</recurring_frequency>
         <!--Optional:-->
         <recurring_price>?</recurring_price>
         <!--Optional:-->
         <request>?</request>
         <!--Optional:-->
         <sc_catalog>?</sc_catalog>
         <short_description>?</short_description>
         <!--Optional:-->
         <skills>?</skills>
         <!--Optional:-->
         <sla_due>?</sla_due>
         <!--Optional:-->
         <stage>?</stage>
         <!--Optional:-->
         <state>?</state>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <task_for>?</task_for>
         <!--Optional:-->
         <time_worked>?</time_worked>
         <!--Optional:-->
         <u_business_phone>?</u_business_phone>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_location_changed>?</u_location_changed>
         <!--Optional:-->
         <u_price>?</u_price>
         <!--Optional:-->
         <u_quantity>?</u_quantity>
         <!--Optional:-->
         <u_request_item_name>?</u_request_item_name>
         <!--Optional:-->
         <u_requested_by__email>?</u_requested_by__email>
         <!--Optional:-->
         <u_requested_by_phone>?</u_requested_by_phone>
         <!--Optional:-->
         <u_update_source>?</u_update_source>
         <!--Optional:-->
         <upon_approval>?</upon_approval>
         <!--Optional:-->
         <upon_reject>?</upon_reject>
         <!--Optional:-->
         <urgency>?</urgency>
         <!--Optional:-->
         <user_input>?</user_input>
         <!--Optional:-->
         <watch_list>?</watch_list>
         <!--Optional:-->
         <work_end>?</work_end>
         <!--Optional:-->
         <work_notes>?</work_notes>
         <!--Optional:-->
         <work_notes_list>?</work_notes_list>
         <!--Optional:-->
         <work_start>?</work_start>
      </sc:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/sc_req_item/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_change_update}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_change_update.do?WSDL" id="1b0f706b-185a-47b9-b92e-4a406823777e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_change_update.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_change_update" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_change_update" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_change_update">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_actual_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_attachments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_backout_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_cab_recommendation" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_change_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_implementation_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_error_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_justification" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_end_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_planned_outage_start_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_priority" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_requested_by_date" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_risk" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_test_plan" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_change_update" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_change_update/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_change_update">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="600a1a9e-c422-4cee-803b-a9e71921c26f"><con:settings/><con:call name="Request 1" id="edcdba81-8bf3-45cc-9601-3570330e057b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_attachments>?</u_attachments>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="c41b922e-1448-425f-88f8-972d01575697"><con:settings/><con:call name="Request 1" id="a43eb971-b8f4-4021-81ca-a308723de286"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7ec790aa-acc1-4a75-88f5-b8764c730f72"><con:settings/><con:call name="Request 1" id="d4bc114f-b617-4e05-b04a-6b9eabab9833"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4873b52c-40ea-4513-9cf2-cbbb96433e97"><con:settings/><con:call name="Request 1" id="efe2eb7f-eebb-45d3-9f99-df8c34829e44"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_attachments>?</u_attachments>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="7d5d05f1-6715-4dbd-8888-6cc7b8d86913"><con:settings/><con:call name="Request 1" id="dcaf146d-bb22-4f21-b524-6ca42e077cfe"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_attachments>?</u_attachments>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b8d67fbd-eb76-490a-8cfb-0cf49c935ac6"><con:settings/><con:call name="Request 1" id="f5f3faca-85aa-4e53-bd74-4cdef49d4d5b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_attachments>?</u_attachments>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/insert"/></con:call><con:call name="Copy of Request 1" id="02c7ab3c-36fe-4c91-8e2b-83b80cfbe809"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>

<u_external_number>afbb7d72-f63b-467d-889c-687556713aff</u_external_number>
<u_number>CTASK0018471</u_number>
<u_transaction_code>sd_chg_report_ack</u_transaction_code>
<u_transaction_type>inbound</u_transaction_type>
<u_urgency></u_urgency>
      
         
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_change_update/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="dbee385e-fa9a-477f-9caf-7959ffa81c50"><con:settings/><con:call name="Request 1" id="da91a237-b555-4674-9989-7d18bc8fb515"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_attachments>?</u_attachments>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_update/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_incident_update}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?WSDL" id="0b7619b6-f3d4-407b-8811-5e4527361f2d" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_incident_update" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_incident_update" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_incident_update">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_additional_comments" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_cis" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_affected_locations" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_assignment_group" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_caller" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_close_notes" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_configuration_item" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_contact_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_email" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_external_party" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impact" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_impacted_services" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_linked_reference" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_location" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_phone_number" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_short_description" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_sub_category" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_urgency" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_work_notes" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_incident_update" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_incident_update/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_incident_update">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="03dfa7ca-e84a-4632-9868-bdeb79fd3007"><con:settings/><con:call name="Request 1" id="e86cf3e7-6a2a-4f3e-b778-d1f9becb55db"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_close_code>?</u_close_code>
         <!--Optional:-->
         <u_close_notes>?</u_close_notes>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_linked_reference>?</u_linked_reference>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_sub_category>?</u_sub_category>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bb1b7d92-e276-4b4d-8c7a-0c969d970ab3"><con:settings/><con:call name="Request 1" id="ebf43b20-23b7-43a5-9946-4ec4e691b3ad"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ecad193c-c05f-49d2-9e98-d6dc803b7eaa"><con:settings/><con:call name="Request 1" id="32efe4d4-e90a-44b5-a635-ed7c9bf43442"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2ce0b451-5aef-440e-806d-baa84d41c628"><con:settings/><con:call name="Request 1" id="f586482e-fd25-4332-8dc4-fe75aa34435f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_close_code>?</u_close_code>
         <!--Optional:-->
         <u_close_notes>?</u_close_notes>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_linked_reference>?</u_linked_reference>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_sub_category>?</u_sub_category>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="361e8b0e-5a23-4ca5-b3e6-ba2d805ae8fa"><con:settings/><con:call name="Request 1" id="a6242d79-ad32-44e0-8e1a-c5d509b31dfc"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_close_code>?</u_close_code>
         <!--Optional:-->
         <u_close_notes>?</u_close_notes>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_linked_reference>?</u_linked_reference>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_sub_category>?</u_sub_category>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4798cfee-0a8c-4988-b7cd-78af4c92ab78"><con:settings/><con:call name="Request 1" id="5078574f-f8c9-4005-a1d0-5f01ca1217e8"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_close_code>?</u_close_code>
         <!--Optional:-->
         <u_close_notes>?</u_close_notes>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_linked_reference>?</u_linked_reference>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_sub_category>?</u_sub_category>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/insert"/></con:call><con:call name="Copy of Request 1" id="16527662-747a-48d1-a4ba-9cda5ecafb31"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
      
<u_close_code>Solved(Workd Around)</u_close_code>
<u_close_notes>This is close_notes for pro_inc_resolved</u_close_notes>
<u_external_number>906a04d0-36ee-4c92-b25c-bb161224dd38</u_external_number>
<u_number>INC0034240</u_number>
<u_state>Resolved</u_state>
<u_transaction_code>pro_inc_resolve</u_transaction_code>

      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_incident_update/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d54a970b-26dd-4d66-b032-e7eaebe128da"><con:settings/><con:call name="Request 1" id="4e1b65d0-dcb8-4c05-8203-2ba4b361853d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_incident_update.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_incident_update">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_caller>?</u_caller>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_close_code>?</u_close_code>
         <!--Optional:-->
         <u_close_notes>?</u_close_notes>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_contact_type>?</u_contact_type>
         <!--Optional:-->
         <u_email>?</u_email>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_linked_reference>?</u_linked_reference>
         <!--Optional:-->
         <u_location>?</u_location>
         <!--Optional:-->
         <u_number>?</u_number>
         <!--Optional:-->
         <u_phone_number>?</u_phone_number>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_sub_category>?</u_sub_category>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_update/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_cmdb_relationship_}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?WSDL" id="bc228ff9-a020-448b-abde-8a72a55974f5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_connection_strength" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_port" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relationship_" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_cmdb_relationship_">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d3435d37-c19a-48f1-ae26-cea1419a0035"><con:settings/><con:call name="Request 1" id="ce7929c3-2d83-453a-aef2-b0037f193654"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_connection_strength>?</u_connection_strength>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_port>?</u_port>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="0bd982bf-1744-4420-8382-1e41a3d340fb"><con:settings/><con:call name="Request 1" id="e3cccf9e-5e35-4467-90e2-66b2f5d16644"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4e7eb031-4a80-4b80-bfe7-9bb515953052"><con:settings/><con:call name="Request 1" id="39a287da-a572-484b-9593-f4f41b3a7a74"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="8b422526-ace4-4e7a-85b4-83d1c32ae443"><con:settings/><con:call name="Request 1" id="84a93bcd-92ac-40cd-8d55-a035be9a0fcc"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_connection_strength>?</u_connection_strength>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_port>?</u_port>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="aa5e17f4-3d09-4b91-931f-d38fcc46b8ab"><con:settings/><con:call name="Request 1" id="8ed1eb1c-592b-4b62-b38e-a700b5f9e313"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_connection_strength>?</u_connection_strength>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_port>?</u_port>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d53cd9dc-e867-418e-84c2-5f7f2c70212c"><con:settings/><con:call name="Request 1" id="efcc2690-6567-4e2c-a427-b52649bcf967"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_connection_strength>?</u_connection_strength>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_port>?</u_port>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1" id="4110a71d-f11f-4452-9830-a832b33e1052"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>Business Service</u_child_class>
         <!--Optional:-->
         <u_child_company>CSC Internal</u_child_company>
         <!--Optional:-->
         <u_child_name>20150908055619</u_child_name>
         <!--Optional:-->
         <u_connection_strength></u_connection_strength>
         <!--Optional:-->
         <u_parent_class>Business Service</u_parent_class>
         <!--Optional:-->
         <u_parent_company>CSC Internal</u_parent_company>
         <!--Optional:-->
         <u_parent_name>20150909055619</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Copy of Request 2" id="49b6893e-0501-4225-975d-82706c460f73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>Business Service</u_child_class>
         <!--Optional:-->
         <u_child_company>CSC Internal</u_child_company>
         <!--Optional:-->
         <u_child_name>20150909080057</u_child_name>
         <!--Optional:-->
         <u_connection_strength></u_connection_strength>
         <!--Optional:-->
         <u_parent_class>Business Service</u_parent_class>
         <!--Optional:-->
         <u_parent_company>CSC Internal</u_parent_company>
         <!--Optional:-->
         <u_parent_name>20150908080057</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="ef5e8754-0cf9-49cb-bdf3-1ea79299ea1d"><con:settings/><con:call name="Request 1" id="fcc4c6c1-d430-4b4a-8a21-fcd6e122fe75"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_connection_strength>?</u_connection_strength>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_port>?</u_port>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/update"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ServiceNowSoap" type="wsdl" bindingName="{http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd}ServiceNowSoap" soapVersion="1_1" anonymous="optional" definition="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?WSDL" id="2bbfd138-f7a7-4ce0-b734-64e23d0b49e7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?WSDL"><con:part><con:url>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?WSDL</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xsd:schema elementFormDefault="unqualified" targetNamespace="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
      <xsd:element name="getKeys">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getKeysResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="get">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__use_view" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__encoded_query" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__limit" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__first_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__last_row" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__order_by_desc" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="__exclude_columns" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="getRecordsResult">
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
                  <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="update">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insert">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="insertResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="display_value" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="1" name="status" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="error_message" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultiple">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_class_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_created_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_row" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_set" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_import_state_comment" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_mod_count" type="xsd:integer"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_row_error" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_tags" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_target_table" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_transform_map" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_by" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="sys_updated_on" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="template_import_log" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_child_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_ci_rel_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_internal_status_message" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_class" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_company" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_name" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_parent_sys_id" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_relationship_type" type="xsd:string"/>
            <xsd:element maxOccurs="1" minOccurs="0" name="u_transaction_code" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteMultipleResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecord">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="1" name="sys_id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deleteRecordResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="1" minOccurs="0" name="count" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="insertSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:insertResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:deleteMultiple"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:getRecordsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:deleteRecordResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:update"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRecordsSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:getRecords"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:get"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRecordSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:deleteRecord"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:getKeys"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getKeysSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:getKeysResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:updateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMultipleSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:deleteMultipleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSoapOut">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:getResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="insertSoapIn">
    <wsdl:part name="u_connectnow_standard_cmdb_relations_upd" element="tns:insert"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ServiceNowSoap">
    <wsdl:operation name="insert">
      <wsdl:input message="tns:insertSoapIn"></wsdl:input>
      <wsdl:output message="tns:insertSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <wsdl:input message="tns:updateSoapIn"></wsdl:input>
      <wsdl:output message="tns:updateSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <wsdl:input message="tns:deleteMultipleSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteMultipleSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <wsdl:input message="tns:getKeysSoapIn"></wsdl:input>
      <wsdl:output message="tns:getKeysSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <wsdl:input message="tns:deleteRecordSoapIn"></wsdl:input>
      <wsdl:output message="tns:deleteRecordSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <wsdl:input message="tns:getSoapIn"></wsdl:input>
      <wsdl:output message="tns:getSoapOut"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <wsdl:input message="tns:getRecordsSoapIn"></wsdl:input>
      <wsdl:output message="tns:getRecordsSoapOut"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceNowSoap" type="tns:ServiceNowSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="insert">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/update" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteMultiple">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteMultiple" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getKeys">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getKeys" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteRecord">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteRecord" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="get">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/get" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRecords">
      <soap:operation soapAction="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getRecords" style="document"/>
      <wsdl:input>
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceNow_u_connectnow_standard_cmdb_relations_upd">
    <wsdl:port name="ServiceNowSoap" binding="tns:ServiceNowSoap">
      <soap:address location="https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint></con:endpoints><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteMultiple" name="deleteMultiple" bindingOperationName="deleteMultiple" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b3b07dd0-b1d4-4a8c-930e-dba2c1bcff63"><con:settings/><con:call name="Request 1" id="1f0feeb7-2d33-4b42-972d-a1a8666fee60"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteMultiple>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>?</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>?</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>?</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:deleteMultiple>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteMultiple"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteRecord" name="deleteRecord" bindingOperationName="deleteRecord" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2a53be2f-a06d-47d5-b4ad-e4d65b20df8b"><con:settings/><con:call name="Request 1" id="6dc252bb-ebc4-4679-946d-d74513b32914"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:deleteRecord>
         <sys_id>?</sys_id>
      </u:deleteRecord>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/deleteRecord"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/get" name="get" bindingOperationName="get" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="e21445b2-47d8-4b77-abec-61c984c7d174"><con:settings/><con:call name="Request 1" id="736c7a21-a38b-4917-ace6-7af92f7e174d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:get>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <__use_view>?</__use_view>
      </u:get>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/get"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getKeys" name="getKeys" bindingOperationName="getKeys" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="791e64c6-84cb-4fbb-8ffe-6ccc517233f7"><con:settings/><con:call name="Request 1" id="a17e39b6-b65b-4cfa-b687-e9fcb3472b94"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getKeys>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>?</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>?</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>?</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
      </u:getKeys>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getKeys"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getRecords" name="getRecords" bindingOperationName="getRecords" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="6b861b25-b6a1-4721-b242-607b10872eff"><con:settings/><con:call name="Request 1" id="4bf6df46-55e5-451e-9db5-55f6028808b4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
         <!--Optional:-->
         <sys_class_name>?</sys_class_name>
         <!--Optional:-->
         <sys_created_by>?</sys_created_by>
         <!--Optional:-->
         <sys_created_on>?</sys_created_on>
         <!--Optional:-->
         <sys_id>?</sys_id>
         <!--Optional:-->
         <sys_import_row>?</sys_import_row>
         <!--Optional:-->
         <sys_import_set>?</sys_import_set>
         <!--Optional:-->
         <sys_import_state>?</sys_import_state>
         <!--Optional:-->
         <sys_import_state_comment>?</sys_import_state_comment>
         <!--Optional:-->
         <sys_mod_count>?</sys_mod_count>
         <!--Optional:-->
         <sys_row_error>?</sys_row_error>
         <!--Optional:-->
         <sys_tags>?</sys_tags>
         <!--Optional:-->
         <sys_target_sys_id>?</sys_target_sys_id>
         <!--Optional:-->
         <sys_target_table>?</sys_target_table>
         <!--Optional:-->
         <sys_transform_map>?</sys_transform_map>
         <!--Optional:-->
         <sys_updated_by>?</sys_updated_by>
         <!--Optional:-->
         <sys_updated_on>?</sys_updated_on>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>?</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>?</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>?</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <__use_view>?</__use_view>
         <!--Optional:-->
         <__encoded_query>?</__encoded_query>
         <!--Optional:-->
         <__limit>?</__limit>
         <!--Optional:-->
         <__first_row>?</__first_row>
         <!--Optional:-->
         <__last_row>?</__last_row>
         <!--Optional:-->
         <__order_by>?</__order_by>
         <!--Optional:-->
         <__order_by_desc>?</__order_by_desc>
         <!--Optional:-->
         <__exclude_columns>?</__exclude_columns>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/getRecords"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert" name="insert" bindingOperationName="insert" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d411819a-2f4d-4a83-af31-2f4e54056c8e"><con:settings/><con:call name="Request 1" id="3d5b0288-07dd-4658-8ce2-d6b690765530"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>?</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>?</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>?</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Request 1" id="45041e13-0c73-4169-b4a2-3d0dc591a03d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>Business Service</u_child_class>
         <!--Optional:-->
         <u_child_company>CSC Internal</u_child_company>
         <!--Optional:-->
         <u_child_name>20150909080057</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>5aed31fa6f16c6001a72be4dbb3ee434</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id></u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>Business Service</u_parent_class>
         <!--Optional:-->
         <u_parent_company>CSC Internal</u_parent_company>
         <!--Optional:-->
         <u_parent_name>20150908080057</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>046df5be6f968a00c5afbd5dbb3ee4c5</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_BREAK</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Copy of Copy of Request 2" id="af26c7d3-6b4a-40c3-a1b4-c9fee43da7f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>Business Service</u_child_class>
         <!--Optional:-->
         <u_child_company>CSC Internal</u_child_company>
         <!--Optional:-->
         <u_child_name>20150910034947</u_child_name>
         <!--Optional:-->
         <u_child_sys_id></u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>5a3e8ac76fdac6001a72be4dbb3ee4a3</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>Business Service</u_parent_class>
         <!--Optional:-->
         <u_parent_company>CSC Internal</u_parent_company>
         <!--Optional:-->
         <u_parent_name>20150909034947</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id></u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_BREAK</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/update" name="update" bindingOperationName="update" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a9343f33-f551-4bd0-9ccd-d4f4be10c9b3"><con:settings/><con:call name="Request 1" id="e3b20fe2-4d87-43d6-bdfb-b79738bdf7ce"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:update>
         <sys_id>?</sys_id>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_child_class>?</u_child_class>
         <!--Optional:-->
         <u_child_company>?</u_child_company>
         <!--Optional:-->
         <u_child_name>?</u_child_name>
         <!--Optional:-->
         <u_child_sys_id>?</u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>?</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>?</u_parent_class>
         <!--Optional:-->
         <u_parent_company>?</u_parent_company>
         <!--Optional:-->
         <u_parent_name>?</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id>?</u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>?</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
      </u:update>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/update"/></con:call></con:operation></con:interface><con:testSuite name="INCIDENT" id="d96a2866-359e-4beb-b280-c644dff40f1f"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[3RD]SD_INC_ASSIGN" searchProperties="true" id="3bde98f2-f5b5-4370-be86-18267066cc19"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_inc_assign" id="87fdee2e-3b9c-451e-93aa-04cf8dd8ead0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_inc_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Incident/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>admin123</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">sd_inc_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
					<csc:param name="file_base64"></csc:param>
					<csc:param name="file_name"></csc:param>
					<csc:param name="file_type"></csc:param>
					<!--standard incident adapter parameters-->
					<csc:param name="z_affected_ci_list"></csc:param>
					<csc:param name="z_affected_locations"></csc:param>
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					<csc:param name="z_business_service">20150807025846</csc:param>
					<csc:param name="z_business_service_company"></csc:param>
					<csc:param name="z_cancellation_reason"></csc:param>
					<csc:param name="z_closure_code"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_contact_address">AM - Default Location - Ho Chi Minh, Vietnam</csc:param>
					<csc:param name="z_contact_corporate_id">pamadmin</csc:param>
					<csc:param name="z_contact_department"></csc:param>
					<csc:param name="z_contact_email_address">pamadmin</csc:param>
					<csc:param name="z_contact_first_name"></csc:param>
					<csc:param name="z_contact_last_name"></csc:param>
					<csc:param name="z_contact_middle_name"></csc:param>
					<csc:param name="z_contact_phone_number">0999999999</csc:param>
					<csc:param name="z_contact_site"></csc:param>
					<csc:param name="z_customer_address"></csc:param>
					<csc:param name="z_customer_corporate_id"></csc:param>
					<csc:param name="z_customer_department"></csc:param>
					<csc:param name="z_customer_email_address"></csc:param>
					<csc:param name="z_customer_first_name"></csc:param>
					<csc:param name="z_customer_last_name"></csc:param>
					<csc:param name="z_customer_middle_name"></csc:param>
					<csc:param name="z_customer_phone_number"></csc:param>
					<csc:param name="z_customer_site"></csc:param>
					<csc:param name="z_customer_vip"></csc:param>
					<csc:param name="z_impact">Minor</csc:param>
					<csc:param name="z_impacted_services"></csc:param>
					<csc:param name="z_incident_identifier">${=new Date().format("yyyyMMddHHmmss")}</csc:param>
					<csc:param name="z_incident_notes">This is incident notes.</csc:param>
					<csc:param name="z_incident_summary">This is incident summary.</csc:param>
					<csc:param name="z_operational_categorization_1">Application</csc:param>
					<csc:param name="z_operational_categorization_2">System</csc:param>
					<csc:param name="z_operational_categorization_3">Multiple Users Affected</csc:param>
					<csc:param name="z_priority">2</csc:param>
					<csc:param name="z_reported_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param> 
					<csc:param name="z_reported_source">Self-service</csc:param>
					<csc:param name="z_request_type"></csc:param>
					<csc:param name="z_required_resolution_date"></csc:param>
					<csc:param name="z_resolution"></csc:param>
					<csc:param name="z_status"></csc:param>
					<csc:param name="z_status_reason"></csc:param>
					<csc:param name="z_target_date"></csc:param>
					<csc:param name="z_urgency">High</csc:param>
					<csc:param name="z_vendor_ticket_number"></csc:param>
					<csc:param name="z_workflow_attachment"></csc:param>
					<csc:param name="z_workflow_notes"></csc:param>
					<csc:param name="z_workflow_summary"></csc:param>
					<csc:param name="z_workflow_type"></csc:param>
					<csc:param name="z_workinfo_notes">This is workinfo notes for sd_inc_assign.</csc:param>

				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XQuery z_incident_identifier" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>//param[@name="z_incident_identifier"]</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_inc_assign" id="6a8a2681-d0b8-4de7-ab5e-0326e9790ac9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.203.154.226:1433;databaseName=integrations_new;user=sa;password=Password1;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:INC  AND [request].request_type = 'sd_inc_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>INC</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_inc_assign" id="22ebd3a4-a07e-4f3d-964e-e51cbd175bb4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_inc_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_inc_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_inc_accept" id="75428918-7d87-4f1d-b7ad-1fd162713932"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.203.154.226:1433;databaseName=integrations_new;user=sa;password=Password1;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:INC  AND [request].request_type = 'pro_inc_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>INC</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_inc_accept" id="20899db1-441e-4d43-9122-2c63e6c2bfc4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_inc_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_inc_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_inc_assign" id="02a05da5-1520-497f-85fc-43295b89e1d2"><con:settings/><con:config><script>log.info "sd_inc_assign has run successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160420164827</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">INC0099906</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="PROBLEM" id="09e9771d-594c-4914-a127-ea42f87b7aaf" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_ASSIGN" searchProperties="true" id="59b2a598-1f62-4b45-bfbb-26ffbc962864" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="79f9457c-8eac-4819-b9c9-fb2d6080adb3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96ab0a78-362f-46e4-b3a2-5cfa31046f46"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b1d8a3e7-b406-4347-a946-ed4edff54556"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="d53d91c0-0223-45a2-acdf-2fc41098611c"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="15bb3f3b-a0c0-4bbc-837b-a5c603b333c8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d4384003-9e88-484a-97b8-9ea61e83e987"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="77b655de-d41c-446c-acce-6d73c1175c92"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="20ad337a-8096-4847-92ba-0a9b2c42c2e3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="46236557-8abc-4802-bb1a-3f6f68755ea7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="e5af5e08-c6a6-413c-964e-1fd50f17f83d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="a8c0324e-d4a3-4dd4-aab3-2b58f2cc6d01"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a160d4ea-624a-4d24-b128-ccb743eee4f3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="1956004e-5997-43a1-aed9-768001920c26"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="3bf1bed3-f721-4d56-aeed-aa9fbf31a31f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e2724a68-074b-4153-bc9d-4c39d78d1c20"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="5b349d64-cf8f-466c-be21-d4903c8399b5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="7fe5d5ad-694e-4309-87db-61f5917e8f64"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160127065416</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_UPDATE" searchProperties="true" id="251be4ed-2dbe-4553-aac7-5dede047ef48" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="0022037a-bfe9-4c5a-a6f6-52272c430121"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="0726e1d6-0c85-4874-a3cb-be2d51ecf501"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5092cfed-3ee0-4c43-9af1-5d06c5306d62"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="57867d86-e067-4831-8a31-6ef181e17e9e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="8a1d1af1-8568-4dd8-9ab2-e6efd38081f2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5484599f-7ded-426b-b95c-98fd83f4fb77"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="49cea531-3940-48f3-97c3-fc348bdd5aab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="dfade0e9-f556-41c3-af1d-40e4840ea72b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="49a6a4ac-0d84-428c-bbcc-f52f5436d0f8"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="b34d6578-c539-4347-bf5f-c9e629c5f654"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="d5d4dfc4-13a8-4585-b9c4-e47d0581e53e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="efcddb10-980a-4620-aa55-d170eff96e03"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="298b4a06-b359-4b2e-a257-a5d3b1238dde"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="8f27ec24-0d33-4646-bc21-add8cacdf83c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a69d95be-ca8e-4e83-a0f3-2b94d3aed73a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="e22c9c3d-dd0f-48a8-8ddd-9b259563c693"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="1f6f089f-39ff-4257-acfc-cff45bb4451b"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_update" id="d8ee5dc5-f3c3-402a-8268-738145d94631"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="80f698cd-605e-4925-987c-6876560b3778"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_update</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration202</itp:param>
					
                    <!--standard problem adapter parameters-->
              
				
					<itp:param name="z_external_party">CSC Internal</itp:param>
										
									
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
								
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_update </itp:param>
					
									
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4b7e5585-8769-4c4f-86f9-d9ecef1b46d8"/><con:assertion type="XQuery Match" name="XQuery Match" id="18eee586-dc43-4375-8a4a-8483b7690175"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Received_Stage" id="53dd6d11-007a-43ca-a472-1e36d493a9cb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4d25439b-6200-4efe-bd8f-66a6296c8bc9"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Received_Stage" id="f9fec3e4-d9e7-4f48-a965-65ae1eabdb7d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Prepared_Stage" id="6626826b-a49d-49bc-a3dc-8184d7ed0b69"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="509696d8-a305-4786-8f09-187bc64d58c9"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Prepared_Stage" id="96406c3b-f42a-4f9d-bfb4-b212e83068db"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Sent_Stage" id="1de6aa03-c0a6-40ec-bda2-dce9896d1b26"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6d7cd1bb-236e-4c29-9f27-112d163e4b8e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Sent_Stage" id="45057f36-1474-4eec-acd1-2756ee924bee"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Replied_Stage" id="211efc9b-414c-495c-b50f-9efed2554135"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2a5c5029-4387-46fe-8548-071ac0851eed"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Replied_Stage" id="b1170f8d-c9ec-45f0-9ecc-01c27728e823"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_update" id="14850746-ccaa-449c-8751-c0e78c7baf9e"><con:settings/><con:config><script>log.info "sd_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623000126</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_REASSIGNED" searchProperties="true" id="c9cfffce-c6d4-441b-b59d-3a74e5a43b0a" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="d7694207-aac4-4a34-baef-f021e8ccdf89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4806e1c3-f52f-40fe-acef-b36178cd956a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="641a9d0c-416b-4b9b-8c91-4f156f83ea1e"/><con:assertion type="XQuery Match" name="XQuery Match" id="97e84b57-2a62-4495-88d6-372a43d502b4"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="f9f39436-ba23-40fc-ae56-94fb94b470d6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c945886f-05e0-46e4-b7e6-e56f414e1d7e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="188cedc5-8666-4e6b-8769-2b515a159036"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="1a1773d9-b80b-408c-8d28-3441ee4c9b8f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b0f96f15-4557-4664-9041-0a0a3f5447e1"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="b67ae878-b774-4e15-91ce-42ae47c35d02"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="201006af-fc15-410d-a3c2-2186e8a68fab"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="99c2d8ec-5b47-4bac-abb1-a07a06b74803"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="f84cdd80-8fb8-4f99-a643-a16590fd51ff"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="904b8a0b-84bf-46a2-8ec9-d2e0bb0b6a2d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ef0d64b6-c1f0-4685-9705-effa61b5ed5c"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="05d12360-ac88-42b0-a474-4c7e188b6bc7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="404f5496-5562-4192-a87e-eabff0b5d77b"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_reassigned" id="effb4661-d9af-49fe-bb5a-795ea4fac82f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bb7bdd31-399c-44d2-bab2-d7942ae4d1a6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_reassigned</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration202</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_close_code">Closed</itp:param>
					<itp:param name="z_close_notes">This is close notes for sd_prb_reassigned</itp:param>
					<itp:param name="z_external_party">CSC Internal</itp:param>							
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_update</itp:param>
					
									
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="089f7d4f-2517-44f5-b57b-d8a15245525e"/><con:assertion type="XQuery Match" name="XQuery Match" id="90358a61-edc2-4f71-867f-977185632204"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Received_Stage" id="0f1e3dce-24d3-469e-aaa8-d85441b42290"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="302d659e-2f89-49c4-9a14-3a7c2fbcd147"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Received_Stage" id="efc9cead-d8d3-4c9f-89ee-3db59777a980"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Prepared_Stage" id="a9d18206-e296-4cc3-96ad-f478b494bb2f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="758779af-a300-4589-a386-b640801f88d8"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Prepared_Stage" id="fd1e9af1-c016-406a-994b-26adc3f2bdb0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Sent_Stage" id="b95afdff-f469-48cc-ad65-9ab14d2ef47c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="531f175d-a21e-445e-a5d9-2da484cbd1eb"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Sent_Stage" id="8ec51fc0-1cb8-42a9-a7f1-0c583196779b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Replied_Stage" id="ddc7c1dc-e779-4a85-ac54-93aa41b4ad40"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="dfda28ab-0f19-4218-b1ac-1c71b70708e2"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Replied_Stage" id="e6ab8f8e-f96a-488b-8031-1aff7074dbd8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_reassigned" id="5ca20517-e72e-4ab1-9e9b-af03e316ba43"><con:settings/><con:config><script>log.info "sd_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623002323</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_RESOLVED" searchProperties="true" id="0538be74-c524-4f0a-b20f-8a59288eb2c8" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="87609f7c-568e-4566-b2be-183675464360"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a39a1b52-53f3-4539-a49f-07b86dd7906c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c9bf3a6c-0c9f-48d7-8319-ba1c4cd1de6d"/><con:assertion type="XQuery Match" name="XQuery Match" id="0ba6e7ba-93b2-4201-9815-ac80b3e0879d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="5097d739-2e66-49de-9aea-ef202676c823"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="50e6124c-4982-4878-9845-a8f7c00a4ec6"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="3e6657f2-48ee-40fd-bd65-458da753ebe4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="c7a84f06-da50-4f36-ba9e-c70687820cf6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9e5c2dc0-f25f-44fe-8ae1-27236107e7a8"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="3e73dc2f-c7cc-46a2-a731-9fe2cafa2d65"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="e8c6bc74-4823-4273-85fb-cd764e432a3e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="dc365106-7395-4311-b2a0-af059b37be40"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="4bd6aaa1-85c3-4594-b655-b084339a676b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="64fabb6e-23d4-4e7e-a795-193817d9ff8f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c02441f4-bd44-4fdb-ae05-a688b5b4c50e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="65fa642c-6815-4b5b-853e-90a8270d2544"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="c60d6c16-03a0-425e-8f29-7bd642fad01b"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_resolved" id="9a7c2f15-ab98-49c8-a47c-dcaf8e664ae1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c0f9ad3d-ceaf-4dd7-9788-c28401d697bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_resolved</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration202</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>	
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_resolved</itp:param>
					<itp:param name="z_close_code">Closed</itp:param>
					<itp:param name="z_close_notes">This is close notes for sd_prb_resolved</itp:param>
					<itp:param name="z_external_party">CSC Internal</itp:param>							
															
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3c5cd267-2f5e-47f3-a786-b297b76409f3"/><con:assertion type="XQuery Match" name="XQuery Match" id="bf00b7b7-5e5e-4342-8b70-8f97585aa2e4"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Received_Stage" id="9f43d504-2be4-40a3-a462-d48bf864f703"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="51597d8e-3d52-4dfe-a1c4-3fa5a10e4bc9"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Received_Stage" id="4b7bdb6e-f097-4f31-bb68-78287668562e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Prepared_Stage" id="099ef04b-aab1-4bee-8e83-e87d5dae50b5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2bdcb77a-00d4-4e2b-8444-b31731f0b81a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Prepared_Stage" id="76bd812e-39c8-4e4d-be7f-cc34db3a3418"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Sent_Stage" id="2bffb702-b058-4ae8-8001-bd75c2438c86"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9e230d51-01d6-4ee9-9b13-836dce85c7b1"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Sent_Stage" id="592b059f-3498-4fae-9401-d8c59eaa9f7a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Replied_Stage" id="d50504d1-b383-4f05-9b64-5f85a69c9b32"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="26a808b6-3a15-49af-8be6-f07b81b5c469"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Replied_Stage" id="d4bcaa79-43e0-4ed1-8c40-829f677e723b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_resolved" id="40eb5c87-2a5b-45e0-a936-b8589aab8f5f"><con:settings/><con:config><script>log.info "sd_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623025019</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_CANCELLED" searchProperties="true" id="c9419619-1edf-4645-bc26-bf85823222dd" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="bfadb03e-b85a-4089-8e60-dee5f5859725"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a1052f1f-857f-44de-bc92-6e127cd65f5b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5a23fbec-59b2-4434-be15-1acbe25aa984"/><con:assertion type="XQuery Match" name="XQuery Match" id="348c3cb5-c9db-4914-9039-170a24783c6c"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="bf84662f-431a-421e-b8ed-f049b134e3c3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7a7caf3c-561b-4377-ac08-cdb921728fdd"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="b206f059-f651-4aa8-8e69-0f59b8287104"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="1b4cc302-2a38-4b9a-bd7f-bbcfa25d352f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="66d35963-33b0-48cb-858d-841f6b3fb502"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="fc78f4ce-c324-4da6-981b-a8ef907035d5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="9587c127-6202-4648-87f0-eb393c2f8420"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4ad857f8-7ab0-4c1f-bb17-a2b091ab2fd3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="e6f6f69e-bf0c-4985-bdd5-da5da42cec12"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="eae81659-37cc-4c4d-99e4-9c9beb45707e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b09cb773-105a-494a-a9b1-d651ec9bed2b"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="83b17a1b-678d-476f-b4fa-9b5db94cdf7f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="bda08a4f-62d9-4a7c-bebb-34c1686efcce"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_cancelled" id="40fa6220-215b-4834-95b3-52d7a194cb7a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="92367a20-2e9f-41b3-9f2a-f27537b3a7d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_cancelled</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration202</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_close_code">Cancelled</itp:param>
					<itp:param name="z_close_notes">This is close notes for sd_prb_cancelled</itp:param>
					<itp:param name="z_external_party">CSC Internal</itp:param>							
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>	
					<itp:param name="z_state">Closed</itp:param>
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_cancelled</itp:param>
					
									
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1e78cbda-ca60-4afb-867a-69b436e4d1ee"/><con:assertion type="XQuery Match" name="XQuery Match" id="b2616d59-ab3e-47f4-a342-f0793071369e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>&lt;itp:param name="z_incident_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Received_Stage" id="4b8cdab6-46a8-4b64-99b5-57ef119cc891"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e93df1c3-489f-40c5-8e84-67a6865cc380"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Received_Stage" id="8f173087-f5b6-422d-9374-e40a7b6bedc5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Prepared_Stage" id="a6e738bc-47cf-44ae-81e2-79690045244d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f57c2a22-5519-4f6a-bccc-6f95379b1c42"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Prepared_Stage" id="3acbb74b-2c72-40f1-982e-b1e768ee4608"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Sent_Stage" id="06b4d855-5633-47aa-9613-4c1cce99e9e9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f30ab86f-66b7-49a1-af0d-c89380bb67a1"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Sent_Stage" id="2e6f1c6d-cf88-4544-847f-a475eccb7b6f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Replied_Stage" id="13d2d7a1-57f0-4281-bea8-c9e831d3d51c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f4baa955-2857-4813-8588-7f644f28125a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Replied_Stage" id="c0d3c81f-7074-4617-a713-01ff8f615909"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_cancelled" id="5c57af99-9add-4c2b-bb16-bed0b2464b6d"><con:settings/><con:config><script>log.info "sd_prb_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623031625</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_PRB_REPORT_ACK" searchProperties="true" id="9a8edbde-4dd1-4f5a-8f8b-40e7c0636956" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="4570b678-5d7c-465e-b0c5-c0e9ba1eb24f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="67d38473-3557-48df-a305-7eb4921dba85"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f902607f-699d-4122-86af-667316fcb175"/><con:assertion type="XPath Match" name="XPath display_value" id="cd891df1-85c3-48ec-9db7-d6703ba31374"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="086b4728-01c0-4a04-a1cd-6e41cb712d6a"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="ef1e33b2-da65-4626-b689-24159d649140"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_report" id="52b6f21f-f954-4422-9eef-ba17d5bedf86"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_report" id="0313c7b1-58d3-4049-a0b8-5eb864e88396"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--Optional:-->\r
               <itp:param name="request_type">pro_prb_report</itp:param>\r
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>\r
               <itp:param name="effectiveUser">configuration207</itp:param>\r
               <!--standard problem adapter parameters-->\r
               <itp:param name="z_assignment_group">Noida Pod 1 Platform Brown</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_description">This is description for pro_prb_report</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
               <itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>\r
               <itp:param name="z_priority">5</itp:param>\r
               <itp:param name="z_problem_statement">This is problem statement for pro_prb_report</itp:param>\r
               <itp:param name="z_subcategory">Desktop Failure</itp:param>\r
               <itp:param name="z_work_notes">This is work notes for pro_prb_report</itp:param>\r
               <itp:param name="z_workaround">This is workaround for pro_prb_report</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="f82467c2-fd3f-4653-8101-3332c78f3ef1"/><con:assertion type="XPath Match" name="XPath z_number" id="29ee2d91-4c41-45ed-a01d-d283ec1526c0"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Received_Stage" id="bf29f5c4-ff5c-4a06-a9ca-f62b5bfc08c5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7a704f2b-63a7-4cd7-b431-5bcc619ba87c"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Received_Stage" id="f1ae4f03-c547-4dbd-8736-8fc765edb19d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Prepared_Stage" id="b4285f2d-08bd-441c-ae8e-82b371cd3dc9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0a554c61-f96d-489b-b208-25529d520030"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Prepared_Stage" id="ff6df29b-adac-481d-b7b1-d22976cb0bd9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Sent_Stage" id="6cdf8d43-5679-4546-848f-f467ff8c3d5c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3042d098-ba40-4fed-8757-e1e67ac6f7d2"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Sent_Stage" id="49c59d5a-4317-4b8d-8969-a9d2ea296da7"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Replied_Stage" id="dbc986bb-f2bb-4502-8317-93c7aa0f58b9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cbaa70fa-2d12-4cfc-8048-b702b83591af"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Replied_Stage" id="6b375ba2-b3d2-417b-9305-2332cae78e25"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_report" id="6674cc33-5226-4287-9da4-b591d1bd0856"><con:settings/><con:config><script>log.info "pro_prb_report has ran successfully"</script></con:config></con:testStep><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041463</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_PRB_REPORT" searchProperties="true" id="7d43b40f-7383-427f-a24d-fd0eb8e35b92" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - pro_prb_report" id="9a229014-a558-4012-955c-03903eef41ac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_report" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8defd273-11a1-4a73-9e9e-5697215b97eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--Optional:-->\r
               <itp:param name="request_type">pro_prb_report</itp:param>\r
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>\r
               <itp:param name="effectiveUser">configuration203</itp:param>\r
               <!--standard problem adapter parameters-->\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
               <itp:param name="z_operational_categorization_1">Application</itp:param>\r
               <itp:param name="z_operational_categorization_2">System</itp:param>\r
               <itp:param name="z_operational_categorization_3">Performance</itp:param>\r
               <itp:param name="z_priority">5</itp:param>\r
               <itp:param name="z_problem_details">This is problem details for pro_prb_report</itp:param>\r
               <itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_problem_summary">This is problem summary for pro_prb_report</itp:param>\r
               <itp:param name="z_work_info_notes">This is work info notes for pro_prb_report</itp:param>\r
               <itp:param name="z_workaround">This is workaround for pro_prb_report</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="449f6cb0-b968-4827-a8e3-f2bef968216f"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="6cb6d4a0-77c4-4a31-abf0-abc4ee0c6d3c"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Received_Stage" id="61ee133f-d765-479b-bfb3-006961a4c754"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3ae5e754-a992-40ac-a924-16562256c394"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Received_Stage" id="edfc62d1-966a-493f-bbfc-7fb2c0921a9c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Prepared_Stage" id="2341ccbd-60f7-4c8d-9722-e4361703018b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4a015ef2-8c31-41dc-84f0-07c712f73cfa"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Prepared_Stage" id="b6fbdcd4-e65c-4a72-ade4-e160722051f4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Sent_Stage" id="bb92b066-72e9-40fb-a98f-7a02e325805f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1bc7205b-ce88-42a9-921a-76136696ee51"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Sent_Stage" id="f016a00d-4854-476d-82f8-9e81fd284b5d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report_Replied_Stage" id="328a8cc3-ad3f-451e-bcea-2df22b5ddd44"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1131ca0b-23dd-4429-8a9b-dc9db11dfd54"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report_Replied_Stage" id="d1138b8c-0042-47f0-999a-a675bfd8a778"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_report" id="063b6046-09d2-4a34-ba7c-d831f809cc64"><con:settings/><con:config><script>log.info "pro_prb_report has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150723052844</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_PRB_UPDATE" searchProperties="true" id="427bd03e-aae0-4075-9433-16434a94b97c" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="111d9bb5-40f8-45c9-925e-8cf8dc8c5357"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c1a4bb08-fc58-4bdf-89f5-9a00ab37f6c7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d2fccd46-e16d-4599-8bcc-42e5a127640b"/><con:assertion type="XPath Match" name="XPath display_value" id="4d6645ff-738a-496e-9256-cbc029d8f131"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="56965de4-5535-4ba7-83bc-e5e137f28041"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="105d0099-3bd9-4c8c-8a80-d844dcc5c456"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="71268f08-afc9-4f3a-b1cb-b5b5e5f10c3e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6692804f-7ee3-42ea-8aaa-21c0c601849c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="997d63cf-475e-4ef2-a576-3d60572dd1cb"/><con:assertion type="XPath Match" name="XPath z_number" id="351f8c43-41e5-444f-9137-aa70d3508306"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="d5b0acf9-0d1f-47f3-8d83-51dda66dd74c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f2bfa976-7204-488e-83e3-4a1390d369e7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="bc247a98-0f90-4d8b-9be6-0958139f7595"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="76f92b9b-c2c8-4a32-b6f9-deb6281771f1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="977a3994-2627-469e-b35b-4f6f93f06d77"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="d3548410-31be-444b-95e9-d4760c28d163"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="204f2e4d-095d-4e56-bbd6-278cb0dc67d4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c6bab56f-6140-4882-94f3-32e87b9c077c"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="2f44f1f9-1852-4d3f-b1b6-97a10f4f72f1"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="edd9086d-79f0-4e3b-a1f0-1a9bd7aec288"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="988fe6b1-8115-4feb-a1a8-5b1b86001d4d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="2d226eaf-d61a-43bd-9378-b8b1f7bcea92"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="9dbbf728-cdef-468c-ac11-4a5afcff3885"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="d9b6de79-746c-4025-ae84-340e17ddddcc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="8427a581-cb17-4db2-937f-b7d4336b485d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="2a89809a-475f-4efb-be53-b403145e8749"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_update" id="646d9319-6c01-42d4-a3d3-adb5bb2606f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2918ff43-6c10-4022-af5a-2a26ca8241e3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">pro_prb_update</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration204</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_problem_identifier">${#TestCase#RECEIVER_ID}</itp:param>
					
					<itp:param name="z_state">New</itp:param>
					
					<itp:param name="z_work_info_notes">This is work info notes for pro_prb_update</itp:param>
					
										
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe0193b4-5228-4a4b-9fd4-4ee0001f7d5f"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="50978b99-4b24-4d3d-9b4d-8c3f993cc85b"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Received_Stage" id="19defdff-eb9c-4c3a-ab5d-903733374ea8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3d2098fd-2d80-45d1-968b-5fb916f67e4e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Received_Stage" id="18bb1296-e2bb-4b64-8ce4-14fc597723df"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Prepared_Stage" id="564e6af0-1ced-4afd-810a-5f954e974fd7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f46a8705-8244-4fca-8870-2362533a58a8"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Prepared_Stage" id="de5b4a13-2b13-4743-ade4-3d52e559349a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Sent_Stage" id="78a6d930-b349-46d3-8ac4-dabe006eaf9a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b7380bf9-1ad9-4a8b-9036-a94546ffebc3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Sent_Stage" id="66955955-62e5-4c0e-9aaf-68fa4684fa0b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Replied_Stage" id="def8a899-d1cb-4acf-8a61-38d5de24eab7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9b0ff5c8-7f64-4b45-abf7-095cecddd204"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Replied_Stage" id="38c08914-1dc6-4e84-99a9-843473885705"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_update" id="58caea24-3e1c-4fce-b787-d3b340b428fb"><con:settings/><con:config><script>log.info "pro_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041464</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_PRB_REASSIGNED" searchProperties="true" id="7e668af7-43f4-4d68-bc1c-aacd67f855fd" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="8c977297-f6eb-479c-99d3-24a1724d2b5f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6fd73ea0-f370-4348-8315-bbec4d53b4e9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="16f4d6b7-9ca7-4c70-a021-78021dafcf66"/><con:assertion type="XPath Match" name="XPath display_value" id="af96cdab-8f2d-4f5c-a2fb-ca1567529346"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="13eef59d-d8ed-456d-892f-a578ff3ca6b4"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="41122256-4890-4de2-b0b8-ec578e156c33"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="a089a574-c93b-446f-abef-0c262c00c928"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e29ef7d1-b16d-4705-9849-310059540b69"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3ff6dce8-a06b-41d3-a773-9a8f204fd8ae"/><con:assertion type="XPath Match" name="XPath z_number" id="728849e5-c473-4188-8200-80da6767dc93"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="bfb5f00c-cf68-4ab5-a47b-420388e86e9f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f653e975-c056-420f-91f9-ae04ee071bbf"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="34d7df30-0a57-4af2-be4f-223725df06ce"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="103386e0-3a21-4d2c-bd22-b560b8293a4f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="11af5a07-d12c-446f-ac13-458ea1e95716"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="a4844632-e656-4d17-a008-fd2822fb6e71"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="905dcb05-d802-4147-8d8e-fcc719e614e1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4850d513-b0bd-4955-852a-321bfe612fdb"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="ec791b02-ec0c-484c-b622-fd285d430af3"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="87183813-b0b6-48ee-ba82-c528ba18dd74"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e1b5d170-74a4-4551-95eb-50e6fdf5926d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="1097fd87-54c1-400e-a35d-0b7bf756d322"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="9f3ade53-5d60-419e-a77e-c6460a5c7bca"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="6848646d-4d96-4642-90b2-c6fdd9e58001"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="3358481a-06c3-4abb-85dc-18f467078959"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="b71e5532-be48-4168-8a1f-64e1c8e17000"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_reassigned" id="3567bc7e-9741-40eb-ad0b-0ffae2e61bda"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6ed54e90-f4cd-4f75-ad83-86e387ba9fcb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">pro_prb_reassigned</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration204</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_problem_identifier">${#TestCase#RECEIVER_ID}</itp:param>
					
					<itp:param name="z_state">New</itp:param>
					
					<itp:param name="z_work_info_notes">This is work info notes for pro_prb_reassigned</itp:param>
					
										
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5fabcf6a-c83c-464b-88a7-3d0c23da95e4"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="4126526d-7fb6-49b9-a650-7ae05fdac44f"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>INC*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Received_Stage" id="c25b633a-cace-4d2e-a0f8-e34d4d89d9d9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fda5a66e-9a82-4059-b42e-998d869d0f71"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Received_Stage" id="e35e068c-916d-485e-94c7-53322ee7680f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Prepared_Stage" id="a1943b13-d900-49f5-aa56-034a098d41d1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3271ee38-2ed1-4dcf-95d4-86a3e84a7d50"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Prepared_Stage" id="f1fecfb6-4029-4218-9ba6-7190376c22fd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Sent_Stage" id="3488b616-0a51-46d5-b5b6-2b1eb844b668"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="62856ef6-4755-4e7d-910e-77eeabe940a7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Sent_Stage" id="5727827a-0b1d-47b7-9e97-c41d03e4464d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def inc = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && inc == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	inc = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (inc)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Replied_Stage" id="dec29af9-275b-4722-91e7-0743f03b4f54"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c82678de-da63-4ae1-a0bb-771c02117a3a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Replied_Stage" id="ccf3cf24-dcc3-4668-b420-58e862a4f68d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_reassigned" id="cdd4f279-9c57-4494-a5ed-b12115589dcc"><con:settings/><con:config><script>log.info "pro_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>INC0029822</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_PRB_RESOLVED" searchProperties="true" id="7e8e6415-dc56-4b0c-976a-4744a6b51e09" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="6e0a22cf-e029-4190-86f4-60b3e1f4d478"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f275f036-7c35-4cb1-b8bb-8fdac5cc3ee9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="32ff67a8-69f3-4e21-8635-82b14e973bfb"/><con:assertion type="XPath Match" name="XPath display_value" id="106f7678-908c-4929-bf0c-b88fc25aa84a"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="f027660f-8818-4871-8e24-a687cbafcea1"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="49a32546-8957-4c6f-8adf-f4e2ecce75a8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="7ea578f9-6229-4771-9e8c-db21cea81e6f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bdc3d765-e744-490b-923e-f7a578085820"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8d38352e-5134-49d8-9311-79bc1eaf8de5"/><con:assertion type="XPath Match" name="XPath z_number" id="42502027-03a2-4095-89a3-e6b642c809cc"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="04b1c3c2-6d67-4bdb-be77-701c1d30a548"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4cdf2471-c5e1-44e7-9ef9-0eff45b8ea1b"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="07c405b6-86f7-432c-8bee-491d8c1e6add"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="79b5ecf7-9b03-418b-9304-5074dc3e269e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a21f7738-7e0c-4f11-817e-a3be5157468a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="8c0dcf1d-d6cd-45d1-96ba-534d3409c92a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="fc3c765f-db5c-48c7-93cf-cd27e4f9669e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="05874b11-41e1-4589-b04d-31dd4bd47940"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="03cff3af-d3d9-4d7b-ae52-bd4bf5b9f746"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="47a54266-e4fb-4bce-b08d-68d99ec3a222"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9b39e719-6f63-436b-a792-2653da795c82"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="837d1448-560a-4767-9f0a-76e8d0dabbf9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="65fa4c4a-ade0-4454-bb45-3a00072e236b"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="aaa0bace-aba1-41d7-acac-a3dab7afa566"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="df33c267-2b2c-4245-ac8c-87249731c1fd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="9cfe0104-adbb-4164-b8dc-e9b4237daeb9"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_resolved" id="c54893e1-9a40-4a83-810e-509bdbf6c1e0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d96a33c8-eb0c-47de-8518-1d4892b5d6b0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">pro_prb_resolved</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration204</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_problem_identifier">${#TestCase#RECEIVER_ID}</itp:param>
					
					<itp:param name="z_state">Closed</itp:param>
					
					<itp:param name="z_work_info_notes">This is work info notes for pro_prb_resolved</itp:param>
					
										
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c5913925-ac0e-4b3d-bb16-18adf25e8599"/><con:assertion type="XPath Match" name="XPath z_problem_identifier" id="b8f0a7bf-c918-4982-a83a-f9d3f8a46008"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Received_Stage" id="35d219d2-0df3-4b80-962b-77c4f30807eb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7ce2dfd9-a00a-4c83-aba9-5f732b088ef9"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Received_Stage" id="5428a8dd-6c2f-4637-bee2-34f2a2b9e8f6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Prepared_Stage" id="9eec739f-ce72-48ed-995a-a1000653cb79"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="72628f85-8c6b-442c-91d3-488345ebd173"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Prepared_Stage" id="e465f9e3-f37c-43e8-9339-6a2aef0d8cf3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Sent_Stage" id="cb514c64-0ab5-41f3-a4d7-475200c7e26d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d1bc8edf-6d7a-4c8c-a34d-f30735d8d7be"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Sent_Stage" id="3a4a90d9-c496-48b0-90c2-659491245d8a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def inc = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && inc == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	inc = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (inc)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Replied_Stage" id="8df21b47-dac9-4d9e-9d87-5e52dbad726c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="99bb4a7b-d50f-486d-90ba-485213a3491a"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Replied_Stage" id="e46249c0-6693-4bec-a933-aa847a360e3c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_resolved" id="5b85584c-427b-4c11-af73-ebf51574d88f"><con:settings/><con:config><script>log.info "pro_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041465</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_PRB_ASSIGN" searchProperties="true" id="dcaab57b-c847-470f-b911-d9bcef1f22ee" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="d295c433-2593-41d3-b143-e3298e34cefe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="b0af88ac-c672-4ffe-b2d7-6f6327418411"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="d5dc879c-d75a-4ddb-87bf-f55dd2a9983f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="1f5f0258-5782-46f4-a3b0-0af287961839"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="aff45074-893f-423e-92b5-8463b354fb9d" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->

					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="z_transaction_code">sd_prb_assign</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>              
					<itp:param name="z_external_party">AT&amp;T</itp:param> 
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_assignment_group">Approval Test1</itp:param>   
					<itp:param name=" z_work_info_notes">This is work info noted for sd_prb_assign</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>   
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param> 
				</itp:params>
				<!--Optional:-->

			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="pro_prb_reassigned" id="2bbcca5f-95dd-4d54-94d4-07f8960f00dc" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="pro_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Problem/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->

					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="request_type">pro_prb_reassign</itp:param>
					<itp:param name="sender">AT&amp;T</itp:param>              
					<!--<itp:param name="z_external_party">AT&amp;T</itp:param> 
					<itp:param name="z_company">CSC Internal</itp:param>
				
					<itp:param name="z_assignment_group">Approval Test1</itp:param> 
-->					
					<itp:param name="z_work_info_notes">This is work info noted for pro_prb_reassigned</itp:param>
					<itp:param name="z_vendor_ticket_reference">PTASK0010528</itp:param> 
					<itp:param name="z_problem_identifier">17d11413-2b46-417b-b6e1-d1c634eb7556</itp:param> 
				</itp:params>
				<!--Optional:-->

			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="06fe3976-6dcf-4c97-aaf0-828a2ec756a1" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="628b2bcd-8431-4b4e-86a2-180e9e46686b"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="641fd478-e982-45eb-b004-7c2eb1c5fab3" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="582e9a24-92a6-4035-926d-398b2fb4b895" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d9d0f488-6605-47e5-8d99-4211a1064d55"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="95687e16-13b0-4ffd-98fb-e20ee376fd64" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="80de25fb-7c2e-4a33-9ac0-004f405a7878" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2d34fee5-dd7d-4aad-9963-c8f263a0c6a5"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="412b0f4f-8767-4b75-b76d-b859d4489939" disabled="true"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="31fc5574-28c4-481c-8037-ae008242b238" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0fdeb882-ea24-45df-8bbc-f547b5b73656"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="792a674d-8c77-4d76-839a-c0e64ade8383" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="524336a2-35fd-40e3-98ea-c7ea65ec2cc7" disabled="true"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041815</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010571</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_PRB_UPDATE" searchProperties="true" id="1ad18d32-39f5-4674-9535-8a8bf728f58f" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="88f4b8f0-0cf4-4c37-88ed-c4d2a4c5f5e3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fe6d7bfc-bde0-4902-b07d-5f6db9d3f451"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8b59db22-d813-40d4-ad8e-7c0bee225bea"/><con:assertion type="XPath Match" name="XPath display_value" id="df69f866-d1d2-45c5-abe0-1b8e98653207"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="d32830a6-6a4b-4e35-a0be-a3748ce7d143"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="c72c4c10-8fa6-402e-91be-87201f7c406e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="8a788755-56c0-4aaa-9ac9-8184787e5b67"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="47de4e40-2765-4f9e-9013-f48d6be2bb95"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f01586e-50f7-42f9-b8ab-e0e433cbe60c"/><con:assertion type="XPath Match" name="XPath z_number" id="7ea5a6d2-0128-48ad-8bce-18e1950f1df2"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="26ca8c15-5403-4b87-9b1d-8ff7fc88e13f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d256ad4b-bcea-4a42-af8b-6bcad5631cc6"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="0f71edad-2448-403e-a475-ffc491e23c8d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="ddd57c3d-ed32-41af-a234-fb1acec0fb43"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="db726975-eb80-4dce-9036-6c123a457c8c"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="52abc83d-4bc6-430c-b641-5fce54879e05"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="113ae257-585d-4284-b7bc-b3939c0b17d3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ea893cac-e6ac-429b-a5b7-ca57857c367d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="7a2bd763-aa23-445e-9c0d-4fbf79cc7a79"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="1b5f03dc-ca6e-47a6-a82d-01d55a3ee0f4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f10fd2f0-b920-4a26-86c6-1af21974b154"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="e6f9819c-b62e-4151-b206-68f8acf207e6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="fce36679-72f0-48f5-af8b-fd6d945b89b3"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="3fad22fb-5f0b-4e1c-89ab-b7d8fd4febe1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="dd206390-745d-4caf-9240-169446f10c1c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="2cded113-ce0a-4c48-874e-59647a70fda8"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_update" id="cd7a29a0-fbb6-48c4-a034-cec2df7c905d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="00733263-fecc-4b04-846d-a7b4ab5fabe1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_update</itp:param>                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  				               
                    <itp:param name="effectiveUser">configuration206</itp:param>
					
                    <!--standard problem adapter parameters-->					
				<itp:param name="z_category">Hardware</itp:param>					
				<itp:param name="z_external_party">CSC Internal</itp:param>					
				<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>	
				<itp:param name="z_subcategory">Desktop Failure</itp:param>					
				<itp:param name="z_work notes">This is work notes for sd_prb_update</itp:param>			
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="392ec95c-bee6-4efb-828d-649c079f397b"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="f294a6a7-f3fe-4fd1-b31e-8a56859b963a"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Received_Stage" id="ab6a0251-c0cc-42f4-b30a-8f460452d286"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="70ce3b2f-32b6-4297-b003-11f7982262ed"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Received_Stage" id="67642ded-35e2-44b5-b172-0dfa0948483f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Prepared_Stage" id="8af21218-26b0-45d1-8300-f0cf93ee4100"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="38aeac95-9f5d-404e-82ef-afc989c055cd"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Prepared_Stage" id="5e95c776-9f1b-4d44-8127-972f34e004a7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Sent_Stage" id="dbe0bb7e-412f-4f53-bca0-a13448e7cb2d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ddd1f901-b4c1-4208-97cd-7c5609f982cf"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Sent_Stage" id="20734729-aad1-49de-a9df-c84d80a9ca2f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update_Replied_Stage" id="713936e1-6d6f-4be3-9a4a-31adba2e0670"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fe537212-0eee-4ff1-8689-e00353cbd8c3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update_Replied_Stage" id="b7f1be7c-1cb4-42b3-98e6-8f9db90aa04a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_update" id="c29c4918-face-4708-93e1-042020cd362a"><con:settings/><con:config><script>log.info "sd_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041529</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_PRB_CANCELLED" searchProperties="true" id="d6da7dcc-f57f-48c7-b562-5bedd72de51f" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="ef553e1f-1a53-4d2b-b5f7-5c79769e9881"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ba5435ff-e5d0-4138-9a5f-56071f48a4b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5a6226b9-e253-493a-b66b-5570cbf0c821"/><con:assertion type="XPath Match" name="XPath display_value" id="117d9610-893e-4680-bf49-5b365228fee1"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="008e4887-6e04-4328-a212-5502d02b82ef"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="78e6eca6-1805-41a8-924c-2880bd06d108"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="c570c07b-3cf5-4cc4-8ceb-3c02b9b18a97"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8f59c822-c845-4d80-972e-6787b7cc57d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="cee5e301-99d1-460e-8de4-d6db9ff169e2"/><con:assertion type="XPath Match" name="XPath z_number" id="c432fbc3-bae5-46b0-be78-1f6a79f39344"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="9b284c9d-2b53-4c63-b1bb-42a2f7eb4d6e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="530afd91-38a4-4d75-a70a-6758c367d9cd"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="3603a09b-aceb-442b-b707-11a39ccbb4aa"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="44793a40-e91c-4700-bf8f-c44d04000d58"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8837e76b-7877-428a-8fe4-d169fa00a748"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="10363a76-70b4-4033-a864-ed267649b8e7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="b3568c4d-73cb-4e62-a4d5-f9bb0d0c77eb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7e3eed24-cb08-4b8b-9bc0-496b72449244"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="d6e68273-3c37-4c4e-8597-caa704bfa609"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="f970dd63-8cfd-40ea-96b7-450c376962f8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a74ebae3-e4aa-4e09-be0f-c7cef5352c16"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="88f93563-801a-45b3-a561-566269ae3aeb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="f8d5aafc-fef3-461f-bff1-94e13541caf0"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="245f70c4-aaa2-4969-b62c-228e8f71c491"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="0b6a7590-3af1-4ebc-a4b7-be806918ee78"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="0d4006a1-50dd-4308-b009-b0b94f6bfbaf"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_cancelled" id="461a58da-a9b7-4e86-a79b-4ea34a5bbe9f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1749391b-99c1-4d7c-877a-f22eb6d13c86"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_cancelled</itp:param>                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  				               
                    <itp:param name="effectiveUser">configuration206</itp:param>
					
                    <!--standard problem adapter parameters-->					
					<itp:param name="z_close_code">Closed Complete</itp:param>		
					<itp:param name="z_close_notes">This is close notes for sd_prb_cancelled</itp:param>						
					<itp:param name="z_external_party">CSC Internal</itp:param>						
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>	
					<itp:param name="z_state">Closed/Resolved</itp:param>					
					<itp:param name="z_work notes">This is work notes for sd_prb_cancelled</itp:param>			
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="64e27548-321c-4b68-a558-c37d112a52bd"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="0e866b73-01ea-4bb2-a5b6-8d44432d6b98"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Received_Stage" id="36a7a48e-4905-420e-8410-7827a409a015"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b4ed9050-f581-49de-827e-08b354c67b64"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Received_Stage" id="d0deed79-8f21-4a93-8fb9-e9ab3150e202"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Prepared_Stage" id="f0b3d693-a39d-4bde-b02f-bab4f760cea1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="54396982-cb3d-4e2b-a63a-7387a76b62c2"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Prepared_Stage" id="62743bb2-a437-464f-aeb6-dbe28afd4180"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Sent_Stage" id="d4266baa-6e78-465e-b334-5f190da4021d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="de3485eb-93af-413a-848d-c52f8ccaddeb"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Sent_Stage" id="2167ec18-2ec4-4aac-ab1e-9cf11b6dd2a6"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled_Replied_Stage" id="95f4095e-1f91-4b13-955e-e1a882990db0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="197baf64-20b8-44cc-b87d-2c938ea97d50"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled_Replied_Stage" id="297c2367-b154-4eae-88ad-976257026773"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_cancelled" id="5d0994e2-2888-4560-adaa-134be763cf2b"><con:settings/><con:config><script>log.info "sd_prb_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041529</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_PRB_REASSIGNED" searchProperties="true" id="0ac12670-c50c-499c-997e-962bcd0c09d1" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="0465c2e2-58f1-42d4-bc16-d91394ccdf00"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8de74320-9ee5-4b94-a032-e29eecb5da44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7e51fa48-a0a1-43dc-884b-047f25e8be78"/><con:assertion type="XPath Match" name="XPath display_value" id="6d9664a1-567a-47e3-9484-b1df7d94134c"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="97fc5d8f-14dc-4e32-bd0c-e19375c53a5e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="0b49caa8-953b-4a1f-851e-2b8802797c9e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="70226b6b-8c37-48e4-a552-81f2370e1242"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ce772ca1-e1a2-4fc8-90bf-bd355abf8102"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fadd11b9-a1ac-4e23-ae1d-3659cf55f44a"/><con:assertion type="XPath Match" name="XPath z_number" id="39ccd172-9d0f-40b1-b4d9-be89525f4c9e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="16729c1f-6c51-460c-a097-d3e300475258"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1e1d605e-5544-410b-8be9-5f4903f3c9c1"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="4d0a7fbc-4909-46aa-9553-aebcb59885fc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="7c719061-55ca-48b3-a854-3b64a2ba17ba"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="af6485a1-a0ca-4df3-933a-d23375f7bd9d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="3f314b6d-7092-45d0-98b8-b1e67e085c5c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="bc149117-9da0-494f-891a-ca7c7b964283"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e367bf7a-b729-47a5-9830-a4b7a149c16e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="0d5575c0-916c-4fcd-8428-a5fe09ad8257"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="9cd9328e-4525-4d87-aa36-8ec34932149d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f7087bcf-5814-4150-a8de-a6de015b8ee0"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="fc05bffd-90de-4bc6-981c-630271e5d266"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="20cde80c-c4b9-4282-9a36-36df6b65c391"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="60a1c353-f83d-43e5-ae55-383a09e32662"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="295b403a-61e0-4b1f-a462-790bb119694d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="a79fbaa8-6be5-4d4d-9991-a60ce37a4383"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_reassigned" id="32e9a3cd-2a82-435c-9af1-b2b862b23056"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1b698f08-ee51-4813-b6fd-855a0eb67be6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_reassigned</itp:param>                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  				               
                    <itp:param name="effectiveUser">configuration206</itp:param>
					
                    <!--standard problem adapter parameters-->					
					<itp:param name="z_close_code">Closed Complete</itp:param>		
					<itp:param name="z_close_notes">This is close notes for sd_prb_reassigned</itp:param>						
					<itp:param name="z_external_party">CSC Internal</itp:param>						
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>	
					<itp:param name="z_state">Closed/Resolved</itp:param>					
					<itp:param name="z_work notes">This is work notes for sd_prb_reassigned</itp:param>			
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c0f8150a-b09e-42ee-b2ae-9e57fd7321ae"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="9c5a1ca3-2081-4647-9499-ccc6a852e7da"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Received_Stage" id="532d4ac9-7d7a-4cae-84e0-097e83f20d0d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="13d5fc9b-f8bd-49ac-b5ba-34de67c57bbc"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Received_Stage" id="202aaee3-3ea1-44b7-b9e7-342d17732bc9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Prepared_Stage" id="5a5819aa-f678-4a20-93a4-895aa14dc37c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6ff5dd55-f05a-43f9-aad5-ae6f0070f91d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Prepared_Stage" id="e0dce428-e157-48c2-981f-0038d46fd69a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Sent_Stage" id="8ca5104c-766b-4811-9056-9821ed4c1729"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="78c9c3e6-d9db-47ff-a7d1-6e2ad9637088"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Sent_Stage" id="3df80002-b96a-46ca-822a-7006dd808498"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned_Replied_Stage" id="170dd70a-0340-4bbf-b5c0-e7fef8a98388"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="34a74182-6ad6-4170-bd28-fe05d651eaa2"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned_Replied_Stage" id="3e24c218-1667-48d3-985f-342f48ca26ff"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_reassigned" id="ce40afab-7980-4c08-a462-a3589b258f66"><con:settings/><con:config><script>log.info "sd_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041529</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_PRB_RESOLVED" searchProperties="true" id="27139bd1-4c6f-4e89-b70c-5c29e144fc56" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="0f4d3ff5-fb65-4466-95b5-fcd169e2f6be"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1898ed52-f301-4d43-9cc4-06d03971914b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d0a666c5-037f-4d18-b48e-ecc554f3f7d4"/><con:assertion type="XPath Match" name="XPath display_value" id="87ad5f58-577c-4a0a-ac64-084d97928e2b"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="dd67aaef-8548-4087-8bdc-b38726df7837"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="c3dcc033-d422-4de9-9a14-d704abc4ba3d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="2c28ce4c-2a76-4858-a263-a0b5583f29f1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd232b3a-b48d-4159-a9ca-6072dd718d98"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration205</itp:param>
					
                    <!--standard problem adapter parameters-->
					
					<itp:param name="z_category">Hardware</itp:param>
							
					<itp:param name="z_company">CSC Internal</itp:param>
					
					<itp:param name="z_description">This is description for sd_prb_assign</itp:param>
			
					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>
					
					<itp:param name="z_priority">5</itp:param>
					
					<itp:param name="z_problem_statement">This is problem statement for sd_prb_assign</itp:param>
					
					<itp:param name="z_subcategory">Desktop Failure</itp:param>
					
					<itp:param name="z_work notes">This is work notes for sd_prb_assign</itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign</itp:param>
					
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7cad7ee4-8335-4d24-982a-9c1f9d943dd0"/><con:assertion type="XPath Match" name="XPath z_number" id="67613da4-0d33-4436-af3b-4c2d0d5f2d50"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="3e035215-9db3-4295-aa63-0ab9dd4442d2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9771ff86-5874-4824-983d-72c5e933179e"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="71ddb124-c1b7-4c53-a950-ce692f555b44"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="db5bc971-50f5-4b60-9aa5-fe7bdc861e5a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="283dbd44-c6d5-43b0-ae56-6d2e47dfec1d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="a87f706f-1932-4177-a5ae-e37adaeb04a3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="8ae27ab5-0db3-45d3-97cb-97d18ac13e56"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="356347e5-139d-4acf-90da-8a0d55be010d"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="5ad328d3-e37b-4b07-9870-091b7d7e3288"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="77490993-dd00-4830-8a64-a421962bb3c3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2fdaa3b8-be77-433d-a73f-9fc77801c473"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="7b16695b-6fc9-4252-93c7-53f14be0cd42"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="5d5065d5-0246-41a1-9686-cb7ea40fc23c"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept_Replied_Stage" id="ddeef233-f40a-4508-9b5c-d35901796962"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept_Replied_Stage" id="87773a97-0f16-4e0b-8d2b-f73870ce405d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="db857275-8b2e-49e3-91cb-19fceab61cfc"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_resolved" id="20323117-85f5-4210-abb4-96778745c9c3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="69379142-1fb6-4aff-8cac-39735a83238d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_resolved</itp:param>                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  				               
                    <itp:param name="effectiveUser">configuration206</itp:param>
					
                    <!--standard problem adapter parameters-->
					<itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>	
					<itp:param name="z_state">Closed/Resolved</itp:param>
					<itp:param name="z_work notes">This is work notes for sd_prb_resolved</itp:param>	
					<itp:param name="z_close_code">Closed Complete</itp:param>		
					<itp:param name="z_close_notes">This is close notes for sd_prb_resolved</itp:param>						
					<itp:param name="z_external_party">CSC Internal</itp:param>							
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8da5f43c-3f19-4194-9ec4-08c87814364c"/><con:assertion type="XPath Match" name="XPath z_incident_identifier" id="71eaa35c-e81a-4450-87c1-dfd6e0345a81"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Received_Stage" id="590e4d96-7243-4381-8aa6-8f1e9614c1e7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2f85ee19-9ecd-45c4-ab4c-1322db3ab188"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Received_Stage" id="f7e34bd6-33b0-48b4-ba72-75ce7ea68c95"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Prepared_Stage" id="1cc1e0e0-51be-4133-9afc-9123b0574fc4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2f24690f-e5be-48ec-815d-3cb02b16a17f"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Prepared_Stage" id="e47f85d6-9e1f-4337-8183-537503a820a4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Sent_Stage" id="7def3b0c-312b-4612-bc22-9077fc62b944"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9d93894c-b507-4f9a-9c96-146a865e06fc"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Sent_Stage" id="9ae83757-568d-4c7b-907c-ee5103c5d0f3"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved_Replied_Stage" id="80b20ee6-165a-4766-a28a-61134c543163"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="320f6609-b7dd-438b-98f5-fdfb8f7f72fc"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved_Replied_Stage" id="988cef06-aa60-4956-8729-6ad95778ded7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_resolved" id="ed4dc414-71aa-4b3a-97ff-889c01ce684b"><con:settings/><con:config><script>log.info "sd_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041529</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_PRB_UPDATE" searchProperties="true" id="66055e04-f652-46ca-8f7b-7e686df73dc7" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="53231fcd-8dd3-48cd-8d9e-a4ee4787dae4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2ea58cd0-de58-458c-a670-d65f3617c9da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f6f1b35e-c219-4dbf-a337-224bf3cfcd78"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="d8353b2d-da37-4904-8efd-e21a9df2f295"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="18bd4f84-d885-4108-8ac2-5a4eb5d4f3c1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="88e1697c-05f7-4515-9662-55717203bde7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="ef50d4a4-02f9-4baa-b2a5-8a66bacdd45f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="6ab9beab-b0c1-4b74-8148-b9b1cfcce6ba"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e89b895f-1014-4195-a1d0-8d64ee81f36f"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="fc6473ad-3fe6-42bf-8449-fba9c0561818"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="c15a6b54-3b04-427e-9468-83e4c5122d87"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="04c4708d-7923-4d42-a796-e72301e77e0f"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="bd3726c5-e0ea-4444-85e6-036ba5a66b4a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="6f964e1b-9c54-4c60-9c22-758a166584f3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21fa695d-9a71-4903-a632-ceb1e7271c5f"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="73ae5ec4-28b0-4c54-a093-97a5cf8dc175"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="6acb5a29-3c6d-4f7b-b806-08470090bae8"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="7d5e720b-8954-4e00-a5a4-2f4fe4701a23"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0123c049-b763-4090-9cb2-99b8766c5398"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="0817b9d8-799d-49b1-bc4c-17da93682b7e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="936bfd67-fb54-40e9-aacd-f0bc57b7a671"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_update" id="cf396e2a-d62d-47c7-8a8e-5a1f6b33ba41"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="afabf38e-5f27-41e3-957d-2a10254a42f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_prb_update</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration208</itp:param>
		  <!--qbe servicenow incident adapter parameters-->			  
		  <!--qbe servicenow incident adapter parameters-->		  
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
		  <itp:param name="z_stage">Closed/Resolved</itp:param>
		  <itp:param name="z_work_notes">This is work notes for pro_prb_update</itp:param>			  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b4a97dd2-54a0-46bc-b85f-eae7ff44513e"/><con:assertion type="XQuery Match" name="XQuery Match" id="7b5c7f71-53d0-4f3a-a186-8d3366ad264a"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Received_Stage" id="44b7924f-3709-444a-a93b-a49e3165aee9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="db54198c-4799-471a-b9b3-f76d54b35f39"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Received_Stage" id="1afdf313-50e4-4e23-889d-8135679f521f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Prepared_Stage" id="5b3fd55f-12d6-49be-ae48-4b1710f44c02"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a6a03186-0de6-446f-9018-8799f7e4b906"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Prepared_Stage" id="cb04d101-3a7a-41e8-8b06-68bc4a150334"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Sent_Stage" id="4a91b7b1-bfa0-44d8-9be8-6e6cc52eb710"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c2650145-d2a4-4d10-8560-eb8791de4a86"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Sent_Stage" id="f5651106-ec91-47c2-993c-2f344802f093"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update_Replied_Stage" id="2c113b12-26ac-4f68-a72d-f0cd903b0036"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ff6973d8-66ae-497f-8082-c6b29d78cfd7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update_Replied_Stage" id="76814804-c489-4c0a-bf9e-54d4de0209d8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_update" id="3aec98d9-ee3d-4d0a-8b05-3700c71442cb"><con:settings/><con:config><script>log.info "pro_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623000126</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_PRB_RESOLVED" searchProperties="true" id="5c261e13-a094-4e67-89b4-95fd269a8984" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="60a1bd5a-27b0-4ef5-bc98-e640674096e4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="80bec23d-46a7-4888-a247-d728e7af28c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b63ce274-8971-4756-97fe-a7bfa5bc3aed"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="d48cb6b6-5e20-4804-875d-f7e79f1835fa"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="fd4033d2-2ba7-4af4-8d21-2d97d2c10300"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4b5e05b4-be7f-4cce-acb2-d3674593b2e6"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="0a589b8b-f730-4aac-9c07-089b17c95ffd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="313082dc-dc7e-4d7b-a016-715c5800853b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa100492-431b-4f92-91c2-184fe5a4b48f"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="18c3fc8a-5279-4329-8d9f-be720e3bfbd8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="9c9b08d3-755f-4e8c-9fd6-b828fc60ab2c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="719b7d0e-991f-4033-8a35-b658a33ea391"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="1017e289-4e3f-446f-af8c-b9ffd496e919"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="9c3618a7-811c-48ce-a732-0dffc4cb32d3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4c297ad2-d5e1-44c9-8d5d-c96a1d849c18"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="7cdb16f3-f8f2-4b64-bf21-99b7d83cc5a0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="c79d3b36-c1a1-46c1-81fd-6f20e788efec"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="144e42ea-0c93-4941-a4f2-7daa9552e2df"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0bd2b4d7-9584-4544-98cd-0dbf78d314db"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="87910c2e-defa-489b-a673-207ac394cd3a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="9e96e747-f856-411d-a8be-8be3d88be569"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_resolved" id="38d36b76-b1e0-4f6b-8589-cfe86fc04af4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7d7d4f04-e0e6-4c25-9a67-9b6a6d640395"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_prb_resolved</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration208</itp:param>		   
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
		  <itp:param name="z_stage">Closed/Resolved</itp:param>
		  <itp:param name="z_work_notes">This is work notes for pro_prb_resolved</itp:param>			  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7844fff9-7d0f-47cc-a258-d8012a518c45"/><con:assertion type="XQuery Match" name="XQuery Match" id="b445bd1e-16ae-463a-a304-6cf886b0e84e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Received_Stage" id="24070484-03eb-49f5-8113-41e3c42f3dc9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa9a0051-d833-47eb-af55-6f595878d717"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Received_Stage" id="c5bd5464-1145-4f12-8970-dc8202cb9ed1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Prepared_Stage" id="75d71904-8746-45cf-9414-1f5cf0e058c3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b01a3e1-e450-40b2-a82c-a5f0bd3cdff7"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Prepared_Stage" id="d232845b-7c61-47a5-9944-14dc51b9f363"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Sent_Stage" id="ee02529f-b899-4fd6-915a-909c42c25925"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="641ed59b-25c1-43a3-a6d8-9a8a875b56f8"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Sent_Stage" id="3dc75a1f-e2f1-49e5-84c5-93bbbc17320b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved_Replied_Stage" id="2791d411-a77c-463e-bffc-136e47a0e4e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="11ac0397-da43-4b86-91d7-093a96713120"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved_Replied_Stage" id="9c603820-40fd-4166-875f-1bb3a4c1e6b7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_resolved" id="f1b77398-e7ce-4539-aff5-c8fa68414d65"><con:settings/><con:config><script>log.info "pro_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150623000126</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_PRB_REASSIGNED" searchProperties="true" id="17a857dc-e724-4ce2-baf7-a9d7276d5279" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="8509d991-f37b-4409-8df7-5fbb08722567"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="54fbf0ef-c0d9-4865-b5c3-875252550813"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                     <!--Optional:-->
                    <itp:param name="request_type">sd_prb_assign</itp:param>
                    
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
				               
                    <itp:param name="effectiveUser">configuration201</itp:param>
					
                    <!--standard problem adapter parameters-->
              
					<itp:param name="z_company">CSC Internal</itp:param>

					<itp:param name="z_external_party">CSC Internal</itp:param>
					
					<itp:param name="z_operational_categorization_1">Application</itp:param>
					
					<itp:param name="z_operational_categorization_2">System</itp:param>
                  
                    	<itp:param name="z_operational_categorization_3">Performance</itp:param>
						
					<itp:param name="z_priority">5</itp:param>
						
					<itp:param name="z_problem_details">This is problem details for sd_prb_assign</itp:param>
						
					<itp:param name="z_problem_identifier">${#TestCase#ID}</itp:param>
					
					<itp:param name="z_problem_summary">This is problem summary for sd_prb_assign</itp:param>
				
					<itp:param name="z_work_info_notes">This is work info notes for sd_prb_assign </itp:param>
					
					<itp:param name="z_workaround">This is workaround for sd_prb_assign </itp:param>
					
				
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d2ba961c-5577-43bb-9115-ba1738a29ee5"/><con:assertion type="XQuery Match" name="XQuery z_problem_identifier" id="19df9a15-198b-49a8-bb78-a45c84b8c167"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Received_Stage" id="05ca4da1-91ae-4b22-bb64-1368b2ef0db6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c2dea12f-3675-4873-9fc3-f46e2fe4b716"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Received_Stage" id="ca3203d0-6ff9-4672-90e7-10dad7fb8264"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Prepared_Stage" id="500a1f2b-46f9-4391-8ff7-d9d9a8d4bfcc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d671c4a6-e58a-44e7-a299-a233ae05b962"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Prepared_Stage" id="8bec8a07-63d4-4296-8025-ee0a10b10d85"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Sent_Stage" id="8c43fc2e-ea58-47fc-91f8-a63322dd84be"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8d20dbae-36a5-4939-8077-536397ba8dad"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Sent_Stage" id="fdeeb9ce-19e9-4cb8-9dae-129e08d3c75d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", prb)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign_Replied_Stage" id="333c4c17-1b29-45aa-b3cb-4beeffe8a781"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b693ab5e-456b-4f55-b4f6-56ce6133fce6"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign_Replied_Stage" id="a5215f3a-6343-475e-ac09-bc5ef3ed356b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="2dc6b4c8-3ab5-4b73-b65a-b61c1b2e4214"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="debd6ceb-4647-4dfd-8543-67953e25fc84"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa35ad7c-1773-4d12-9f29-1534c953c2d3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="358877d7-ce3d-44a7-9736-ec4fe3aa4d5c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="4f1240e7-047b-43f8-bfbb-03a6359dfcc7"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_reassigned" id="510471dc-540b-4dd8-9ca4-662637b48794"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9013a08f-1979-4a44-8a90-0ae86f49b0b7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_prb_reassigned</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration208</itp:param>		   
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
		  <itp:param name="z_stage">Closed/Resolved</itp:param>
		  <itp:param name="z_work_notes">This is work notes for pro_prb_reassigned</itp:param>			  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="acd7e51d-c329-4ebd-857c-a4d91f1921f9"/><con:assertion type="XQuery Match" name="XQuery Match" id="62534e10-23d8-48f3-9a99-203315bbe08d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_problem_identifier']</path><content>&lt;itp:param name="z_problem_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Received_Stage" id="1701c556-791c-402d-8637-64de3856f798"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='received' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="62baf8b6-f4b8-4d69-92fb-28cd71ff3ef3"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Received_Stage" id="902e7634-beb3-45de-bd1c-4867dbba57e7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Prepared_Stage" id="53f6e417-5d70-469d-8fa6-022dc7b18c60"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8fe3b79f-25b6-4e18-915d-5b0e3f28ef95"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Prepared_Stage" id="2fa0d4ac-983d-4f10-aa2e-98d2dbadf20c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Sent_Stage" id="61ea3464-828b-4100-8be0-efcf97a927ff"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="387131aa-4205-43e8-907e-2d13a13aec96"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Sent_Stage" id="8a9ff1c5-f70c-4159-b5f4-0d7f3942324f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def prb = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && prb == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	prb = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (prb)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned_Replied_Stage" id="480aecc1-9895-4e7a-8dd5-013956c1c9d8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:PRB and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="aebbfe55-ecdb-49ec-865e-60a991958638"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned_Replied_Stage" id="b862c677-596f-49ec-9572-4c6a9823d3ab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_reassigned" id="1c40087b-88b8-4bf7-8325-0f93e8fd1db2"><con:settings/><con:config><script>log.info "pro_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150906234530</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_PRB_ASSIGN" searchProperties="true" id="8fd8317f-1f26-430c-9574-616f86864aff"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="bcf98ad1-fc85-48fa-a639-c398a15d67a5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="fe03bb2a-ec66-4614-9948-38a292d66fea"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="1e79e573-e366-43e1-8d1f-b219124c6122"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="734a3cc9-d4de-47aa-b500-6be9b85766bb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="e3e767a9-2d54-4de4-aa8e-d4241ffcaf1a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="z_transaction_code">sd_prb_assign</csc:param>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">CSC ServiceNow</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
               <csc:param name="z_assignment_group">Approval Test1</csc:param>\r
               <csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>\r
               <csc:param name="z_description">test description for sd-prb-assign</csc:param>\r
               <csc:param name="z_impact">2 - Medium</csc:param>\r
               <csc:param name="z_priority">1 - Critical</csc:param>\r
               <csc:param name="z_short_description">$test short-description for sd-prb-assign</csc:param>\r
               <csc:param name="z_work_notes">test work-note for sd-prb-assign</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="3c77559a-c33f-404f-90c6-b6db303d3332"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="ce9e5e9d-cce0-4b32-8dfe-e22f21511177"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_prb_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_prb_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_accept" id="5a28fcfd-db5e-43f7-975c-60cfbfbeeab2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">pro_prb_accept</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>


					<csc:param name="z_external_party">CSC Internal</csc:param>
					<csc:param name="z_vendor_ticket_reference">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_problem_identifier">${#TestCase#ID_ASYNC}</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="52297a28-f288-4809-959a-903beaa00ca9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="7d0885b0-05ef-4fdf-9ee3-d6292e657f20"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="727bb04f-d73c-4cd8-8fa5-fa062ec2fa45"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="166d9a01-15fb-4112-9c72-0d9b24b0f7cb"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041912</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160129082123</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010636</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160129082123</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_PRB_CANCELLED" searchProperties="true" id="91e8a771-dc4c-4a25-9f68-27729dd351c8"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="12a543cc-f7f7-4092-bbe0-62082a9bf526"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="406bcc0f-e4d6-4da7-8c5b-0a8395beec64"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="3d574de0-dc00-490a-93a8-edc680b0c12b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="d14406d7-ce4d-4363-9de6-4bb29356c98a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="8259e687-632b-4953-b6ea-1f07df3b9171"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_description">test description for sd-prb-assign</csc:param>
					<csc:param name="z_impact">2 - Medium</csc:param>
					<csc:param name="z_priority">1 - Critical</csc:param>
					<csc:param name="z_short_description">$test short-description for sd-prb-assign</csc:param>
					<csc:param name="z_work_notes">test work-note for sd-prb-assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="c6c8a089-4d00-43eb-b1d4-668ef030fe79"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="4c7e1073-5ff2-4373-8f5d-36b39dab9333"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_prb_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_prb_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_accept" id="bb39746c-cab2-4b0c-a152-5c50fce07f92"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">pro_prb_accept</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>


					<csc:param name="z_external_party">CSC Internal</csc:param>
					<csc:param name="z_vendor_ticket_reference">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_problem_identifier">${#TestCase#ID_ASYNC}</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="d43a19f3-7bd8-4b0d-a799-0fba5af571a8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="f8cb39d3-c120-4d08-8e41-6c688edc0b4c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="af6491d1-5425-4277-a2c8-e92ac86ffe8a"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="7ef1b197-94dc-462e-b11f-321225e276ab"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_cancelled" id="03013570-0538-4fe6-841a-323bddc786f3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_cancelled</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_work_notes">This is worknote for sd_prb_cancelled</csc:param>
					
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_cancelled" id="1e157570-c968-4941-87da-6edeedae0c55"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_cancelled" id="f61a1489-1717-4892-ac48-b46c990061aa"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_cancelled#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_cancelled" id="c1cc6be7-c3d7-4886-b522-284e6e39aced"><con:settings/><con:config><script>log.info "sd_prb_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041881</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8b2d6109-6c1a-45bc-90ff-c5daa6c63715</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010618</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160128092109</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_PRB_REASSIGNED" searchProperties="true" id="2bff13b0-0010-4b44-8a18-0dbaa4dafc0d"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="75a1c25c-bc5f-4f05-a1c7-bc398f25e241"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="c75ee44c-65c2-478b-aa51-a6da1191b229"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="00a2d4c8-f074-4d1c-b5ae-c1dd07aa6f58"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="1a635827-7dc4-483d-aad8-4818c3db7fae"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="acbdccaf-5963-4cd4-bd39-70c78cc7e1b2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_description">test description for sd-prb-assign</csc:param>
					<csc:param name="z_impact">2 - Medium</csc:param>
					<csc:param name="z_priority">1 - Critical</csc:param>
					<csc:param name="z_short_description">$test short-description for sd-prb-assign</csc:param>
					<csc:param name="z_work_notes">test work-note for sd-prb-assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="106f84d1-5d0b-46f3-af75-06323524facf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="c2989bb8-3b2b-465f-b97e-65093f8aca8c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_prb_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_prb_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_accept" id="7e92c9b1-485c-4907-aef7-7a770722a435"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">pro_prb_accept</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>


					<csc:param name="z_external_party">CSC Internal</csc:param>
					<csc:param name="z_vendor_ticket_reference">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_problem_identifier">${#TestCase#ID_ASYNC}</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="682000bc-4680-483e-b33d-ce3f9b9a9710"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="7b2a3618-a262-4a82-9964-a57b41bad5d9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="96436b2f-09de-4b66-96f0-9275931d69bb"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="03a9546a-5a73-4a9e-8174-62c54296f15d"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_reassigned" id="5d7042cd-73a4-4571-bd40-3f6d071b5d6f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_reassigned</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_work_notes">This is worknote for sd_prb_reassigned</csc:param>
					
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_reassigned" id="8d5d6ea4-8c5d-4025-93e9-4225e9e05a3a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_reassigned" id="10ff5cd9-9dc1-4365-a055-54b235af6b55"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_reassigned#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_reassigned" id="b2eecca0-03d9-4731-b4b6-07ae32aab751"><con:settings/><con:config><script>log.info "sd_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041885</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ff5b4063-8675-4bdb-98c4-3a2b42f9d392</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010622</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160128095044</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_PRB_RESOLVED" searchProperties="true" id="14d59735-e612-4617-bd00-8d5a0a0b8c8a"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="69afed64-41ce-4673-8801-4b0cfcbf1068"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="6686a98a-98cd-4efc-b4c3-bbf8ccdb0330"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="0126ea24-1a8f-4b0d-913d-ae5fab6789f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="da4e5a45-b63e-4e3e-a51d-b7d4a3441270"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="c2210660-5644-4511-ae2e-3223faef0eb3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_description">test description for sd-prb-assign</csc:param>
					<csc:param name="z_impact">2 - Medium</csc:param>
					<csc:param name="z_priority">1 - Critical</csc:param>
					<csc:param name="z_short_description">$test short-description for sd-prb-assign</csc:param>
					<csc:param name="z_work_notes">test work-note for sd-prb-assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="f16d47a6-16bc-4a48-8b57-d9356eea3f91"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="510f08e8-a14a-4531-9bb8-9803bb591668"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_prb_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_prb_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_accept" id="801e09db-e6ef-48ae-b2ef-9dfc3414bb7c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">pro_prb_accept</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>


					<csc:param name="z_external_party">CSC Internal</csc:param>
					<csc:param name="z_vendor_ticket_reference">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_problem_identifier">${#TestCase#ID_ASYNC}</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="204c064b-ae46-4701-87a5-f0a15548b9dd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="f4098a0a-71f8-4962-ac1a-f44464552f42"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="5e7e2839-6761-468f-8387-f68d8cecce03"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="e2bb8918-cb53-4c2b-aa69-b3fb339632de"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_resolved" id="145de4b2-ab47-4031-9163-956eb0594ec2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_resolved</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_work_notes">This is worknote for sd_prb_resolved</csc:param>
					
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_resolved" id="75e58562-d479-4d74-bb09-1ca18fe7d38a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_resolved" id="ab64dda6-bb2a-4946-ad3c-b67141469983"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_resolved#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_resolved" id="49e6b2c7-707a-48f8-9301-7c5341d1f3c8"><con:settings/><con:config><script>log.info "sd_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041886</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">85040404-fea3-42ad-8c0b-bce97a73215d</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010623</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160128095404</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_PRB_UPDATE" searchProperties="true" id="55d18773-d256-43b0-ab1e-150e44d1b1f1"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="25c47252-6c44-4b3b-951b-634487101330"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98ee31a2-71e8-4e45-8452-4d8aa87c38da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="34fde917-7c08-4f7d-83a2-b95e134775fd"/><con:assertion type="XPath Match" name="XPath display_value" id="4aa22e53-8db2-4101-8c9d-57cf1ac28c6e"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3d9269b9-fbce-4bb3-8536-1792cda60d25"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_problem_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="2b788a52-f381-48c7-8b66-cf00e1f75eb1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="insert - PRB_Task" id="c508c832-13e8-4259-963d-ac6aeddfe7b0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - PRB_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/problem_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <problem>${#TestCase#PRB_ID}</problem>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="abe62a94-dfe1-4158-ba6b-133a7af2a76d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - PRB_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("TASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="28920a2e-e437-4b60-b3bf-8da57f30f308"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_description">test description for sd-prb-assign</csc:param>
					<csc:param name="z_impact">2 - Medium</csc:param>
					<csc:param name="z_priority">1 - Critical</csc:param>
					<csc:param name="z_short_description">$test short-description for sd-prb-assign</csc:param>
					<csc:param name="z_work_notes">test work-note for sd-prb-assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="bad29351-e36b-45ae-8f5d-aa5a87281ca5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="e15d70a5-2f2f-4a75-b79f-e4f7dcbd2f0d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_prb_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_prb_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_accept" id="0a1044c3-a57a-460e-8b63-78c1623cb853"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">pro_prb_accept</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>


					<csc:param name="z_external_party">CSC Internal</csc:param>
					<csc:param name="z_vendor_ticket_reference">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_problem_identifier">${#TestCase#ID_ASYNC}</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="e69de1d5-4cd0-4cdc-a59e-84210bcb6118"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="a81b3589-c4c5-4f7d-b1cf-b721dd8e2527"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="6007aefd-ad28-44c6-8acd-d9e3ce64ac18"><con:settings/><con:config><script>log.info "sd_prb_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_accept" id="711e1f33-8a10-4d9c-b585-bad1db6e0702"><con:settings/><con:config><script>log.info "pro_prb_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_update" id="c4391c9c-2a7b-4993-afd9-e90663e19e42"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>            
					<csc:param name="z_transaction_code">sd_prb_update</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>   				
					<csc:param name="z_company">CSC Internal</csc:param>        
					<csc:param name="z_assignment_group">Approval Test1</csc:param>
					
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_work_notes">This is worknote for sd_prb_update</csc:param>
					
					<csc:param name="z_impact">2 - Medium</csc:param>
					<csc:param name="z_opened">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_priority">1 - Critical</csc:param>
					<csc:param name="z_urgency">2 - Medium</csc:param>
					<csc:param name="z_state">Open</csc:param>				

				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 

]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_update" id="118e05fa-f998-4a64-89e9-b0fda804a3d8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_update" id="3f487b81-c1bf-44a9-aeef-70ca17359df0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_update#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_update" id="009d88f4-fee9-43ab-a265-07f7d751f746"><con:settings/><con:config><script>log.info "sd_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041895</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">f8c3920a-a441-4c60-b8fe-8f91ed36fd39</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>PTASK0010632</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160129063545</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_PRB_REPORT" searchProperties="true" id="2cba5895-3cdd-403a-befc-3f2f0ed1bfda"><con:settings/><con:testStep type="request" name="insert - Create_PRB_SNOW" id="0c119e5a-3d7d-4b8f-bdf8-bce9f6769641"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_PRB_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="16b08e4b-751d-48f8-8341-905812455bcb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_problem_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_problem_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Platform Brown</u_assignment_group>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description>This is description for SD_PRB_ASSIGN</u_description>
         <!--Optional:-->
         <u_external_number>EX0001</u_external_number>
         <!--Optional:-->
         <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_opened_by></u_opened_by>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_problem_statement>This is problem statement for SD_PRB_ASSIGN</u_problem_statement>
         <!--Optional:-->
         <u_subcategory>Desktop Failure</u_subcategory>
         <!--Optional:-->
         <u_transaction_code>SD_PRB_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work notes for SD_PRB_ASSIGN</u_work_notes>
         <!--Optional:-->
         <u_workaround>This is workaround for SD_PRB_ASSIGN</u_workaround>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4e0334bb-04b4-4e2d-814c-e1b02f07ceb9"/><con:assertion type="XPath Match" name="XPath display_value" id="76dfe7e2-4555-45e8-acc1-94dd0c932499"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:display_value</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="de037099-b3a2-40f1-a049-b2b14237af75"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_problem_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="74393b94-2fb2-441c-9f33-f9200cf2e76d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_PRB_SNOW#Response");

def prbId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + prbId

testRunner.testCase.setPropertyValue("PRB_ID", prbId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_report" id="c63ad310-95c1-4d09-8a4f-c4442095f2a0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_report" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_description">This is description for pro_prb_report</itp:param>\r
               <itp:param name="z_number">${#TestCase#PRB_ID}</itp:param>\r
               <itp:param name="z_assignment_group">Approval Test1</itp:param>\r
               <itp:param name="z_impact">3 - Low</itp:param>\r
               <itp:param name="started">2015-12-11 08:21:14</itp:param>\r
               <itp:param name="z_problem_statement">This is test problem for pro_prb_report</itp:param>\r
               <itp:param name="z_opened_at">2015-12-11 08:20:23</itp:param>\r
               <itp:param name="z_transaction_code">PRO_PRB_REPORT</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_urgency">3 - Low</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
            </itp:params>\r
            <!--Optional:-->\r
            <itp:options>\r
               <!--Optional:-->\r
               <itp:startDate/>\r
               <!--Optional:-->\r
               <itp:startTime/>\r
               <!--Optional:-->\r
               <itp:tagId/>\r
               <!--Optional:-->\r
               <itp:isAutoArchive>true</itp:isAutoArchive>\r
               <!--Optional:-->\r
               <itp:priority/>\r
            </itp:options>\r
            <!--Optional:-->\r
            <itp:attachments attachmentsParamName="">\r
               <!--Zero or more repetitions:-->\r
               <itp:attachment>\r
                  <itp:attachmentID>cid:162531937635</itp:attachmentID>\r
                  <itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>\r
                  <!--Optional:-->\r
                  <itp:localSourceLocation/>\r
               </itp:attachment>\r
            </itp:attachments>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XPath z_number" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_report" id="54e0a417-6d72-4e92-8765-115f4c15beec"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB AND [request].request_type = 'pro_prb_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#PRB_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_report" id="d320dc83-a556-4387-a661-94fda4eed3a8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_pro_prb_report#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - sd_prb_report_ack");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_sd_prb_report_ack")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_prb_report_ack" id="e87e48fe-dbd2-4ddb-b27d-b6d49839dda3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_report_ack" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <!--Optional:-->\r
            <csc:params>\r
               <!--1 or more repetitions:-->\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="request_type">sd_prb_report_ack</csc:param>\r
               <csc:param name="z_external_party">AT&amp;T</csc:param>\r
               <csc:param name="z_problem_identifier">${#TestCase#RECEIVER_ID}</csc:param>\r
               <csc:param name="z_vendor_ticket_reference">${#TestCase#PRB_ID}</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_vendor_ticket_reference']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_report_ack" id="38672304-e542-459c-b249-cc9041a3ff53"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'sd_prb_report_ack'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_report_ack" id="236ea410-8fbb-4e1f-a550-0869bdd09fd2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_report_ack#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_report_ack#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_report" id="552132ac-52ba-42b9-a4f5-b41960413bef"><con:settings/><con:config><script>log.info "pro_prb_report has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_report_ack" id="871b0021-31b6-4005-b24a-ed2b6eb20c1e"><con:settings/><con:config><script>log.info "sd_prb_report_ack has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>PRB_ID</con:name><con:value>PRB0041916</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">11f3edc3-3b64-4c13-a868-7e40b2c86daa</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203041350</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_PRB_UPDATE" searchProperties="true" id="07150846-5ddb-4a6c-af68-1bd8a058471e"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="fc138f84-394b-409f-9859-c5bd9284e8e1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--PAM fields -->
					<csc:param name="request_type">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<!--Mandatory fields -->
					<csc:param name="z_problem_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_external_party">AT&amp;T</csc:param>
					<csc:param name="z_problem_details">This problem_details for sd_prb_assign</csc:param>
					<csc:param name="z_problem_summary">This is problem_summary for sd_prb_assign</csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_priority">High</csc:param>
					<csc:param name="z_assignment_group">Approval Test1</csc:param>  
					<csc:param name="z_operational_categorization_1">Messaging</csc:param>  
					<csc:param name="z_operational_categorization_2">Fax Gateway</csc:param>  
					<csc:param name="z_operational_categorization_3">Multiple Users Affected</csc:param>  
					 <csc:param name="z_work_info_notes">This is work info notes for sd_prb_assign.</csc:param> 
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XQuery z_incident_identifier" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>//param[@name="z_incident_identifier"]</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="a2704123-7a23-4a68-a2f4-2549ab4f0179"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="0275d881-d147-4484-a71b-4119a72f2371"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="be7fcc48-b335-4693-96df-90372ed55e28"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="c12258c0-df05-435d-b265-e944f426fd1f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="f9eeda83-33e4-4ad5-9c97-2ee413990e86"><con:settings/><con:config><script>log.info "sd_prb_assign has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_update" id="3d13dcce-9444-4f4c-95ac-8bf4f32558aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_assignment_group">AT&amp;T - Cyber &amp; Firewall Offshore</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_transaction_code">pro_prb_update</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_work_notes">This is work notes for pro_prb_update</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_update" id="c6bf62b8-2718-4579-8d6c-5c29d567c171"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_prb_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_update" id="03cc166b-2546-4779-9c39-3d3bc3b8abba"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_update" id="070d96c4-11a5-40b2-8b5f-11eceedf275e"><con:settings/><con:config><script>log.info "pro_prb_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160129070929</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160129070929</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_PRB_REASSIGNED" searchProperties="true" id="70de3803-b499-4a51-b923-99dea0759ac0"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="577bdd96-1c37-4967-a503-dadb2aaf0950"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--PAM fields -->
					<csc:param name="request_type">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<!--Mandatory fields -->
					<csc:param name="z_problem_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_external_party">AT&amp;T</csc:param>
					<csc:param name="z_problem_details">This problem_details for sd_prb_assign</csc:param>
					<csc:param name="z_problem_summary">This is problem_summary for sd_prb_assign</csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_priority">High</csc:param>
					<csc:param name="z_assignment_group">Approval Test1</csc:param>  
					<csc:param name="z_operational_categorization_1">Messaging</csc:param>  
					<csc:param name="z_operational_categorization_2">Fax Gateway</csc:param>  
					<csc:param name="z_operational_categorization_3">Multiple Users Affected</csc:param>  
					 <csc:param name="z_work_info_notes">This is work info notes for sd_prb_assign.</csc:param> 
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XQuery z_incident_identifier" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>//param[@name="z_incident_identifier"]</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="aa05dce7-2a39-4aee-9740-158e98a88e1f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="0f4d1277-5ea0-456d-9fcf-60f2eb499e17"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="f22995e2-ca87-4090-87d6-a9c17af8fa58"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="9239c84c-ed70-4bcd-b1d2-7f97cd8bff31"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="da50a0cb-81b0-47af-9d87-7c512c8e95f9"><con:settings/><con:config><script>log.info "sd_prb_assign has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_reassigned" id="16b40383-450e-4253-92d2-7104ac3e18b1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_reassigned" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_close_code">Cancelled</itp:param>\r
               <itp:param name="z_close_notes">z_close_notes</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_transaction_code">pro_prb_reassign</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_work_notes">This is worked note for pro_prb_reassigned</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_reassigned" id="0d7b4b02-892b-4d37-a248-1c1c04d520fb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_prb_reassigned'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_reassigned" id="b6c2d28c-4f74-4175-9a42-4c1fa8c2135a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_reassigned#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_reassigned" id="d5493cfb-b197-411f-be68-a95d33f5ec21"><con:settings/><con:config><script>log.info "pro_prb_reassigned has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160129073410</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160129073410</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_PRB_RESOLVED" searchProperties="true" id="f5ac2a28-51a8-4981-8d72-4b85fe7a6f64"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_prb_assign" id="ede2e171-a9c5-49c7-a0fe-a0f1104fdbc3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_prb_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Problem/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--PAM fields -->
					<csc:param name="request_type">sd_prb_assign</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<!--Mandatory fields -->
					<csc:param name="z_problem_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_external_party">AT&amp;T</csc:param>
					<csc:param name="z_problem_details">This problem_details for sd_prb_assign</csc:param>
					<csc:param name="z_problem_summary">This is problem_summary for sd_prb_assign</csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_priority">High</csc:param>
					<csc:param name="z_assignment_group">Approval Test1</csc:param>  
					<csc:param name="z_operational_categorization_1">Messaging</csc:param>  
					<csc:param name="z_operational_categorization_2">Fax Gateway</csc:param>  
					<csc:param name="z_operational_categorization_3">Multiple Users Affected</csc:param>  
					 <csc:param name="z_work_info_notes">This is work info notes for sd_prb_assign.</csc:param> 
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XQuery z_incident_identifier" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_incident_identifier']</path><content>//param[@name="z_incident_identifier"]</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_prb_assign" id="b58d6255-295c-4002-90ff-bd1b5c3644d9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'sd_prb_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_prb_assign" id="0023a652-6a2e-4287-bc39-b230d3423294"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_prb_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_accept" id="5b99b0ba-bad1-4998-8d3e-d626e9e08079"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:PRB  AND [request].request_type = 'pro_prb_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>PRB</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_accept" id="66e287e8-ad08-4d53-a047-c7b303ae5905"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_prb_assign" id="efc2789d-261f-4772-8abc-c14564515cbf"><con:settings/><con:config><script>log.info "sd_prb_assign has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_prb_resolved" id="eae779e0-f40c-4523-a299-b5376adb4cb6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_prb_resolved" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Problem/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_close_code">Cancelled</itp:param>\r
               <itp:param name="z_close_notes">This is z_close_notes for pro_prb_resolved</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_transaction_code">pro_prb_resolved</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_prb_resolved" id="58e8694b-3a4f-4478-83a2-88497d52cba7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_prb_resolved'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_prb_resolved" id="ebac1b33-20e9-4c80-b40b-631832916de8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_prb_resolved#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_prb_resolved" id="10f48a32-72c8-4c40-9583-088676cc092e"><con:settings/><con:config><script>log.info "pro_prb_resolved has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160129073838</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160129073838</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="CHANGE" id="55c07f77-5fde-4204-ae1b-ef7fa6ceccd6" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_CHG_REQUEST" searchProperties="true" id="8fdb2396-ea63-4f90-8531-81fd9e0988ba" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="3ca3b7a0-a6ac-4cb0-89ba-76678359b795"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f3d84320-d9db-450e-b337-b329993eda51"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <!--pam parameters-->\r
               <csc:param name="request_type">sd_chg_request</csc:param>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <!--standard change adapter parameters-->\r
               <csc:param name="z_change_id">${=java.util.UUID.randomUUID()}</csc:param>\r
               <csc:param name="z_backout_plan">Nguyet adds backout plan</csc:param>\r
               <csc:param name="z_business_justification">Nguyet adds Justification</csc:param>\r
               <csc:param name="z_change_classification_class">Standard (pre-approved change)</csc:param>\r
               <csc:param name="z_cab_recommendation">Nguyet adds z_cab_recommendation</csc:param>\r
               <csc:param name="z_change_plan">Nguyet adds change plan</csc:param>\r
               <csc:param name="z_comments">Nguyet adds comment</csc:param>\r
               <csc:param name="z_external_party">AT&amp;T</csc:param>\r
               <csc:param name="z_implementation_plan">Nguyet adds Implementation plan</csc:param>\r
               <csc:param name="z_notes">Nguyet adds note</csc:param>\r
               <csc:param name="z_operational_categorization_1">Environmental</csc:param>\r
               <csc:param name="z_operational_categorization_2">Hardware</csc:param>\r
               <csc:param name="z_operational_categorization_3">Maintenance</csc:param>\r
               <csc:param name="z_requested_end_date">2016-10-20 11:46:16</csc:param>\r
               <csc:param name="z_status">Implementation in Progress</csc:param>\r
               <csc:param name="z_status_reason">Nguyet adds Status reason</csc:param>\r
               <csc:param name="z_summary">Nguyet adds z_summary Short description</csc:param>\r
               <csc:param name="z_test_plan">Nguyet adds test plan</csc:param>\r
               <csc:param name="z_work_info_notes">Nguyet add z_work_info_notes</csc:param>\r
               <csc:param name="z_location_company">CSC Internal</csc:param>\r
               <csc:param name="z_priority">Critical _Invalid</csc:param>\r
               <csc:param name="z_template">Test Standard Template 1</csc:param>\r
               <csc:param name="z_risk_level">Very High_Invalid</csc:param>\r
               <csc:param name="z_configuration_item">1Loan_NWGear 2_Invalid</csc:param>\r
               <csc:param name="z_urgency">High_Invalid</csc:param>\r
               <csc:param name="z_impact">Minor_invalid</csc:param>\r
               <csc:param name="z_change_coord_supp_gru">Approval Test1_Invalid</csc:param>\r
               <csc:param name="z_scheduled_start_date">2016-01-16 11:46:16_invalid</csc:param>\r
               <csc:param name="z_scheduled_end_date">2016-01-22 11:46:16_invalid</csc:param>\r
               <csc:param name="z_planned_outage_start_date">2016-01-11 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_planned_outage_end_date">2016-01-15 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_actual_start_date">2016-01-08 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_actual_end_date">2016-02-08 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_actual_outage_start_date">2016-01-08 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_actual_outage_end_date">2016-01-28 11:46:16_Invalid</csc:param>\r
               <csc:param name="z_affected_ci_list">1Loan_NWGear_Invalid</csc:param>\r
               <csc:param name="z_affected_locations">Vietnam Test Location_Invalid</csc:param>\r
               <csc:param name="z_impacted_services">L51_BUS_1009_001_Invalid</csc:param>\r
               <csc:param name="z_cab_date">2016-01-10 11:46:16Invalid</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="35f80f5e-9d84-4d18-9ad4-40af5ad5c9cc"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="cedb425a-99f4-449a-99a0-7787b66d91dd"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150826023801</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_CHG_UPDATE" searchProperties="true" id="c6ea066c-7f12-4e57-acd5-0479b5193f56" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="2024e36b-5ea7-49a9-9641-50996d6d92e9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1b99f940-c3ba-4caa-b980-2a3bdfd2d8d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
				<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->

				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is summary for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6c169a2b-94a4-4c78-991c-8e6b6e4c3ab3"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="ffaca3d2-4598-4340-abc8-a14b48ff848a"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="16860894-3eb5-4940-915f-6e4f87312689"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4d9232f6-6bfa-405c-bcb3-7b5283216824"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="d7b96d77-d602-49ad-b3e6-1d5010ffbe1a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="d2edde2f-34a7-4af0-b28a-cc3e2be45a96"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0f89e605-ab99-47f0-b919-4072c16bfae6"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="d457bb0a-34de-4b31-a140-739d3dd3e703"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="620514a4-098b-49c8-a3d5-e9dd96cf2aa7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="bd785013-af5a-4499-af85-c68ae37ca239"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="2c58d6ca-7ff9-434c-81ef-79b527402314"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="3fad85a3-d717-4dd0-b330-c77e86fd379b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="da2e2245-c2fa-43a6-8404-f40bc35cd302"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="bc03dc4f-d16c-4fe0-a988-05c1497e8ee0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="f5807e60-e432-431f-b209-4e965a9b5691"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_update" id="2ae6c12e-8f62-40ad-967f-b603b62294f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="eb885ba8-7eb2-4307-bc65-cc9f143afe2b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_chg_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration502</itp:param>

					<!--mandatory fieds-->

					<itp:param name="z_change_id">${#TestCase#ID}</itp:param>					
					<itp:param name="z_status">Pending</itp:param>
					<itp:param name="z_work_info_notes">This is for work note sd_chg_update</itp:param>
					<itp:param name="z_work_info_summary">This is for summary sd_chg_update</itp:param>

					<!-- non-manatory fields
					<itp:param name="z_actual_end_date"></itp:param>
					<itp:param name="z_actual_outage_end_date"></itp:param>
					<itp:param name="z_actual_outage_start_date"></itp:param>
					<itp:param name="z_actual_start_date"></itp:param>
					<itp:param name="z_affected_ci_list"></itp:param>
					<itp:param name="z_affected_locations"></itp:param>
					<itp:param name="z_backout_plan"></itp:param>
					<itp:param name="z_business_justification"></itp:param>
					<itp:param name="z_cab_date"></itp:param>
					<itp:param name="z_cab_recommendation"></itp:param>
					<itp:param name="z_change_classification_class"></itp:param>
					<itp:param name="z_change_coord_login_id"></itp:param>
					<itp:param name="z_change_coord_name"></itp:param>
					<itp:param name="z_change_coord_supp_gru"></itp:param>
					<itp:param name="z_change_plan"></itp:param>
					<itp:param name="z_ci_class"></itp:param>
					<itp:param name="z_comments"></itp:param>
					<itp:param name="z_configuration_item"></itp:param>
					<itp:param name="z_impact"></itp:param>
					<itp:param name="z_impacted_services"></itp:param>
					<itp:param name="z_implementation_plan"></itp:param>
					<itp:param name="z_location_company"></itp:param>
					<itp:param name="z_notes"></itp:param>
					<itp:param name="z_operational_categorization_1"></itp:param>
					<itp:param name="z_planned_outage_end_date"></itp:param>
					<itp:param name="z_planned_outage_start_date"></itp:param>
					<itp:param name="z_priority"></itp:param>
					<itp:param name="z_requested_by"></itp:param>
					<itp:param name="z_requested_end_date"></itp:param>
					<itp:param name="z_requester_company"></itp:param>
					<itp:param name="z_requester_department"></itp:param>
					<itp:param name="z_requester_person_id"></itp:param>
					<itp:param name="z_requester_phone_number"></itp:param>
					<itp:param name="z_risk_level"></itp:param>
					<itp:param name="z_scheduled_end_date"></itp:param>
					<itp:param name="z_scheduled_start_date"></itp:param>
					<itp:param name="z_status"></itp:param>
					<itp:param name="z_status_reason"></itp:param>
					<itp:param name="z_summary"></itp:param>
					<itp:param name="z_target_date"></itp:param>
					<itp:param name="z_template"></itp:param>
					<itp:param name="z_test_plan"></itp:param>
					<itp:param name="z_urgency"></itp:param>
					<itp:param name="z_work_info_notes"></itp:param>
					<itp:param name="z_work_info_summary"></itp:param>

					-->
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="bf067855-c231-4a8d-8d77-9d230609108f"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="990a605a-4095-4463-928e-470fb21ce9bb"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Received_Stage" id="34fadc46-3fca-40b1-90ad-aad7918414c5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c406ea36-0c03-4eb3-a1d5-7212d404c578"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Received_Stage" id="cd7aea09-a248-4a1c-a570-7a303d9766ef"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Prepared_Stage" id="0a7147c8-bd2f-4652-abd0-3ccfec3a7487"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="283acb91-db99-4a34-949d-8d756009f318"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Prepared_Stage" id="dbf8479d-754d-4786-8eeb-8bf224707045"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Sent_Stage" id="9ae8fb34-fd18-4102-91ca-67866b870fdd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2321f69f-e497-4c85-9e02-f8ce51009716"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Sent_Stage" id="b51acb0d-91f1-4916-988a-c5aabc0a9b67"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Replied_Stage" id="dd5324c9-477f-41d9-8a99-cd7c66a12e20"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="65a3e2a2-3a3d-45be-b4f6-d79556ff8a1f"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Replied_Stage" id="1ee790e9-639b-415e-9b5f-8d2d0b66ad77"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_update" id="9e63da30-0959-493f-b6c5-78105a9b3c4b"><con:settings/><con:config><script>log.info "sd_chg_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150812000316</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_CHG_REASSIGN" searchProperties="true" id="f51bcd91-e92d-4b41-b281-de4ed2f3a55c" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="ff0eba6f-7134-4142-9809-cafd0ac82f8a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="824c756d-969f-4108-8dae-2c7701d6b6e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
			<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->
				
				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f011f9c5-68ed-480b-9d7a-fa295279ee7e"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="aa3be18e-1313-4930-aa49-a8a94d61c266"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="4492dba7-69cd-4dcd-a357-273d6c026d88"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="98319978-a835-4b51-9865-8ad9bc73c5b0"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="e505bcdf-0021-4beb-a947-c69eafdc07df"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="57eb1e01-9664-4d58-abfe-04a2ec8b95c0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f44a6b6-6559-41e9-ba90-145e25d8707f"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="be782880-dc03-4367-9e06-fecaf5314f4b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="90ca60ec-31ce-4424-8d66-8cc51a4a6964"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="221a2ac4-c939-44a5-a09a-03d2e5b6d7a6"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="18f2dc9d-12a6-4308-a8dc-51409b1f017b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="47f5b6de-d532-4799-ac6a-2dabf76d661d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b73c4724-cc4f-4be3-87d3-f59837db63d8"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="faf94e28-b197-4e99-bd3a-da8a838c0fe3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="1bfd27d0-b8ec-4b3b-83ad-0e0947c000ec"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_reassign" id="5cf5796c-a322-4521-9198-2c4a50cbe2be"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9ca15a67-94f6-4483-9324-5608340ddb44"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_reassign</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
				<itp:param name="effectiveUser">configuration502</itp:param>
				
               <!--change parameters-->
				
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_comments">This is comments for sd_chg_reassign</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_reassign</itp:param>
				<itp:param name="z_status">Implementation in Progress</itp:param>
				<itp:param name="z_status_reason">This is  status reason for sd_chg_reassign</itp:param>
				<itp:param name="z_work_info_notes">This is work info notes for sd_chg_reassign</itp:param>
			</itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e8ee830a-d42f-4ab5-b7d7-cd02ef6228d6"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="3ef3e64a-68f5-44cb-b3b7-8abe02301629"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Received_Stage" id="eadeec9f-baea-4b3f-8447-ebb81a9ec459"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and 	[fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a01127b0-e84b-45a4-b9c6-49d0d3f17c3a"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Received_Stage" id="82aa9a89-f2e4-44cb-a83f-4ffa372d84bd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Prepared_Stage" id="47f30688-70d1-424d-8f62-9a6235147b98"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9dfd488b-dafd-46cd-bff8-118df5f9333c"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Prepared_Stage" id="e8d028f4-a967-4b66-a1c2-557efb3f7273"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Sent_Stage" id="f0748584-2325-4d3c-a0c3-371ff56af55b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="688483f2-acca-447a-9959-c2f5a48142b2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Sent_Stage" id="24d2a9b2-ff60-4399-96b0-37e4c33aaf4c"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Replied_Stage" id="3da83352-c76b-4500-9c4c-159d350fe38d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4982504b-610d-4803-a034-b67ec186b186"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Replied_Stage" id="c8697ae1-fae9-4cd0-a865-087baec83335"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_reassign" id="978cc7e1-ca64-49bf-bd2a-43e83ea567c8"><con:settings/><con:config><script>log.info "sd_chg_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150812002023</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_CHG_CANCEL" searchProperties="true" id="a620ad27-8f21-4373-81ec-61dae30abb17" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="999abd6c-af4b-41de-a13a-fcbc7e1327c5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="eec18342-1d33-4cef-842e-a42d05bb1581"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
			<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->
				
				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="36810ecc-b422-4075-9d6b-326254f5d8cf"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="06948d25-5050-468d-b490-06743b3b9739"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="5bfa6e2b-a740-44a3-993c-b70db70ac2ea"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="164a054b-5ceb-42b1-95ba-21ffaadb60b5"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="fc3dd5bf-af75-4bbf-b0f9-19591132d529"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="462d0fde-c948-4001-8023-8b24e2a823da"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f72afb21-8ada-416d-9869-5a84f135d921"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="1c786866-993b-4cda-b611-e31acc5ac903"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="d54ff580-f342-4a06-bf3e-359912a5e21d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4fa8ca6a-fcda-4e33-ac69-2ce6dc5c2d01"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="97bf3228-38e4-45ae-9c93-c4ad426f2b9c"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="9450e982-9363-4888-b30f-a55d75a690f0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="173c0a38-e1d1-478b-a764-9280eb777ea1"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="276968e1-aa76-44e9-a8ee-fa92b1ffc88a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="1a2ff1be-1ea2-41d1-877c-d7f68f2f5a77"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_cancel" id="0fe69faf-b52e-4db3-a9cd-9014bcd33fb7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_cancel" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="58a19923-25ee-45e7-93ca-6c59a8a52822"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_cancel</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
			<itp:param name="effectiveUser">configuration502</itp:param>
				
               <!--change parameters-->
				
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_comments">This is comments for sd_chg_cancel</itp:param>
				<itp:param name="z_status">Cancelled</itp:param>
				<itp:param name="z_status_reason">This is  status reason for sd_chg_cancel</itp:param>
				<itp:param name="z_work_info_notes">This is work info notes for sd_chg_cancel</itp:param>
			</itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0a86e3c6-468e-4368-80d8-1c08001477c6"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="68897710-a967-475b-80cd-51d0b5862304"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Received_Stage" id="614642c0-ae33-468c-98b2-d78cf9c63647"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and 	[fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f74993e7-0354-41a9-9c6b-a4e1ffddff7b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Received_Stage" id="4db70e23-b19b-4493-8fe4-9a4ac729e96e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Prepared_Stage" id="0ccd290e-67ce-42df-bc9c-d0d58aa304ba"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="068ba42d-9e29-4ca4-87c2-29f8a3c240e8"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Prepared_Stage" id="375fe59b-cc85-438d-8510-2d12d55eb8ab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Sent_Stage" id="a0ec5b4d-a093-40bf-9752-de1fccb54ab6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="33d1447b-5ccc-4375-823e-bf77c1709579"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Sent_Stage" id="c51240b0-078c-4698-8a46-12ba9cd5822f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Replied_Stage" id="28ea45ba-d0b2-42d3-8a1d-09e804b955ba"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="965f8991-b3a1-4a4f-b67d-41846162b8de"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Replied_Stage" id="9102bae2-19b9-4c29-bf59-fc7893fc3b53"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_cancel" id="947d4f1c-717b-4680-b358-c73bcade4737"><con:settings/><con:config><script>log.info "sd_chg_cancel has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150812001100</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_CHG_REPORT_ACK" searchProperties="true" id="d9554b3c-43f9-436b-b0e3-40a233bef975" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="5a7156b0-ff63-46f0-918e-fd144ecb25a6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9805efb-08b7-4974-97df-eea10b1dabd8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date></u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0c226f7d-6019-4277-9178-3365c32f6581"/><con:assertion type="XPath Match" name="XPath display_value" id="34e823f4-34b7-41b8-9f25-dc340fc1edfd"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="3ba59c7a-31af-4d1e-ab30-33d89204039c"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="01c2a071-21af-4396-b1e4-149799acc9e7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="d523e44e-2f69-4968-8de7-48175f8d0def"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c35cfb11-55a3-47f7-8c5f-60a90d7bd926"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>

         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>

      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8a2083c1-4f0a-4cab-b120-23836f1c2e05"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="6c0b06a5-e40e-4469-b287-30895e98b3d8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");


def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)

</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_report" id="3bd85544-ee52-43a5-b6ce-dd9625fc2a32"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_report" id="bfb872b7-9766-47d0-94c0-f284bdbc6c35"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
<soapenv:Header/>
<soapenv:Body>
<itp:executeProcess>
<itp:flow>
<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
<itp:action>start</itp:action>
<itp:auth>
<itp:token/>
<itp:user>pamadmin</itp:user>
<itp:password>pamadmin</itp:password>
</itp:auth>
<itp:params>
<!--Optional:-->
<itp:param name="request_type">pro_chg_report</itp:param> 
<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param> 
<itp:param name="effectiveUser">configuration507</itp:param>
<!--standard change adapter parameters--> 
<itp:param name="z_company">CSC</itp:param>
<!--Optional:--> 
<itp:param name="z_number">${#TestCase#CHG_ID}</itp:param> 
<itp:param name="z_work_notes">This is work note for pro_inc_report(SNOW to 3rd) </itp:param>
</itp:params>
</itp:flow>
</itp:executeProcess>
</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="99259966-ddb4-494a-8341-2350a77bb4ce"/><con:assertion type="XPath Match" name="XPath z_number" id="a3a88f96-eaf1-40e4-a7f9-cad9b451f23b"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Received_Stage" id="b324e0ca-b687-47dc-b719-bcc4a718370d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and 	[fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a85464ef-e2ca-4a76-92db-6211cab5703d"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CHG_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Received_Stage" id="26ae14ca-d6e3-440c-88bf-dccf9dac3478"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Prepared_Stage" id="2da1eb25-0fa6-47da-a366-0fa51ca4d518"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="92fc84fe-cceb-494f-b3a5-07687c9e9569"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CHG_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Prepared_Stage" id="823f0050-4ab3-4c68-bd8e-9d7e31c51e72"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Sent_Stage" id="7cd8ee19-3af4-4d0d-aabe-c72c2bfce974"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="80284035-dc7c-4e0a-b12f-6b738ac34a5e"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CHG_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Sent_Stage" id="a6bb3023-88eb-4676-b9e4-6e3184379422"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Replied_Stage" id="b6d9d2e7-8c7d-49f5-9976-150666a0c4e4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="532dc919-802b-4e76-bcfb-0ab8c17f29e2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CHG_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Replied_Stage" id="7e81e383-b2d2-4997-a9f8-f53675f1f490"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_report" id="9954afd7-7bea-4206-8038-86c03522cbf3"><con:settings/><con:config><script>log.info "pro_chg_report has ran successfully"</script></con:config></con:testStep><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035918</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018508</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_CHG_REPORT" searchProperties="true" id="d421e4a9-cf59-4b8d-8d3b-905c74c00f81" disabled="true"><con:settings/><con:testStep type="jdbc" name="JDBC_pro_chg_report_Received_Stage" id="d2fdad99-f7a6-4197-9108-88f692d40ae5" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="19ef3795-90b6-4791-8d59-31f05988f44d"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="[3rd]pro_chg_report" id="c97a6f8d-57df-4ea3-ba91-4f55c6dc491b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="[3rd]pro_chg_report" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a2eac373-51a1-4aab-b432-c29410fbe9f1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request/><con:assertion type="SOAP Response" name="SOAP Response" id="36417ec9-2a55-4dd3-8969-6ffa65aec893"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="f6ace3d9-53ae-4565-a88f-3a4c2cdf4755" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Received_Stage" id="729cee72-aa5f-415e-b14b-ef0cf660f7a7" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Prepared_Stage" id="09e99d01-caa9-4ed5-b6a8-b98b28ae2cd1" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b079f0d1-7e76-46e2-a4f6-b03d82ca43df"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Prepared_Stage" id="77ecf504-2a69-4cc4-a5d4-c31fe2156b6d" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Sent_Stage" id="67dc6ef2-4d0b-4a52-a2da-69f3f5f10f5b" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59dbc0d4-049c-43e7-8105-68dc5fb4652d"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Sent_Stage" id="c0521634-c601-480f-bb75-c81a457b182f" disabled="true"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report_Replied_Stage" id="2276812f-026c-4f8d-9a05-c19d4789f9a7" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="12c4e319-5c97-4919-a739-c8daab1a3b45"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report_Replied_Stage" id="f910ef2f-4084-4d72-ad14-8bfc561cf536" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_report" id="8547ccfa-6072-43a9-b92f-45718dc2edb9" disabled="true"><con:settings/><con:config><script>log.info "pro_chg_report has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150826043406</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_CHG_UPDATE" searchProperties="true" id="4325bc51-2d4e-44be-a4c2-de1570b5eafc" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="636b0266-2a19-46a9-bc72-3fcbfd062cc3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="959835cb-8698-4090-a8c7-1b2491a70d24"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="58859599-c561-4eaf-b470-09c372713afa"/><con:assertion type="XPath Match" name="XPath display_value" id="6783ec68-3c10-44dd-9f7f-b39d847ddfd7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="4ece2d5d-dfb6-4e59-b5b1-f02fca9387ae"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="38e46d41-8ff8-4e4b-a713-01537efb9f8a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="d4d4653c-b2f8-4152-bc83-3d3e7d81a4d4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e83c7efb-5439-4099-a6da-32eac26facc1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e2d8d2cf-591b-45dc-a110-b521f23c0c91"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="2b0868c5-bcbd-48a8-b069-beabbd6df4b3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="fdb46e78-3420-4b92-a3cc-0c835f19e4e4" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="77b402c8-98c9-4983-a430-e51eed5ad7c4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_assignment_group">AlexisGroup</itp:param>\r
               <itp:param name="z_description">Ha test</itp:param>\r
               <itp:param name="z_number">CTASK0018773</itp:param>\r
               <itp:param name="z_type">Normal</itp:param>\r
               <itp:param name="z_short_description">Ha test</itp:param>\r
               <itp:param name="z_impact">3 - Low</itp:param>\r
               <itp:param name="started">2015-12-23 08:43:44</itp:param>\r
               <itp:param name="z_risk">Very High</itp:param>\r
               <itp:param name="z_additional_comments">2015-12-23 00:18:59 - Loan Luu (Additional comments)
This is comments.</itp:param>\r
               <itp:param name="z_justification">This is business justification.</itp:param>\r
               <itp:param name="z_transaction_code">SD_CHG_REQUEST</itp:param>\r
               <itp:param name="z_work_notes">2015-12-23 00:43:44 - Loan Luu (Work notes)
Ha test</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_urgency">3 - Low</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
            </itp:params>\r
            <!--Optional:-->\r
            <itp:options>\r
               <!--Optional:-->\r
               <itp:startDate/>\r
               <!--Optional:-->\r
               <itp:startTime/>\r
               <!--Optional:-->\r
               <itp:tagId/>\r
               <!--Optional:-->\r
               <itp:isAutoArchive>true</itp:isAutoArchive>\r
               <!--Optional:-->\r
               <itp:priority/>\r
            </itp:options>\r
            <!--Optional:-->\r
            <itp:attachments attachmentsParamName="">\r
               <!--Zero or more repetitions:-->\r
               <itp:attachment>\r
                  <itp:attachmentID>cid:162531937635</itp:attachmentID>\r
                  <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
                  <!--Optional:-->\r
                  <itp:localSourceLocation/>\r
               </itp:attachment>\r
            </itp:attachments>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="41a1b235-0950-4720-9ac1-293271711269"/><con:assertion type="XPath Match" name="XPath z_number" id="1f4a5b39-7c97-4baa-b332-3b882877ae65"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TASK_PRO_CHG_UPDATE" id="1dc3324c-2f5e-4eb7-88e6-d2c1b50f2c53" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="TASK_PRO_CHG_UPDATE" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="77b402c8-98c9-4983-a430-e51eed5ad7c4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--pam parameters-->\r
               <itp:param name="request_type">pro_chg_update</itp:param>\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_actual_end_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_actual_start_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_affected_ci_list"/>\r
               <itp:param name="z_affected_locations"/>\r
               <itp:param name="z_assignment_group"/>\r
               <itp:param name="z_business_service">20150807025846</itp:param>\r
               <itp:param name="z_business_service_company"/>\r
               <itp:param name="z_location_company">CSC Internal</itp:param>\r
               <itp:param name="z_configuration_item">VAN_change_3</itp:param>\r
               <itp:param name="z_contact_address">AM - Default Location - Ho Chi Minh, Vietnam</itp:param>\r
               <itp:param name="z_impact">Minor</itp:param>\r
               <itp:param name="z_impacted_services"/>\r
               <itp:param name="z_vendor_ticket_number">CTASK0018774</itp:param>\r
               <itp:param name="z_change_id">20160202074156</itp:param>\r
               <itp:param name="z_business_justification">This is business justification for pro_chg_report</itp:param>\r
               <itp:param name="z_change_classification_class">Normal</itp:param>\r
               <itp:param name="z_change_coord_supp_gru">Approval Test1</itp:param>\r
               <itp:param name="z_change_coord_name">Vinh TRAN</itp:param>\r
               <itp:param name="z_location_company">CSC Internal</itp:param>\r
               <itp:param name="z_notes">This is notes for pro_chg_update_TASK</itp:param>\r
               <itp:param name="z_operational_categorization_1">application</itp:param>\r
               <itp:param name="z_operational_categorization_2">software</itp:param>\r
               <itp:param name="z_operational_categorization_3">maintenance</itp:param>\r
               <itp:param name="z_status_reason">This is Status Reason</itp:param>\r
               <itp:param name="z_risk_level">Very High</itp:param>\r
               <itp:param name="z_status">Bypassed</itp:param>\r
               <itp:param name="z_summary">This is summary for pro_chg_update_TASK</itp:param>\r
               <itp:param name="z_work_info_notes">This is work info note for pro_chg_update_TASK</itp:param>\r
               <itp:param name="z_work_info_summary">This is work info summary for pro_chg_update_TASK</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="41a1b235-0950-4720-9ac1-293271711269"/><con:assertion type="XPath Match" name="XPath z_number" id="1f4a5b39-7c97-4baa-b332-3b882877ae65" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036502</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018773</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0bc1e12b-c7bf-4bb7-ba61-271611a425ae</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_CHG_REASSIGN" searchProperties="true" id="a3a96430-bcb4-4681-adec-819136b6b581" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="59615220-41f4-417e-906b-45aae48b2f1d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d36d420c-820b-476d-bd7a-7e466415f943"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="04d1c306-563c-4c59-b372-02d2758efd2e"/><con:assertion type="XPath Match" name="XPath display_value" id="ec7471b6-719a-46fb-bb33-2c22afd2d4c2"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="00d1028a-9633-4402-8cdf-4f043542e25f"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="bfe7e00b-7138-492c-8a80-c4d58b54c4a1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="4447b784-e889-47c2-88a4-68e9c1a3542a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b868d039-bfd4-4985-a8df-421637adbe24"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="38ec2d2d-4c15-4de1-a7ef-2fdfadbb9ef7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="80341a31-e338-4899-8e4c-b8ab83454332"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="63628563-91d9-48b4-b57f-5af1002ed115"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c0e7c00a-9b44-482b-b39f-f572f42ac807"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_request</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration505</itp:param>
                    <!--standard incident adapter parameters-->
						<!--Optional:-->
					<itp:param name="z_location_company">CSC</itp:param>
						<!--Optional:-->
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					  <!--Optional:-->
					<itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="af750c36-bb7c-4e2f-9893-aa4fd0ca14ea"/><con:assertion type="XPath Match" name="XPath z_number" id="507883e5-6de3-43c6-ab68-455afa47bdb4"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="a36ab1bb-688b-4175-b02f-d82cf3281e70"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="85b0080b-cf7d-44e9-a76b-b8c8c61ddd75"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="5f1f6bba-6802-4278-b012-95176061f16f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="6ce636a4-8d24-4b0a-b626-ccdd8cd03673"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ae7f0bba-ad61-46b1-a26d-e3e8ad6f3e69"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="e2492bdb-5de1-4c9f-a686-1f05fde9ddf7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="85aec26e-626a-40b6-a0e0-15c8bd6e6251"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="282cc490-2786-4ae6-b33b-4036f5b1806f"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="0b2d81b5-8a0e-46df-aaa2-bcc3f5b263b0"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="7c3dad27-734d-4406-adda-c715c87a8180"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cc469204-9aec-4d2d-955f-99cb6ea7dc4f"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="ebc60eee-2f4d-43b2-b6a8-efe2d1235ef3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="850787d0-1245-43ea-b162-0c0c4ba040fb"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="1ea21504-390d-4f60-b6d3-9d0cb90509bd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="fcd2ba77-6975-4aa1-b0b9-778577ba01da"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="b0edf6d1-650e-4c9c-b31c-6ea4bbec8858"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_reassign" id="d869b952-61e2-4bcb-8783-990cdb8f8a44"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4535b1d2-61e0-4e66-bac0-e8c9299576e1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">pro_chg_reassign</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <!--change parameters-->
				<itp:param name="effectiveUser">configuration504</itp:param>
				<!--Require fields-->				
				<itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>
				<itp:param name="z_comments">This is comments for pro_chg_reassign</itp:param>
				<itp:param name="z_notes">This is notes for pro_chg_reassign</itp:param>
				<itp:param name="z_status">Closed</itp:param>
				<itp:param name="z_status_reason">This is status reason for pro_chg_reassign</itp:param>
			    <itp:param name="z_work_info_notes">This is work info notes for pro_chg_reassign</itp:param>			
				
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="775776d9-c29a-4d1f-9a3c-1458de9c6319"/><con:assertion type="XPath Match" name="XPath z_change_id" disabled="true" id="59c4ed23-3f71-4185-905e-8606fcd69f25"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_reassign_Received_Stage" id="4678c158-b9a8-4cd1-bc44-c7551bf92e11"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9857b6a3-6834-42f3-b68c-c879014f7c4c"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_reassign_Received_Stage" id="3b4f84f8-97af-4b64-abfd-7e969774b95b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_reassign_Prepared_Stage" id="6f657c06-cfec-473e-960f-dfc0438c7156"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="03061745-07c3-4512-94b1-fb6fc78cc674"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_reassign_Prepared_Stage" id="1048909a-d3bd-46e2-a107-317f0dd594d2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_reassign_Sent_Stage" id="9b90a625-58df-4d9d-89b5-9c080c530b8f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e464b865-5933-4a58-be04-ebcc666d983a"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_reassign_Sent_Stage" id="9fd05136-b8b2-4307-b518-3d0764d727f1"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_reassign_Replied_Stage" id="0a2219a1-9272-44f5-8116-69ca5764550c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2878fe04-ecd6-4973-9868-90662069384b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_reassign_Replied_Stage" id="7c004d1c-04aa-4580-83cd-cf68c0c2cf37"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_reassign" id="9d09ac56-dfc5-4c04-8cef-4c65b383ac87"><con:settings/><con:config><script>log.info "pro_chg_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035938</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018528</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>d7e3dd6e-0fea-4d02-8380-9caaeac6dd01</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_CHG_COMPLETE" searchProperties="true" id="bfad4271-1ba9-4efd-9bf0-57f034fc3938" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="e00cc6e9-078e-452b-81aa-e3b36a5a7a21"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a2149d30-983a-446a-b146-fd0a68af5b0e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="cf3f9517-a351-4860-b1f9-9227f2a280e8"/><con:assertion type="XPath Match" name="XPath display_value" id="6cc2c270-eec3-419b-8734-c3a699c0e5e8"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="6235254d-d86a-4689-b0f4-56f366056caa"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="b66cf66e-2d22-4e3b-8801-beff5496ee84"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="aaed586c-04ec-4db2-986f-df811b8de3ac"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e30f39e6-b307-4cdb-9971-6c3b08634ce2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3ff055fe-8d09-4fe7-9b57-43b29357f3f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="a7b65022-1fc8-44f9-83d9-1f13fd40411c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="3fbbe775-a070-413a-8346-006e0eb5fdb2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="fc2688de-612a-4dc0-b71c-af778797a298"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_request</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration505</itp:param>
                    <!--standard incident adapter parameters-->
						<!--Optional:-->
					<itp:param name="z_location_company">CSC</itp:param>
						<!--Optional:-->
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					  <!--Optional:-->
					<itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="550b3b51-28af-49ad-9aca-49975ec1d53c"/><con:assertion type="XPath Match" name="XPath z_number" id="b9e60995-e7d4-4246-aabf-73fc32cb37a8"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="24bcc588-789c-4cb2-ba23-4321193dc3c4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b912d8a-4edd-4c83-8610-0b7fe9a39b6e"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="1a61c7a3-e297-45e2-8f84-1dd84aa44f18"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="c1782af4-60fe-4ab9-b83a-21b93b1f8c49"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="418c10c9-aa7a-437f-b992-09b885eefd78"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="290a0244-342d-4e5a-b2f9-244fa2a22d93"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="3bfe564d-a541-4375-804b-d9f4e54f8f9a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cbe16d67-3ec2-46e7-a4b4-43fc898d5ab9"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="1b427dcb-89ca-44de-9f6a-d99a196d983c"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="bb183119-41b8-47bf-9146-50cb1bf0dcf2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="47061cea-eba4-4e09-af48-ae220e07971a"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="c42152d7-866f-4df6-b027-534c8c96aff0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="40a66d6d-5c22-4838-930e-12d7d77fb110"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="6bf4c07a-33a8-4055-976e-2e6b235dbb75"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="1aa57821-204a-45f0-8a4d-28481512c81c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="5a9d0dd7-a010-4dd7-aeee-c96f09026e36"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_complete" id="24c56b95-510f-480d-acbd-e87470759f00"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="25716121-afaa-4109-a9ce-1f1a7e5367b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--Optional:-->
					<itp:param name="request_type">pro_chg_complete</itp:param>
					<!--Optional:-->
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
					<!--Optional:-->                 
					<itp:param name="effectiveUser">configuration504</itp:param>
					<!--standard incident adapter parameters-->  

					<itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_comments"> This is comments for pro_inc_complete (3rd to SNOW)</itp:param>
					<itp:param name="z_status">Completed</itp:param>
					<itp:param name="z_status_reason">This is status reason for pro_chg_complete (3rd to SNOW)</itp:param>
					<itp:param name="z_work_info_notes">This is work info notes for pro_chg_complete (3rd to SNOW)</itp:param>
					
									

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8b38991c-0d82-4281-a83b-c4baf24e28ad"/><con:assertion type="XPath Match" name="XPath z_change_id" disabled="true" id="57d78a00-7663-4ee6-917b-4b56fc160259"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>CTASK</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Received_Stage" id="ee04afc5-741c-4904-8fff-f942d58d1a63"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f14a148-305c-4615-8a33-505cbc46a636"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Received_Stage" id="2b4703d3-ef26-4382-97fa-d5efa8654c7b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Prepared_Stage" id="48759ac5-5346-42e9-be8b-56d6d534fef7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="be0c7169-0c59-44e9-9c7c-b719391508e2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Prepared_Stage" id="5f3bb87b-cdfe-40f0-8504-509fb5e96fdc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Sent_Stage" id="767188f2-3a14-4f9f-8c18-3cc4719385fa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b7b1ef7-15a6-45bd-81b8-ca67ee9d3abe"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Sent_Stage" id="cdbf1230-8779-4f02-b8fa-62b4803e2af4"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Replied_Stage" id="5cd779d5-4dab-4917-aad9-bf2551e06da6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9aed6147-35eb-4984-b83b-597797907d90"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Replied_Stage" id="e5b521e1-ef06-4fdf-b3e1-e3b5a9495c07"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_complete" id="68eb2540-91ce-4106-ba20-56b00cfbbfc1"><con:settings/><con:config><script>log.info "pro_chg_complete has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035777</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018325</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>ae847741-937c-4b15-933e-b354b080d9c8</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_CHG_REQUEST" searchProperties="true" id="21d77f35-3d7e-48bb-a5d7-706b6e10a3d4" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="1090ec24-7cb5-4eab-a2e8-618b6ee3ca4d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="17ad8b2e-1261-4109-b62d-f09c0b4e94de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4a18c821-044a-40ca-a14e-08aa861ab0a8"/><con:assertion type="XPath Match" name="XPath display_value" id="a0af5361-778f-425b-add2-8b85a5f306f7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="77ebfc41-a18c-420c-9e06-5b1d7c42732d"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="f986523d-1540-4e86-a610-cfe17c26db84"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="ab04bb23-cd9e-4117-b9e7-273b06437759"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="fe3eec98-6408-4558-9243-dfcac2ac8620"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="c51c4ad8-db95-45e8-9130-0e67e2744af5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a3ab79e8-8b8d-4ecb-997e-5ff8b737eaf5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--Optional:-->\r
               <itp:param name="request_type">sd_chg_request</itp:param>\r
               <!--Optional:-->\r
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>\r
               <!--Optional:-->\r
               <itp:param name="effectiveUser">configuration505</itp:param>\r
               <!--standard incident adapter parameters-->\r
               <!--Optional:-->\r
               <itp:param name="z_location_company">CSC</itp:param>\r
               <!--Optional:-->\r
               <itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>\r
               <!--Optional:-->\r
               <itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a8cdd765-159b-4a3c-b928-e47dd0e911cf"/><con:assertion type="XPath Match" name="XPath z_number" id="e026dca6-75a7-42ec-a794-b5125bdb1bec"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="a875dfc4-6134-4e55-a197-679f7ecc3215"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3fa303c6-8204-4715-bbe9-335712b6a27b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="27e7e9f6-cec9-4cfe-b794-93f0ae4680f5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="7ef1c9a6-e05c-4af8-825b-4a0052fa8c5c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="26bd2eb9-490a-4729-aa87-282c8a95aa89"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="ce887b78-5a60-4a5b-b2e0-81182b09c2f3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="be83de9f-3d3c-4e5e-8594-a343a0c389c4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0a18ee08-f105-49de-b82e-00b2ba509bf5"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="2fe22240-e1b7-496f-90a4-681dd0ce31b6"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
	

]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="c1962de1-198f-4aa1-9c15-d9d642430554"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1d945377-fe65-4d23-aba2-ea5e99e8bd96"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="14d0c510-37a1-4051-a912-0314dcbf2493"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="dbfe3846-3a8a-4b43-8638-073dfde54321"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035940</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018530</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>cfda1c70-3697-4b0b-968a-ac8c2b13defd</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_CHG_REQUEST" searchProperties="true" id="3eca089f-45ee-44c9-95d1-2d6209f645ec"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="a85e8af7-8705-4c5a-b877-04e34ece67ff"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="17ad8b2e-1261-4109-b62d-f09c0b4e94de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4a18c821-044a-40ca-a14e-08aa861ab0a8"/><con:assertion type="XPath Match" name="XPath display_value" id="a0af5361-778f-425b-add2-8b85a5f306f7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="77ebfc41-a18c-420c-9e06-5b1d7c42732d"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="528b1415-9e0d-47cd-86f4-5cf56c03f92e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="459e9d8a-219f-4ef6-b3e3-93604a77fdbd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="659b73fe-1c56-45c7-9b7a-9a089a4cf3be"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="3e2359b8-c6c6-4e76-9bf5-372fb19cb618"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/CSC ServiceNow</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="z_transaction_code">sd_chg_request</csc:param>\r
               <csc:param name="z_assignment_group">Approval Test1</csc:param>\r
               <csc:param name="z_description">This is description for sd_chg_request</csc:param>\r
               <csc:param name="z_number">${#TestCase#CTASK_ID}</csc:param>\r
               <csc:param name="z_type">Normal</csc:param>\r
               <csc:param name="z_short_description">This is short_description for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">3 - Low</csc:param>\r
               <csc:param name="z_risk">Very High</csc:param>\r
               <csc:param name="z_additional_comments">This is additional_comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_work_notes">This is work_notes for sd_chg_request.</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
               <csc:param name="z_category">Hardware</csc:param>\r
               <csc:param name="z_urgency">3 - Low</csc:param>\r
               <csc:param name="z_priority">3 - Medium</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="a548bd14-50dc-483e-954b-e3cce88da840"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="ec6378ad-cd2c-4b17-977e-13dbb1606988"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_chg_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_chg_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_accept" id="f87e6f59-3801-43cc-9a25-da029b7e66a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="request_type">pro_chg_accept</itp:param>\r
               <itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_vendor_ticket_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="a994e327-e962-4d1b-9561-19b42bd899eb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="8114e2d2-8a39-4989-87d9-b78713810138"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_assign" id="a36b8db0-5648-4c1a-b8a6-4351e70156dc"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="4680133a-0087-40bf-92c9-4c43cfd23eec"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036529</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">de7ba4af-11cc-4021-a45b-c0e5c4f3f38f</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018782</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203033442</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_CHG_UPDATE" searchProperties="true" id="f097e776-f9c1-4ac0-b1db-a8aed6ed4615"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="361df297-7d49-48b9-b69f-5d15a51e2ea1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="17ad8b2e-1261-4109-b62d-f09c0b4e94de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4a18c821-044a-40ca-a14e-08aa861ab0a8"/><con:assertion type="XPath Match" name="XPath display_value" id="a0af5361-778f-425b-add2-8b85a5f306f7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="77ebfc41-a18c-420c-9e06-5b1d7c42732d"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="27a177ac-bdff-4b78-a15c-e04c7648bd48"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="f7cfe9d6-4048-4c94-b420-9da78b335ff2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="261f4751-a4be-43df-9c0c-35cf5c719a2e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="fb513378-0aa5-49e9-8c99-88399bb4ee48"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/CSC ServiceNow</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="z_transaction_code">sd_chg_request</csc:param>\r
               <csc:param name="z_assignment_group">Approval Test1</csc:param>\r
               <csc:param name="z_description">This is description for sd_chg_request</csc:param>\r
               <csc:param name="z_number">${#TestCase#CTASK_ID}</csc:param>\r
               <csc:param name="z_type">Normal</csc:param>\r
               <csc:param name="z_short_description">This is short_description for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">3 - Low</csc:param>\r
               <csc:param name="z_risk">Very High</csc:param>\r
               <csc:param name="z_additional_comments">This is additional_comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_work_notes">This is work_notes for sd_chg_request.</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
               <csc:param name="z_category">Hardware</csc:param>\r
               <csc:param name="z_urgency">3 - Low</csc:param>\r
               <csc:param name="z_priority">3 - Medium</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="f016b71d-e523-48f5-8fe3-6159a8206316"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="637371fd-df08-47f6-8ae8-371f18e38a20"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_chg_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_chg_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_accept" id="5019abfe-2763-45a8-ae64-23330c615561"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="request_type">pro_chg_accept</itp:param>\r
               <itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_vendor_ticket_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="a953f42f-9e9d-4ce0-a813-eef2cb8b6302"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="708589c9-c060-435d-84ad-55afec3a3ea0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_assign" id="0293e3f8-44d0-49ce-95ab-dd2282bf7e4b"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="1bdf4154-a5d2-43ab-a04f-a3e43a77e5a7"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_update" id="974e9051-5de3-4239-9c17-386c34115f0d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">sd_chg_update</itp:param>\r
               <itp:param name="z_additional_comments">This is updated additional comment.</itp:param>\r
               <itp:param name="z_assignment_group">Approval Test1</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_description">This is updated description.</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_impact">3 - Low</itp:param>\r
               <itp:param name="z_justification">This is business justification.</itp:param>\r
               <itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
               <itp:param name="z_risk">Very High</itp:param>\r
               <itp:param name="z_short_description">This is updated short description.</itp:param>\r
               <itp:param name="z_state">Open</itp:param>\r
               <itp:param name="z_type">Normal</itp:param>\r
               <itp:param name="z_urgency">3 - Low</itp:param>\r
               <itp:param name="z_work_notes">This is updated worknotes.</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update" id="fb0a2f66-3290-49ea-bc39-534c9d3c3102"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update" id="da3e833c-1ba7-417d-ba63-6001bc7b693f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_update" id="9a818232-5064-412d-8e96-76ca9a8dd1b5"><con:settings/><con:config><script>log.info "sd_chg_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036530</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">66231a0e-de56-4e6d-a65b-a22e7766fb84</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018783</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203033553</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_CHG_CANCEL" searchProperties="true" id="dfa3d2d4-eca3-477f-9154-9a30f5fda11b"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="e7ee4114-6527-40d8-b5d7-2a39fc1f9b7c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="17ad8b2e-1261-4109-b62d-f09c0b4e94de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4a18c821-044a-40ca-a14e-08aa861ab0a8"/><con:assertion type="XPath Match" name="XPath display_value" id="a0af5361-778f-425b-add2-8b85a5f306f7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="77ebfc41-a18c-420c-9e06-5b1d7c42732d"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="260b7086-2254-4949-88b4-ebd4824b3d83"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="933c01c1-dcf5-4f32-9b6c-446f1dcb9147"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="4031ee11-ecbe-4c40-871a-7d490896ebab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="55b92af3-1fdb-4807-b964-26360e587003"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/CSC ServiceNow</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="z_transaction_code">sd_chg_request</csc:param>\r
               <csc:param name="z_assignment_group">Approval Test1</csc:param>\r
               <csc:param name="z_description">This is description for sd_chg_request</csc:param>\r
               <csc:param name="z_number">${#TestCase#CTASK_ID}</csc:param>\r
               <csc:param name="z_type">Normal</csc:param>\r
               <csc:param name="z_short_description">This is short_description for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">3 - Low</csc:param>\r
               <csc:param name="z_risk">Very High</csc:param>\r
               <csc:param name="z_additional_comments">This is additional_comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_work_notes">This is work_notes for sd_chg_request.</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
               <csc:param name="z_category">Hardware</csc:param>\r
               <csc:param name="z_urgency">3 - Low</csc:param>\r
               <csc:param name="z_priority">3 - Medium</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="b75a6254-eaf1-436a-8665-8a9078c5f8e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="73ef60c3-65fe-4ac1-94c6-3b061117e3a5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_chg_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_chg_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_accept" id="3df2a45c-760d-469d-8a52-3ce65758557e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="request_type">pro_chg_accept</itp:param>\r
               <itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_vendor_ticket_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="fc07913f-1f65-40b1-affd-e445edbd2b49"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="33170802-fde5-43db-ba58-f8aa62dc64cf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_assign" id="83b7b30b-b837-418f-9f3a-812013fb5916"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="92979c86-961b-44cf-a504-5941f7ec5994"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_cancel" id="1cedc355-56b2-4713-98b5-ab4a5390510e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_cancel" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">sd_chg_cancel</itp:param>\r
               <itp:param name="z_additional_comments">This is cancel additional comment.</itp:param>\r
               <itp:param name="z_assignment_group">Approval Test1</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_description">This is cancel description.</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_impact">3 - Low</itp:param>\r
               <itp:param name="z_justification">This is business justification.</itp:param>\r
               <itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
               <itp:param name="z_risk">Very High</itp:param>\r
               <itp:param name="z_short_description">This is cancel short description.</itp:param>\r
               <itp:param name="z_state">Cancelled</itp:param>\r
               <itp:param name="z_type">Normal</itp:param>\r
               <itp:param name="z_urgency">3 - Low</itp:param>\r
               <itp:param name="z_work_notes">This is cancel worknotes.</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel" id="e879c94e-ee71-40f3-b789-c495a2b10626"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel" id="ab8cd6e3-def3-4794-8e21-2436e4146389"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_cancel" id="0262261b-e433-4342-a662-ee66f7361e75"><con:settings/><con:config><script>log.info "sd_chg_cancel has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036531</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7a53b9c0-0b2b-4cc2-9e97-4f12f8648a2c</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018784</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203033859</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW] SD_CHG_REASSIGN" searchProperties="true" id="2301d79b-8a7c-4a73-8e28-674aaf50a5db"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="b535bc2d-687d-4a70-b27a-8f8dbb4915ce"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="17ad8b2e-1261-4109-b62d-f09c0b4e94de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4a18c821-044a-40ca-a14e-08aa861ab0a8"/><con:assertion type="XPath Match" name="XPath display_value" id="a0af5361-778f-425b-add2-8b85a5f306f7"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="77ebfc41-a18c-420c-9e06-5b1d7c42732d"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="225354ab-28c9-45ff-b216-2743b8470cc7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="517f8880-ece3-4bc6-9df1-dbd6d7a26fa8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c83af4f4-9125-4001-9179-90a52c626468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="94a00389-e98c-4c4a-afdd-b9dcef677af9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="3530b487-fae0-43b9-9624-f9207bdaa8b8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="81ae8154-0ae9-476d-92cf-7e07c1c18c33"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/CSC ServiceNow</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="z_transaction_code">sd_chg_request</csc:param>\r
               <csc:param name="z_assignment_group">Approval Test1</csc:param>\r
               <csc:param name="z_description">This is description for sd_chg_request</csc:param>\r
               <csc:param name="z_number">${#TestCase#CTASK_ID}</csc:param>\r
               <csc:param name="z_type">Normal</csc:param>\r
               <csc:param name="z_short_description">This is short_description for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">3 - Low</csc:param>\r
               <csc:param name="z_risk">Very High</csc:param>\r
               <csc:param name="z_additional_comments">This is additional_comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_work_notes">This is work_notes for sd_chg_request.</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
               <csc:param name="z_category">Hardware</csc:param>\r
               <csc:param name="z_urgency">3 - Low</csc:param>\r
               <csc:param name="z_priority">3 - Medium</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="048c8ef1-3f53-419a-831a-4ada8470d96a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="22f7df3c-ec41-470f-aea9-b687c19308a5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	testRunner.testCase.setPropertyValue("is_sysn", request_async);
	
	if(request_async=='true')
	{
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );		
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_chg_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_chg_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_accept" id="bc2a4d83-a032-4f4c-a029-ada2aca04df3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="request_type">pro_chg_accept</itp:param>\r
               <itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_vendor_ticket_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_external_party">CSC Internal</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="3aecb6ce-453a-4388-9a80-4819ea79cff9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="da71785d-9f38-459a-b665-bde9d1a4e12b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_assign" id="5b7c439f-f60e-487f-8401-c8306a77ab59"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="473ada0a-ec5c-47b1-a17d-85e75033b925"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_reassign" id="24c0c96d-a560-4fb7-b848-750858cdc2bd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1081e644-8d61-447e-99c6-cdf7ef8c037f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">sd_chg_reassign</itp:param>\r
               <itp:param name="z_additional_comments">This is reassign additional comment.</itp:param>\r
               <itp:param name="z_assignment_group">Approval Test1</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_description">This is reassign description.</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_impact">3 - Low</itp:param>\r
               <itp:param name="z_justification">This is business justification.</itp:param>\r
               <itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
               <itp:param name="z_risk">Very High</itp:param>\r
               <itp:param name="z_short_description">This is reassign short description.</itp:param>\r
               <itp:param name="z_type">Normal</itp:param>\r
               <itp:param name="z_urgency">3 - Low</itp:param>\r
               <itp:param name="z_work_notes">This is reassign worknotes.</itp:param>\r
            </itp:params>\r
            <!--Optional:-->\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="208ad7c7-6b08-4c44-ab4a-f49c286cd70b"/><con:assertion type="XPath Match" name="XPath z_number" id="5aea2fdc-90c7-42fe-8f45-03cd83537ff3" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>PRB*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign" id="9eca1301-9c54-4096-a6b4-e0260595fdde"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign" id="eecc7995-30cd-43a0-8444-71542e2766cf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_reassign" id="45148d7a-58fe-4590-8f73-4c9d59f1723d"><con:settings/><con:config><script>log.info "sd_chg_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036532</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3e0dc4d7-07bb-43d6-93ad-0901ebbe29ef</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018785</con:value></con:property><con:property><con:name>is_sysn</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203034031</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_CHG_REPORT" searchProperties="true" id="80322424-ac8e-4575-9fa3-c55a80a1ee82"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="18f3e211-bffe-4f6d-8e14-0700469bf7a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="16b08e4b-751d-48f8-8341-905812455bcb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4e0334bb-04b4-4e2d-814c-e1b02f07ceb9"/><con:assertion type="XPath Match" name="XPath display_value" id="76dfe7e2-4555-45e8-acc1-94dd0c932499"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="de037099-b3a2-40f1-a049-b2b14237af75"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_incident_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="62b4cf89-ce44-4ab1-b389-6c1f65bd4067"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_report" id="d8c96613-c23d-42fd-be08-b82521b398bd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_report" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2447831e-6a23-49b1-a2f0-bebec7a7aaa7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">pro_chg_report</itp:param>\r
               <itp:param name="z_company">CSC Internal</itp:param>\r
               <itp:param name="z_assignment_group">Approval Test1</itp:param>\r
               <itp:param name="z_justification">z_business_justification value</itp:param>\r
               <itp:param name="z_type">Emergency</itp:param>\r
               <itp:param name="z_category">Business Service</itp:param>\r
               <itp:param name="z_priority">3 - Medium</itp:param>\r
               <itp:param name="z_risk">Moderate</itp:param>\r
               <itp:param name="z_summary">z_summary value</itp:param>\r
               <itp:param name="z_short_description">z_work_end</itp:param>\r
               <itp:param name="z_number">${#TestCase#CHG_ID}</itp:param>\r
               <!--non-mandatory-->\r
               <!--Lookup-->\r
               <itp:param name="z_impact">2 - Medium</itp:param>\r
               <itp:param name="z_state">Completed Unsuccessful</itp:param>\r
               <itp:param name="z_urgency">2 - Medium</itp:param>\r
               <!--Datetime-->\r
               <itp:param name="z_work_end">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_actual_outage_end_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_actual_outage_start_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_work_start">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_cab_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_planned_outage_end_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_planned_outage_start_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_requested_by_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_end_date">2015-12-14 10:16:00</itp:param>\r
               <itp:param name="z_start_date">2015-12-14 10:16:00</itp:param>\r
               <!--List-->\r
               <itp:param name="z_affected_cis">z_affected_ci_list1; z_affected_ci_list2; z_affected_ci_list3</itp:param>\r
               <itp:param name="z_affected_locations">z_affected_locations1; z_affected_locations2; z_affected_locations3</itp:param>\r
               <itp:param name="z_impacted_services">z_impacted_services1; z_impacted_services2; z_impacted_services</itp:param>\r
               <!--Max Lenght-->\r
               <itp:param name="z_change_coord_name">60z_change_coord_name</itp:param>\r
               <itp:param name="z_change_coord_supp_gru">60z_change_coord_supp_gru</itp:param>\r
               <itp:param name="z_business_phone">30z_business_phone</itp:param>\r
               <itp:param name="z_backout_plan">z_backout_plan value</itp:param>\r
               <itp:param name="z_cab_recommendation">z_cab_recommendation  value</itp:param>\r
               <itp:param name="z_ci_class">z_ci_class  value</itp:param>\r
               <itp:param name="z_additional_comments">z_comments  value</itp:param>\r
               <itp:param name="z_configuration_item">z_configuration_item value</itp:param>\r
               <itp:param name="z_change_coord_login_id">z_change_coord_login_id value</itp:param>\r
               <itp:param name="z_change_plan">z_change_plan  value</itp:param>\r
               <itp:param name="z_implementation_plan">z_implementation_plan  value</itp:param>\r
               <itp:param name="z_description">z_description  value</itp:param>\r
               <itp:param name="z_requester_company">z_requester_company  value</itp:param>\r
               <itp:param name="z_requester_department">z_requester_department  value</itp:param>\r
               <itp:param name="z_requester_person_id">z_requester_person_id  value</itp:param>\r
               <itp:param name="z_template">z_template  value</itp:param>\r
               <itp:param name="z_test_plan">z_test_plan  value</itp:param>\r
               <itp:param name="z_work_notes">z_work_notes  value</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e6a209dc-a3ce-429d-9431-a6fcd0404c36"/><con:assertion type="XPath Match" name="XPath z_number" id="c89c0fdb-0a6a-49e8-a79e-5b65563a7889"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_report" id="78dc2a39-b3e4-4f16-aca0-591249c2c0b2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG AND [request].request_type = 'pro_chg_report'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CHG_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_report" id="d9ac2af8-58a0-4814-8a6b-02493ca80f1a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_pro_chg_report#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - sd_chg_report_ack");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_sd_chg_report_ack")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_report_ack" id="634b80b8-0d1e-4dd6-bf5b-9d9236b6e746"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_report_ack" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/Standard</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">AT&amp;T</itp:param>\r
               <itp:param name="request_type">sd_chg_report_ack</itp:param>\r
               <itp:param name="z_external_party">AT&amp;T</itp:param>\r
               <itp:param name="z_change_id">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_vendor_ticket_number">${#TestCase#CHG_ID}</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_vendor_ticket_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_report_ack" id="c994d4c8-905a-46ff-a56c-1bfff11a174f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_report_ack'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_report_ack" id="6116788e-70ab-41f4-a479-d853baad98a2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_report_ack#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_report_ack#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_report" id="2fcdf1d8-95fe-478d-becc-a0827f825d0d"><con:settings/><con:config><script>log.info "pro_chg_report has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_report_ack" id="c6a926f2-9dc4-4e72-894b-9babfec103c9"><con:settings/><con:config><script>log.info "sd_chg_report_ack has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0036536</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">bf3c33fa-7a9c-440d-a5be-94820291ca4a</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203041007</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_CHG_UPDATE" searchProperties="true" id="b7d2bbca-5d6a-4cf3-9f00-d21e74d99cfc"><con:settings/><con:testStep type="request" id="3cc60b8d-de70-47b8-818d-48c9dbe7a513" name="ExecuteProcess - sd_chg_request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="request_type">sd_chg_request</csc:param>\r
               <csc:param name="z_business_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_change_classification_class">Normal</csc:param>\r
               <csc:param name="z_change_coord_supp_gru">Approval Test1</csc:param>\r
               <csc:param name="z_change_id">${#TestCase#ID}</csc:param>\r
               <csc:param name="z_comments">This is comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">Minor</csc:param>\r
               <csc:param name="z_location_company">CSC Internal</csc:param>\r
               <csc:param name="z_operational_categorization_1">Mainframe</csc:param>\r
               <csc:param name="z_operational_categorization_2">Hardware</csc:param>\r
               <csc:param name="z_operational_categorization_3">Maintenance</csc:param>\r
               <csc:param name="z_priority">Medium</csc:param>\r
               <csc:param name="z_risk_level">Very High</csc:param>\r
               <csc:param name="z_status">Planning In Progress</csc:param>\r
               <csc:param name="z_summary">This is summary for sd_chg_request.</csc:param>\r
               <csc:param name="z_urgency">Low</csc:param>\r
               <csc:param name="z_work_info_notes">This is work_info_notes for sd_chg_request.</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="f48ad1db-8347-4e88-886b-8711c9975f82"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="34e16d83-02b0-4bac-b6d9-4c0eee148d0d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="ff524c26-367b-4faf-9a44-534cd93c416d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="d785decd-8d2e-4100-92b8-895b08408a5f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="987146ef-0c17-4b61-86e2-8b8a6d6b3c82"><con:settings/><con:config><script>log.info "sd_chg_request has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_update" id="00cb26de-2d66-4e70-a70c-d5ccf8ddd486"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_assignment_group">AT&amp;T - Cyber &amp; Firewall Offshore</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_transaction_code">pro_chg_update</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_category">Hardware</itp:param>\r
               <itp:param name="z_work_notes">This is work notes for pro_chg_update</itp:param>\r
               <!--<itp:param name="z_problem_statement">eqwrwr</itp:param>-->\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_update" id="952bcc64-6913-43f3-a393-36fef4c37986"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_update" id="d176d684-116d-4360-8cb1-204d7c198344"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_update" id="3effb611-087a-45af-b9d3-1b6b876f3b66"><con:settings/><con:config><script>log.info "pro_chg_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160202082734</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160202082734</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_CHG_COMPLETE" searchProperties="true" id="13eb4f90-6d69-4ff8-bf1b-46347452fb87"><con:settings/><con:testStep type="request" id="53af1bab-78cc-415b-b100-16f9c32e671e" name="ExecuteProcess - sd_chg_request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="request_type">sd_chg_request</csc:param>\r
               <csc:param name="z_business_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_change_classification_class">Normal</csc:param>\r
               <csc:param name="z_change_coord_supp_gru">Approval Test1</csc:param>\r
               <csc:param name="z_change_id">${#TestCase#ID}</csc:param>\r
               <csc:param name="z_comments">This is comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">Minor</csc:param>\r
               <csc:param name="z_location_company">CSC Internal</csc:param>\r
               <csc:param name="z_operational_categorization_1">Mainframe</csc:param>\r
               <csc:param name="z_operational_categorization_2">Hardware</csc:param>\r
               <csc:param name="z_operational_categorization_3">Maintenance</csc:param>\r
               <csc:param name="z_priority">Medium</csc:param>\r
               <csc:param name="z_risk_level">Very High</csc:param>\r
               <csc:param name="z_status">Planning In Progress</csc:param>\r
               <csc:param name="z_summary">This is summary for sd_chg_request.</csc:param>\r
               <csc:param name="z_urgency">Low</csc:param>\r
               <csc:param name="z_work_info_notes">This is work_info_notes for sd_chg_request.</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="46db0d87-8d31-4234-b450-607694adf240"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="f1922e56-20c3-4dbb-a8cb-43d06aad7356"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="855182f5-4d07-4c60-be4b-75bc22815423"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="d2a1e6bc-35bc-4888-8545-0abd89c592d3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="832e5b73-5182-4d8f-ad74-d82627a72230"><con:settings/><con:config><script>log.info "sd_chg_request has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_complete" id="704a6594-295d-439e-8e35-0212e05656f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--pam parameters-->\r
               <itp:param name="z_transaction_code">pro_chg_complete</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_state">This is Completed Successful for pro_chg_complete</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete" id="76c6f6b8-397f-4bf8-9b31-ebce67b204a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete" id="d8d6e551-6bcc-4611-a63c-16f465f2c3de"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_complete" id="30cfa012-9065-4ba4-a1d2-0c61a01b3835"><con:settings/><con:config><script>log.info "pro_chg_complete has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160202083816</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160202083816</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_CHG_CANCEL" searchProperties="true" id="f68f785b-40aa-43ae-b3fa-a98648a997be"><con:settings/><con:testStep type="request" id="5fd35538-59c5-4b94-948d-3c150f0dc9f5" name="ExecuteProcess - sd_chg_request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="request_type">sd_chg_request</csc:param>\r
               <csc:param name="z_business_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_change_classification_class">Normal</csc:param>\r
               <csc:param name="z_change_coord_supp_gru">Approval Test1</csc:param>\r
               <csc:param name="z_change_id">${#TestCase#ID}</csc:param>\r
               <csc:param name="z_comments">This is comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">Minor</csc:param>\r
               <csc:param name="z_location_company">CSC Internal</csc:param>\r
               <csc:param name="z_operational_categorization_1">Mainframe</csc:param>\r
               <csc:param name="z_operational_categorization_2">Hardware</csc:param>\r
               <csc:param name="z_operational_categorization_3">Maintenance</csc:param>\r
               <csc:param name="z_priority">Medium</csc:param>\r
               <csc:param name="z_risk_level">Very High</csc:param>\r
               <csc:param name="z_status">Planning In Progress</csc:param>\r
               <csc:param name="z_summary">This is summary for sd_chg_request.</csc:param>\r
               <csc:param name="z_urgency">Low</csc:param>\r
               <csc:param name="z_work_info_notes">This is work_info_notes for sd_chg_request.</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="b5a8b3b3-019b-4144-bdf4-2d7373b82da3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="df771272-ca0d-4e70-9a4e-c7de0bd4959e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="fd7d8063-8fb9-4615-b38d-44b9ee4ea993"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="1eed177c-da80-47f0-ac5e-d6edb72de9e5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="d4a1aa12-6ec3-428c-a11a-27a5bb132202"><con:settings/><con:config><script>log.info "sd_chg_request has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_cancel" id="04dd52e9-4399-4749-8d89-f795383430f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_cancel" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">pro_chg_cancel</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_comments">This is comments for pro_chg_cancel</itp:param>\r
               <itp:param name="z_state">Cancelled</itp:param>\r
               <itp:param name="z_work_notes">This is work note for pro_chg_cancel</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_cancel" id="06011bc5-5097-4dc8-ac94-900f8d8e3625"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_cancel" id="339c6d86-d65b-4da5-8b15-82f76ae14a94"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_cancel" id="5824c04c-6687-4db3-b4e6-c3c3ef5b6dee"><con:settings/><con:config><script>log.info "pro_chg_cancel has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160202084606</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160202084606</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_CHG_REASSIGN" searchProperties="true" id="3248132e-f247-4a04-befb-59de87e7ce2c"><con:settings/><con:testStep type="request" id="d8829d42-2d07-42d7-8c94-9e7d6d2dd732" name="ExecuteProcess - sd_chg_request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="request_type">sd_chg_request</csc:param>\r
               <csc:param name="z_business_justification">This is business justification for sd_chg_request.</csc:param>\r
               <csc:param name="z_change_classification_class">Normal</csc:param>\r
               <csc:param name="z_change_coord_supp_gru">Approval Test1</csc:param>\r
               <csc:param name="z_change_id">${#TestCase#ID}</csc:param>\r
               <csc:param name="z_comments">This is comments for sd_chg_request.</csc:param>\r
               <csc:param name="z_impact">Minor</csc:param>\r
               <csc:param name="z_location_company">CSC Internal</csc:param>\r
               <csc:param name="z_operational_categorization_1">Mainframe</csc:param>\r
               <csc:param name="z_operational_categorization_2">Hardware</csc:param>\r
               <csc:param name="z_operational_categorization_3">Maintenance</csc:param>\r
               <csc:param name="z_priority">Medium</csc:param>\r
               <csc:param name="z_risk_level">Very High</csc:param>\r
               <csc:param name="z_status">Planning In Progress</csc:param>\r
               <csc:param name="z_summary">This is summary for sd_chg_request.</csc:param>\r
               <csc:param name="z_urgency">Low</csc:param>\r
               <csc:param name="z_work_info_notes">This is work_info_notes for sd_chg_request.</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="d5a977a7-b007-451a-b4bd-fb3d29d173b3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="71046739-aac1-457f-95da-ab7ccb995ab0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="49dfb8a0-8193-4eb9-b6de-edcc94220aef"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="41daaa0d-fc8a-4434-ac9f-85b8bfad5252"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="b2efe9f3-b8aa-4b47-bbfa-c73ab04db8e9"><con:settings/><con:config><script>log.info "sd_chg_request has run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_reassign" id="ef13716a-49cb-4890-a51d-1f5151c95a3c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--pam parameters-->\r
               <itp:param name="z_transaction_code">pro_chg_reassign</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_work_notes">This is work notes for pro_chg_reassign</itp:param>\r
               <itp:param name="z_short_description">This is short description for pro_chg_reassign</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_comments">This is comment for pro_chg_reassign</itp:param>\r
               <itp:param name="z_state">Pending</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_reassign" id="9e98a9f4-cb3a-417f-bbd0-4fa368e62046"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:ID  AND [request].request_type = 'pro_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>ID</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_reassign" id="67b1c7dc-dcd3-4a56-acb6-1f39d8fc331a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_reassign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_reassign" id="ab80ea96-4bbf-4b52-841c-41db1d7bf5ad"><con:settings/><con:config><script>log.info "pro_chg_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160202085131</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160202085131</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_CHG_UPDATE" searchProperties="true" id="55a78d26-6514-4215-9ca3-daf25b2805ca" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="d48ad576-5925-4d28-b98e-5fe9ff3380a4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1b3e1432-97bf-4783-9b95-eab4216d175f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="efd84d4b-0771-4dee-b016-659781f0e655"/><con:assertion type="XPath Match" name="XPath display_value" id="d9f3f4b6-9094-468a-af17-6ba183097bc2"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="5f3345ad-fab5-42eb-94c8-7435cd2ca0ec"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="905606e7-c3ab-4527-9ce3-751f2e6bc3b9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="1658b4aa-cc40-421e-8ab5-b242d06fec1d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="213095bc-b8fe-4356-bfbd-184f0037e39c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="631c3f0c-f8bc-4e10-9393-f942c5e80fae"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="6c786bc0-bdbc-4c2e-ad96-b305f5fff3f0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="eb11f222-02df-4159-8fb4-113010e87d90"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f4324462-ab3a-4603-9bf7-535371b63280"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_request</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration505</itp:param>
                    <!--standard incident adapter parameters-->
						<!--Optional:-->
					<itp:param name="z_location_company">CSC</itp:param>
						<!--Optional:-->
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					  <!--Optional:-->
					<itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8c4c6b61-8127-44be-8ef7-d1589e208c8a"/><con:assertion type="XPath Match" name="XPath z_number" id="6a877884-f53c-4c74-a0d3-9c1380051160"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="b74956f0-5e40-4343-ab1c-21a82bde18ff"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0fdf27b1-6a62-461c-852d-dac9f05ab754"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="ed9cbc39-f3a1-49ca-843c-f1397c0ea686"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="5c650aa0-c407-48bb-8b61-5167bc4426ca"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4445aa53-b0cd-450e-842d-10e73712aafd"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="f881f0e8-67f2-4060-ad84-0322d1f1ed23"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="52e6e8ac-dfad-4770-8303-11fae00a4a30"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="bef09acd-b2cd-42b9-8512-20647154d3d2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="2d31f051-f56d-4f0e-8b0b-ab0b06b68ff0"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
	

]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="202d8600-dcf0-4968-95b1-14acca7ae30b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cdb2184b-b90e-4f7e-9357-078249c84ee3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="96698acb-563a-4b3b-afe2-b4bed7867878"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="60fb81fe-95cc-4922-84e0-5d0e3f8b4196"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="f2de3eca-6199-4df1-a9e6-0e2b4eda529d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="3d6eaf04-8bf5-40b9-b838-0ea36663de05"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="dfda45fc-714b-4768-8689-207301358519"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_update" id="979ef00c-f61a-4eb9-9716-2224baeca17a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d08a0d6c-a1de-443e-8052-af53b578ce47"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_update</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration506</itp:param>
                    <!--standard incident adapter parameters-->						
					<itp:param name="z_location_company">CSC</itp:param>						
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					<itp:param name="z_state">Pending</itp:param>					  
					<itp:param name="z_work_notes">This is work note for sd_chg_update (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="dfc15dc1-469c-4810-8038-625522361b22"/><con:assertion type="XPath Match" name="XPath z_change_id" id="0d27a7e6-954e-43b0-90e9-ad0f0dcd5159"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Received_Stage" id="da251ec7-2df3-4a7a-859d-132ae0e57af9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e883019f-6021-40ea-9c66-d2f13966c6e1"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Received_Stage" id="1f1fbf07-8b77-4aba-aaf4-9eeda6880c02"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Prepared_Stage" id="af0b385a-94b4-441b-a97e-1953418cd0b4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="31e8c5e4-6e7d-44cf-88fd-00134e40281b"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Prepared_Stage" id="11c5be0f-954e-4daf-b97d-062c8913da34"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Sent_Stage" id="04e24767-3019-42de-a10e-878db22c7a73"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4f83efcd-ef12-4bd5-a06d-d57fd7392e68"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Sent_Stage" id="92d62375-9bc7-445d-ab93-4e92ac8762bd"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_update_Replied_Stage" id="79e5cf72-982e-436c-b8a8-1ceddad85065"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="766cf449-2641-4601-a8d4-f8e75f6011c0"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_update_Replied_Stage" id="0acb3b6f-f6e4-4f45-8782-8ea181dda28a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_update" id="f77549ab-9f9b-4b3b-91bb-2c2a57e09566"><con:settings/><con:config><script>log.info "sd_chg_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035932</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018520</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>6134d782-59de-4044-8be9-c2227e383988</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_CHG_CANCEL" searchProperties="true" id="0b56a72b-214b-4835-bd2d-143601d9da4d" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="eae65150-b3e1-46bf-a205-f847dee74c1c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bff735d9-81ae-4942-86f9-6dd74c31e588"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f26b6c5b-6ce1-4330-b0f8-d7a174e5086c"/><con:assertion type="XPath Match" name="XPath display_value" id="30ea95e4-91eb-4b80-86b6-07d698661927"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="f7a9f92c-6fd5-4f45-992e-6725c18a3eaf"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="291174c7-1417-4a5f-9e14-19b0ef6fad6e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="3721e70d-9396-440b-94da-941bed4d7770"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f535a94e-996d-4ef2-ab8b-0153f055e95e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="06d72c7f-1260-4972-b361-0f6e255c374d"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="5521841f-377c-44ad-ab15-bbc202afbaa7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="18a46052-57c6-4914-8fc0-e0cb0036890f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cd81db90-53e5-4153-810f-89f165fb48b1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_request</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration505</itp:param>
                    <!--standard incident adapter parameters-->
						<!--Optional:-->
					<itp:param name="z_location_company">CSC</itp:param>
						<!--Optional:-->
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					  <!--Optional:-->
					<itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ae1987dd-8e34-402a-8057-a5b9d4e845ce"/><con:assertion type="XPath Match" name="XPath z_number" id="e271ef59-659e-48cd-80ec-86739889efae"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="ad765af4-c1f2-4d5d-ac5e-bc3e81cd6f3b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c03d57ab-c0d9-40b5-bac4-445e2f41d4e7"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="13f6aac5-d648-4b04-84b3-3c35c3e20146"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="9a8600f4-91c2-4dda-bde1-685f705202ad"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0cf0dc9a-099f-40a2-909e-e33659b526fa"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="b54ceed2-905a-4543-9423-208ae5fd26c7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="bf882186-1448-4f4c-a00e-6329a8eac531"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5c78729e-fb3b-464d-beda-d0b5989b6bea"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="6bd5da8c-7766-461a-9c03-3aaa558ece98"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
	

]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="eb410632-b0a5-4770-aec3-c1d406da548c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b73e3c63-3899-4682-9cd7-3e2c566682e0"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="5ff78a14-2431-4c7a-901a-404eb4f80bd9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="41da5da0-6e85-4d8e-a1d8-f84db1dd897f"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="b78296b5-35bb-438c-82b6-6dc474251bdd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="9d91478f-a318-4380-90a4-a1621011cf96"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="63314e11-1f68-41da-a355-71cad41be0f8"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_cancel" id="b7730ac0-c872-4e95-b7b7-57a2a13666ee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_cancel" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4a09c068-b6b0-4dc9-b0c6-45025b7fedc8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_cancel</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration506</itp:param>
                    <!--standard incident adapter parameters-->				
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					<itp:param name="z_state">Cancelled</itp:param>					  
					<itp:param name="z_work_notes">This is work note for sd_chg_cancel (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="650857fa-6063-429a-ad42-ff7720962309"/><con:assertion type="XPath Match" name="XPath z_change_id" id="b8fec58d-0bf3-4c42-b9fa-4bf6860f31f0"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Received_Stage" id="103219bf-5b51-496a-aec6-131257dfc82e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1d408dc8-a0dd-402a-a0a2-b987ca732fc9"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Received_Stage" id="bad1df5a-1a92-4406-9ab3-c2afdd7f44ac"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Prepared_Stage" id="0cd00d79-ad7f-4024-91c6-9d1d5205f203"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0499f4bc-a56d-4a9c-a951-07460263c67d"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Prepared_Stage" id="c46ea1e9-39f5-4157-ab5b-487a00d91105"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Sent_Stage" id="89012f2c-49f5-4a33-ab64-c34ea5483334"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a026b694-1fdb-4cef-a837-df8c8c63e5bb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Sent_Stage" id="9ac60941-075b-4fc2-9062-2fadd510f1ec"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_cancel_Replied_Stage" id="54fad0b8-f06a-4f76-a85d-3aebdd933c49"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8657c05b-22ac-4b20-876c-3dc8d5a1d143"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_cancel_Replied_Stage" id="af9f25a5-6c0a-414b-a94d-aad4875dbd29"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_cancel_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_cancel" id="b8886f78-47b5-4221-b2a0-67dfc6e89d36"><con:settings/><con:config><script>log.info "sd_chg_cancel has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035931</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018519</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>bdc5e35b-765a-4ba7-88e8-28e25653e424</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_CHG_REASSIGN" searchProperties="true" id="51094b5c-9663-4684-af48-446da236387a" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CHG_SNOW" id="363106d4-e016-40b5-994e-0df4901b09e0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CHG_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a42d389f-585b-49eb-9741-1b7069301ca4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_actual_end_date></u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date></u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date></u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date></u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments></u_additional_comments>
         <!--Optional:-->
         <u_affected_cis></u_affected_cis>
         <!--Optional:-->
         <u_affected_locations></u_affected_locations>
         <!--Optional:-->
         <u_approval></u_approval>
         <!--Optional:-->
         <u_assignment_group>Noida Pod 1 Workplace Purple ADS</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan></u_backout_plan>
         <!--Optional:-->
         <u_cab_date></u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation></u_cab_recommendation>
         <!--Optional:-->
         <u_category>Hardware</u_category>
         <!--Optional:-->
         <u_change_plan></u_change_plan>
         <!--Optional:-->
         <u_company>CSC Internal</u_company>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_description></u_description>
         <!--Optional:-->
  		<u_external_number>CSC Internal</u_external_number>
         <!--Optional:-->
          <u_external_party>CSC Internal</u_external_party>
         <!--Optional:-->
         <u_impact>3 - Low</u_impact>
         <!--Optional:-->
         <u_impacted_services></u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan></u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_justification>This is justification for SD_CHG_REQUEST</u_justification>
         <!--Optional:-->
		<u_planned_start_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_planned_start_date>
		<!--Optional:-->
         <u_planned_end_date>${=(new Date()+2).format("yyyy-MM-dd HH:mm:ss")}</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date></u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date></u_planned_outage_start_date>
         <!--Optional:-->
         <u_priority>3 - Medium</u_priority>
         <!--Optional:-->
         <u_requested_by></u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_by_date>
         <!--Optional:-->
         <u_risk>Moderate</u_risk>
         <!--Optional:-->
         <u_short_description>This is short description for SD_CHG_REQUEST</u_short_description>
         <!--Optional:-->
         <u_state>In Progress</u_state>
         <!--Optional:-->
         <u_template></u_template>
         <!--Optional:-->
         <u_test_plan></u_test_plan>
         <!--Optional:-->
         <u_transaction_code>SD_CHG_REQUEST</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_type>Normal</u_type>
         <!--Optional:-->
         <u_urgency>3 - Low</u_urgency>
         <!--Optional:-->
         <u_work_notes></u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b076fbe0-f63d-482d-a19c-4cc53c9827f5"/><con:assertion type="XPath Match" name="XPath display_value" id="91c11731-73c8-439d-a610-8cc4411c9268"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:display_value</path><content>CHG*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath status" id="b319a3a6-616d-4187-afc2-eeecef501aba"><con:configuration><path>declare namespace var='http://www.service-now.com/u_connectnow_standard_change_create';
//var:status</path><content>inserted</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="2f3e9d06-12b4-4a2f-a99b-a24480c76197"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CHG_SNOW#Response");

def chgId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + chgId

testRunner.testCase.setPropertyValue("CHG_ID", chgId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Change_Task" id="4c18ec86-d472-4afe-bc13-1be669cfd40b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Change_Task" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3a58fbec-71d1-4c5e-82d1-70e6796046d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/change_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:chan="http://www.service-now.com/change_task">
   <soapenv:Header/>
   <soapenv:Body>
      <chan:insert>
         
         <!--Optional:-->
         <change_request>${#TestCase#CHG_ID}</change_request>
                 
      </chan:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6c977e8b-6268-481f-a424-8df3cb971a19"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/change_task/getRecords"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="d8d867eb-6956-433b-9c63-6f9740acd654"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Change_Task#Response");

def ctaskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + ctaskId

testRunner.testCase.setPropertyValue("CTASK_ID", ctaskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="d98443a7-c32e-417b-9faf-f51e629c01b3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f7ebad67-ccfd-4859-8ef4-6c03dff766e4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_request</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration505</itp:param>
                    <!--standard incident adapter parameters-->
						<!--Optional:-->
					<itp:param name="z_location_company">CSC</itp:param>
						<!--Optional:-->
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					  <!--Optional:-->
					<itp:param name="z_work_notes">This is work note for sd_chg_request (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3a92495b-12f2-492c-b454-a05fd777f5c9"/><con:assertion type="XPath Match" name="XPath z_number" id="0b89a472-04e6-4f76-a8bf-a313dc31684d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="b8409843-2691-46f4-a6f6-999f34dd7bf6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b131f752-b2a9-4e79-95d5-9765a4985f59"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="37e8ddcd-5c8a-42bf-be9b-e61a97d3a3a5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="23d1512c-5b97-495a-bca1-dd9908766412"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3371c641-5e68-4f4e-8fb4-ca6f6b0d4fa2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="8746b31e-ff24-4023-b398-0beda0ffd4d6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="a8788fe8-247d-4129-800b-f508136213fb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5988e34f-e87b-4cdf-b173-9c3fe62c24b5"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="2542b4a1-18af-4f0d-a8c8-39c6dc63886c"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
	

]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="b766c4bb-185b-4f64-a4c9-f09cff9954b3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="642c919f-4058-4514-ac0b-52c1add2edbe"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="39d8e2a8-cc68-40ae-84cd-a9a6b60aaeb1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="420a489d-2440-4941-b95f-0c40dbd890d9"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="b08a0c76-5c8a-45e6-b1eb-097318f56f8b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7b966a29-db84-4fb5-9617-1555754e42d3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="96ebaa37-b993-478a-a97e-2849a4c9f6bf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="c3f2e43f-edea-428e-a1ed-2a744ab739ff"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_chg_reassign" id="17242022-e04c-4f66-a1dc-93f09141ff3e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a139e2ab-40e4-4237-9b38-861cd641ff8b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
           <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
                <itp:action>start</itp:action>
                <itp:auth>
                    <itp:token/>
                    <itp:user>pamadmin</itp:user>
                    <itp:password>pamadmin</itp:password>
                </itp:auth>
                <itp:params>
                      <!--Optional:-->
                    <itp:param name="request_type">sd_chg_reassign</itp:param>
                      <!--Optional:-->
                    <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>  
 				 <!--Optional:-->                 
                    <itp:param name="effectiveUser">configuration506</itp:param>
                    <!--standard incident adapter parameters-->				
					<itp:param name="z_number">${#TestCase#CTASK_ID}</itp:param>
					<itp:param name="z_state">Pending</itp:param>					  
					<itp:param name="z_work_notes">This is work note for sd_chg_reassign (SNOW to 3rd)</itp:param>					 
                </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="47cbcde2-22a9-40f6-8929-d8ebcbb666ca"/><con:assertion type="XPath Match" name="XPath z_change_id" id="66cf8490-8765-478f-9d98-2253ce7d262d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CTASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Received_Stage" id="f90b2d10-7d0e-42d1-ac3b-2da2752866de"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="83e9b278-defe-48cb-9f07-11ff5e70d691"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Received_Stage" id="622ee845-c602-41c3-9685-e4e9ac2511be"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Prepared_Stage" id="8a5ee46d-341b-4b2e-8bed-57ac0544a61f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a63928f5-5ebc-4a51-b10a-273f40280e22"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Prepared_Stage" id="ce682a70-b295-44be-a0e6-fab1b391cf40"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Sent_Stage" id="80d321ce-df04-4fa0-8521-99e57fda64c0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="22aa20eb-89b3-450b-a889-698e4c098d20"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Sent_Stage" id="211a44f1-a72c-4be2-88fe-4e9f9a14f1df"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_reassign_Replied_Stage" id="12b063a2-6a2a-4eb2-abfc-554e467f96ce"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="37058bcb-3efd-4b16-addb-73917019edcf"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#CTASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_reassign_Replied_Stage" id="78dfc24f-21f8-47ac-a90e-2c318157467f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_reassign" id="25b42277-27de-4a8c-83ef-f960463643ff"><con:settings/><con:config><script>log.info "sd_chg_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>CHG_ID</con:name><con:value>CHG0035930</con:value></con:property><con:property><con:name>CTASK_ID</con:name><con:value>CTASK0018518</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>5aef0df1-d9ec-4a4d-a7fe-f93e0dee150c</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_CHG_UPDATE" searchProperties="true" id="12700b84-0eff-4386-9d01-da6770de0ef4" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="4520422a-2ba3-42d2-bee5-ef069444e020"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ffa7984d-5019-4173-a796-faba3ce2ab9f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
				<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->

				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is summary for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4442ab51-a13d-4763-814a-bbab9901080c"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="147fbb49-0060-4c41-b14f-55a6faa2eafe"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="8c826a4b-a356-4874-8f74-1c2a480b2d96"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="85f81a0a-910c-4b72-881b-6d8606b67ed2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="273ba030-4236-4123-8881-868d918a35b3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="48729356-5421-400d-bee7-a579111180d4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="bb492a0d-d59b-479e-ac84-480959f871a5"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="f00e3d64-611a-46d5-961e-37a5445d90f9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="c231856f-1fce-47a4-af8b-2a0ecc3c2576"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="609594fb-6545-4e7b-bea1-0c67d7ff680c"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="876553d7-e969-4329-ad03-6a43405f0473"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="12f6ada0-09bd-4830-957e-356192e83afa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c36a190b-eb3f-4557-95a8-de1614e6c5e4"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="265dda4b-3d15-4d2f-b552-9e53e72c5b67"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="6c566e2c-c147-491c-b67f-1806172ccf6a"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="5b6aec79-58e8-4e54-bb82-5d4e89bfedfe"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="18e3a042-5291-4350-a4c7-503a2dd20246"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="b6aafe22-4e95-4d86-b6c3-e886f3edee0e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="a52c4c69-c1ef-45f3-a15c-5b76cd836959"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_update" id="53aa8588-9076-47a7-a745-fefad28163b6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a80c6971-bc50-4f4b-88fe-509b7036ec67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">pro_chg_update</itp:param>
               <itp:param name="sender">cscoamndc102</itp:param>
               <!--change parameters-->
				<itp:param name="effectiveUser">configuration508</itp:param>
				<!--Require fields-->		
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
				<itp:param name="z_state">Pending</itp:param>							
				<itp:param name="z_notes">This is note for pro_chg_update</itp:param>
							 
				 <!--change parameters
				<itp:param name="z_business_justification">h justification 5151519</itp:param>
				<itp:param name="z_change_id">VNH052115001</itp:param>
				<itp:param name="z_notes">TEST notes VNH052115001</itp:param>
				<itp:param name="z_status_reason">TEST Status Reason VNH052115001</itp:param>
				<itp:param name="z_summary">TEST summary VNH052115001</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_requested_end_date">2015-12-12 11:01:52</itp:param>
           			-->
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3d03b518-258b-42f7-9bbe-d25d89b06d82"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="37efd654-7cde-4d4d-9699-46b26250d833"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_update_Received_Stage" id="36da544c-71dc-4750-a79b-ae7f34f4fe22"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9bca48ec-1103-42a5-8d1a-ba63b4bff103"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_update_Received_Stage" id="c2562cf3-fd42-4128-b9b8-e1ea313d355a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_update_Prepared_Stage" id="cbdfa5a4-31ca-413f-9a8a-f7dbaf487159"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f8e2bd1f-a3b5-4e1f-9c64-944a02f3eeb1"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_update_Prepared_Stage" id="8313ac51-af76-4e9c-8789-803900b4fd08"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_update_Sent_Stage" id="5417fd8a-4e14-4203-bc86-be0615688816"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0a5cee8d-6fcb-4af6-88dc-725d8f22e2c1"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_update_Sent_Stage" id="1430127d-2ff1-46a4-afa5-91aee15c7aa4"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_update_Replied_Stage" id="0a0b645e-1097-4751-83b9-b5405357e710"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5a9c11f3-4b5d-452d-9a99-f21b171c2470"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_update_Replied_Stage" id="3ae673cc-8616-4ddf-981a-5c03cc96fe44"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_update" id="b6392deb-3662-48ee-96f0-e448ef56d546"><con:settings/><con:config><script>log.info "pro_chg_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150917225804</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>CHG0035941</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_CHG_CANCEL" searchProperties="true" id="89828145-9ec3-4779-a916-a0dc41cb2a9c" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="ce76ff22-a101-4905-9fb9-a1aa5d672961"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e4669f89-7f48-4f45-a664-956e5282ee1c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
				<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->

				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is summary for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="f270d487-91df-43a7-b2c6-4dc6421d792b"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="5722ef58-6553-4749-9d7d-f82cebbbb107"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="af27a31c-586b-4b75-911b-a557be6f3e75"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f3e49339-40e4-4220-bd81-636dc746b3b9"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="24532cde-35f1-4f36-addd-23560c45cc4b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="d3014893-18ab-4d08-8274-3f8c406dc3b7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="705d3c0c-6944-422d-a70b-e9b346178d45"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="9d827836-57a7-4dec-8a24-9d2766f322f2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="600a805e-9d4d-46ea-a076-3a2e3be459a0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b7079dc-51d4-419c-bee4-43d21d590d51"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="24b5b42b-46ed-498f-86ab-54bff489d69d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="a0712828-2470-499e-a506-2c81d734ab54"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="90be7576-3986-45be-bc69-78b43a2b1e03"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="8aa777f4-1f0f-4aa3-a5dc-944646690f7f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="46e5a780-8615-4bb1-bb1a-a3fa29cab61d"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="1bee66fc-6abf-42b8-97fe-ce49cd5928cb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="552ae730-bbe2-4757-a073-f2f1d13591db"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="2188939d-f0f8-41f5-93d8-d8cb99911b39"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="ddd8fdd0-fb5b-439d-9e3b-8816e74c90d1"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_cancel" id="55d8fe66-6657-4f07-bcdb-b6fdbd16ed4c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_cancel" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="155e775f-b857-4f20-bfd7-c548546d29a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">pro_chg_cancel</itp:param>
               <itp:param name="sender">cscoamndc102</itp:param>
               <!--change parameters-->
				<itp:param name="effectiveUser">configuration508</itp:param>
				<!--Require fields-->		
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
				<itp:param name="z_state">Cancelled</itp:param>							
				<itp:param name="z_notes">This is note for pro_chg_cancel</itp:param>
							 
				 <!--change parameters
				<itp:param name="z_business_justification">h justification 5151519</itp:param>
				<itp:param name="z_change_id">VNH052115001</itp:param>
				<itp:param name="z_notes">TEST notes VNH052115001</itp:param>
				<itp:param name="z_status_reason">TEST Status Reason VNH052115001</itp:param>
				<itp:param name="z_summary">TEST summary VNH052115001</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_requested_end_date">2015-12-12 11:01:52</itp:param>
           			-->
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7501d0cd-b787-4166-afee-0ce12d14b339"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="7f728e04-fc8d-4a0d-bc38-f4fa2f07a8dc"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_cancel_Received_Stage" id="fb2a391f-9826-4971-baf7-0dfed40238ef"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="25bd64cc-1864-40e0-8fb5-dad7bbe0a7a6"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_cancel_Received_Stage" id="40820421-7f09-41c9-b2e4-96e195ec0581"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_cancel_Prepared_Stage" id="250ac627-1b5f-4d5e-84fa-83a0530bbc64"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0dd538ae-1e66-4699-8e99-d564dad16a23"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_cancel_Prepared_Stage" id="48ef0ae8-ae9b-48a2-baf7-551fbfa4bb35"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_cancel_Sent_Stage" id="e2a60f5c-22a5-4487-b948-219f08842e90"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3adad059-95dc-4aa7-b31e-deaa026f13ba"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_cancel_Sent_Stage" id="97858c1b-47f4-4783-a00a-f498625d98f3"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_cancel_Replied_Stage" id="0b8fb792-b8d9-4014-8f73-a6a4b26b0aeb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_cancel'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2579d97f-0718-426b-8cfa-d41678690691"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_cancel_Replied_Stage" id="f4fab146-0e44-4d85-9f38-94571973521f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_cancel_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_cancel" id="6eae376e-aadd-47f1-8cb3-509cba0ef5f6"><con:settings/><con:config><script>log.info "pro_chg_cancel has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150906232150</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>CHG0035928</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_CHG_COMPLETE" searchProperties="true" id="f68c39dc-3dd5-4f7f-959f-c7e407a56e82" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_chg_request" id="dcaab02d-64cf-4a51-9792-33f3913c802e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cb1711ea-a338-4bb8-b0d4-3bfa4bda96f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_chg_request</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
				<itp:param name="effectiveUser">configuration501</itp:param>
               <!--change parameters-->

				<itp:param name="z_business_justification">This is business justification for sd_chg_request</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_change_id">${#TestCase#ID}</itp:param>
				<itp:param name="z_location_company">CSC Internal</itp:param>
				<itp:param name="z_notes">This is notes for sd_chg_request</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_status_reason">This is status reason for sd_chg_request</itp:param>
				<itp:param name="z_summary">This is summary for sd_chg_request</itp:param>
				<itp:param name="z_target_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="62f7589c-5e42-4b2e-ac89-31af2a139575"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="f0b99b49-bafe-4611-94bf-722e38c86b97"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_change_id']</path><content>&lt;itp:param name="z_change_id" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Received_Stage" id="50ecc1fc-8dcc-4bd3-808b-dd514da93021"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8e513ded-e5d3-4902-8e0e-16f67e61a977"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Received_Stage" id="7b019488-e5c5-48e4-8038-51a3a72e6993"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Prepared_Stage" id="68b84822-3065-4a75-8243-e8a2d6ccfa14"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="13d51814-d046-4866-be00-1417997c0bc2"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Prepared_Stage" id="f0ef5de4-ec58-4c4f-89ff-e5470a39397f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Sent_Stage" id="474e46c5-d164-4dad-91cf-c4b67717aa93"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0c6b2186-39f2-4cc9-96fa-fced820852e3"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Sent_Stage" id="7d5383c8-0092-48b0-856a-73fb5b64cd6b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", chg)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request_Replied_Stage" id="e2be595d-9a3b-400a-9295-3d300a328161"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6bf81b05-7bf4-4335-8414-2ebdd363eb1e"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request_Replied_Stage" id="58fb5649-7eb6-41c8-b77f-0b31c626222a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="3fbe3fec-320f-4024-803e-c6492db41b4b"><con:settings/><con:config><script>log.info "sd_chg_request has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept_Replied_Stage" id="854f0bec-2da6-4b5c-9e9c-3d35d7dd4133"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b5d45749-04dc-493a-95c1-83d4835ca945"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept_Replied_Stage" id="c5069d0b-7f37-410d-9c0a-15ba5860ce92"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_accept" id="45109ff6-d158-435c-b16f-4b9359c9e62e"><con:settings/><con:config><script>log.info "pro_chg_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_chg_complete" id="2ae86d5d-a463-4efe-a174-4bf625305881"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e8cf2a46-bc8f-46ff-b4ed-219ab39d86d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">pro_chg_complete</itp:param>
               <itp:param name="sender">cscoamndc102</itp:param>
               <!--change parameters-->
				<itp:param name="effectiveUser">configuration508</itp:param>
				<!--Require fields-->		
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
				<itp:param name="z_state">Completed Successful</itp:param>							
				<itp:param name="z_notes">This is note for pro_chg_complete</itp:param>
							 
				 <!--change parameters
				<itp:param name="z_business_justification">h justification 5151519</itp:param>
				<itp:param name="z_change_id">VNH052115001</itp:param>
				<itp:param name="z_notes">TEST notes VNH052115001</itp:param>
				<itp:param name="z_status_reason">TEST Status Reason VNH052115001</itp:param>
				<itp:param name="z_summary">TEST summary VNH052115001</itp:param>
				<itp:param name="z_change_classification_class">Normal</itp:param>
				<itp:param name="z_change_coord_supp_gru">Noida Pod 1 Workplace Purple ADS</itp:param>
				<itp:param name="z_location_company">CSC</itp:param>
				<itp:param name="z_operational_categorization_1">Hardware</itp:param>
				<itp:param name="z_priority">Low</itp:param>
				<itp:param name="z_risk_level">None</itp:param>
				<itp:param name="z_requested_end_date">2015-12-12 11:01:52</itp:param>
           			-->
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e7206cd5-996d-4a5b-8a49-e506e4147d02"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="6a38b556-a3ed-47ba-8c06-8d35bafbc627"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Received_Stage" id="5d583a12-109f-49c2-8dcd-af5004bd2afa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='received' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d2634c73-c8a8-478b-998b-20dea5140a50"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Received_Stage" id="fa59f41d-8ea1-4ec8-baa6-df921ffce7d6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Prepared_Stage" id="cb2dd0bb-b000-429d-8b6b-91143633d0e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4b9de1fb-ae0d-4b6f-9ee2-05d0dc6d0563"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Prepared_Stage" id="776f4e10-3ba6-4753-a9b0-7a1fa3c5c268"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Sent_Stage" id="0e275d1a-6afd-4371-9958-9736ad2544b3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="bd6bb203-e4e5-4c77-9cbb-39a47d7b6025"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Sent_Stage" id="151e87f3-7af3-4e6b-9c83-8cadf2cf9eb6"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def chg = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && chg == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	chg = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (chg)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_complete_Replied_Stage" id="fdadbdc8-8c44-47c6-9bd7-8f8e8c42bcdf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CHG and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_chg_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="70c535e5-7e18-473d-90c7-2ddc3ffedc37"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_complete_Replied_Stage" id="494af061-a516-4ab8-b998-8daf7bed62ef"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_complete_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_chg_complete" id="861a8df6-d6ad-48af-a16f-b242ce6832a7"><con:settings/><con:config><script>log.info "pro_chg_complete has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150906231834</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>CHG0035927</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_CHG_REASSIGN" searchProperties="true" id="ce70b078-57f3-4d00-b7aa-4a3ed96c1ed9" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - pro_chg_reassign" id="e215ed98-096a-4694-bb9b-17d7f21562fb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_chg_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4f75d390-6cc5-4d1d-99dd-b124228217ba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Framework/Processes/Routers/Change/CSC ServiceNow</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="z_transaction_code">pro_chg_reassign</itp:param>
               <itp:param name="sender">CSC ServiceNow</itp:param>
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
               <itp:param name="z_work_notes">This is work notes for pro_chg_reassign</itp:param>
               <itp:param name="z_short_description">This is short description for pro_chg_reassign</itp:param>
               <itp:param name="z_external_number">VINHCHGrRD08012016_001</itp:param>
               <itp:param name="z_number">CHG0036326</itp:param>
               <itp:param name="z_comments">This is comment for pro_chg_reassign</itp:param>
               <itp:param name="z_state">Pending</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e1c18ae4-8c12-466b-831a-71dcaef33f5f"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="a9aa3747-456a-497c-ac67-d1b0423df1f7"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>CHG*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150906231251</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>CHG0035926</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 19" searchProperties="true" id="08857dd6-7dc7-4e9b-94d0-3cd371dd2128" disabled="true"><con:settings/><con:testStep type="request" name="insert - Request 1" id="bb7c38f0-5efc-4489-951d-59dc47686b41"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Request 1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="00eafe6a-af21-44d2-b19a-7215489c3935"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_change_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log>?</template_import_log>
         <!--Optional:-->
         <u_actual_end_date>?</u_actual_end_date>
         <!--Optional:-->
         <u_actual_outage_end_date>?</u_actual_outage_end_date>
         <!--Optional:-->
         <u_actual_outage_start_date>?</u_actual_outage_start_date>
         <!--Optional:-->
         <u_actual_start_date>?</u_actual_start_date>
         <!--Optional:-->
         <u_additional_comments>?</u_additional_comments>
         <!--Optional:-->
         <u_affected_cis>?</u_affected_cis>
         <!--Optional:-->
         <u_affected_locations>?</u_affected_locations>
         <!--Optional:-->
         <u_approval>?</u_approval>
         <!--Optional:-->
         <u_assignment_group>?</u_assignment_group>
         <!--Optional:-->
         <u_backout_plan>?</u_backout_plan>
         <!--Optional:-->
         <u_cab_date>?</u_cab_date>
         <!--Optional:-->
         <u_cab_recommendation>?</u_cab_recommendation>
         <!--Optional:-->
         <u_category>?</u_category>
         <!--Optional:-->
         <u_change_plan>?</u_change_plan>
         <!--Optional:-->
         <u_company>?</u_company>
         <!--Optional:-->
         <u_configuration_item>?</u_configuration_item>
         <!--Optional:-->
         <u_description>?</u_description>
         <!--Optional:-->
         <u_external_number>?</u_external_number>
         <!--Optional:-->
         <u_external_party>?</u_external_party>
         <!--Optional:-->
         <u_impact>?</u_impact>
         <!--Optional:-->
         <u_impacted_services>?</u_impacted_services>
         <!--Optional:-->
         <u_implementation_plan>?</u_implementation_plan>
         <!--Optional:-->
         <u_internal_error_message>?</u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message>?</u_internal_status_message>
         <!--Optional:-->
         <u_justification>?</u_justification>
         <!--Optional:-->
         <u_planned_end_date>?</u_planned_end_date>
         <!--Optional:-->
         <u_planned_outage_end_date>?</u_planned_outage_end_date>
         <!--Optional:-->
         <u_planned_outage_start_date>?</u_planned_outage_start_date>
         <!--Optional:-->
         <u_planned_start_date>?</u_planned_start_date>
         <!--Optional:-->
         <u_priority>?</u_priority>
         <!--Optional:-->
         <u_requested_by>?</u_requested_by>
         <!--Optional:-->
         <u_requested_by_date>?</u_requested_by_date>
         <!--Optional:-->
         <u_risk>?</u_risk>
         <!--Optional:-->
         <u_short_description>?</u_short_description>
         <!--Optional:-->
         <u_state>?</u_state>
         <!--Optional:-->
         <u_template>?</u_template>
         <!--Optional:-->
         <u_test_plan>?</u_test_plan>
         <!--Optional:-->
         <u_transaction_code>?</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>?</u_transaction_type>
         <!--Optional:-->
         <u_type>?</u_type>
         <!--Optional:-->
         <u_urgency>?</u_urgency>
         <!--Optional:-->
         <u_work_notes>?</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="3dbcb254-2142-4e25-b025-4d9c13ce42b1"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_change_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="NEW [3RD]SD_CHG_REQUEST" searchProperties="true" id="b685858c-a455-45c9-86fc-966597400d28" disabled="true"><con:settings/><con:testStep type="request" id="95c151a9-f346-49a3-87f4-dee65e33e4f9" name="ExecuteProcess - sd_chg_request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_chg_request" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
  <soapenv:Header /> 
<soapenv:Body>
<csc:executeProcess>
<csc:flow>
  <csc:name>/Framework/Processes/Routers/Change/Standard</csc:name> 
  <csc:action>start</csc:action> 
<csc:auth>
  <csc:token /> 
  <csc:user>pamadmin</csc:user> 
  <csc:password>pamadmin</csc:password> 
</csc:auth>
<csc:params>
  <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param> 
  <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param> 
  <csc:param name="request_type">sd_chg_request</csc:param> 
  <csc:param name="z_business_justification">This is business justification for sd_chg_request.</csc:param> 
  <csc:param name="z_change_classification_class">Normal</csc:param> 
  <csc:param name="z_change_coord_supp_gru">Approval Test1</csc:param> 
  <csc:param name="z_change_id">${#TestCase#ID}</csc:param> 
  <csc:param name="z_comments">This is comments for sd_chg_request.</csc:param> 
  <csc:param name="z_impact">Minor</csc:param> 
  <csc:param name="z_location_company">CSC Internal</csc:param> 
  <csc:param name="z_operational_categorization_1">Mainframe</csc:param> 
  <csc:param name="z_operational_categorization_2">Hardware</csc:param> 
  <csc:param name="z_operational_categorization_3">Maintenance</csc:param> 
  <csc:param name="z_priority">Medium</csc:param> 
  <csc:param name="z_risk_level">Very High</csc:param> 
  <csc:param name="z_status">Planning In Progress</csc:param> 
  <csc:param name="z_summary">This is summary for sd_chg_request.</csc:param> 
  <csc:param name="z_urgency">Low</csc:param> 
  <csc:param name="z_work_info_notes">This is work_info_notes for sd_chg_request.</csc:param>
  </csc:params>
  </csc:flow>
  </csc:executeProcess>
  </soapenv:Body>
  </soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_chg_request" id="772201dc-6da4-43bb-b654-eada179d6b53"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'sd_chg_request'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_chg_request" id="05e6dbcf-a723-439d-b07f-3c43138fa681"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_chg_request#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_chg_accept" id="80ac433b-a26c-4b14-94fd-2721928cbb1d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CHG  AND [request].request_type = 'pro_chg_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CHG</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_chg_accept" id="4dc58098-f109-4fba-8fda-3294e92a1f01"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_chg_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}


log.info (status)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_chg_request" id="b74a2ebe-6748-499c-9fa6-4ba2a0f389c5"><con:settings/><con:config><script>log.info "sd_chg_request has run successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160201111100</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>CHG0036477</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="REQUEST" id="3c58160a-9b65-4ed8-a9ed-42976be54adb" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[3rd]SD_REQ_ASSIGN" searchProperties="true" id="c95efd30-bce5-421e-998b-b48ef8fcedba" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="95abb3d1-fbaa-4ef4-88d8-93d54289a98d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9fed18d3-7505-4fc3-8b72-ff69cbffa375"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">sd_req_assign</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_assignment_group"/>
               <csc:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"/>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference"/>
               <csc:param name="z_item_description"/>
               <csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
               <csc:param name="z_quantity"/>
               <csc:param name="z_request_identifier">${#TestCase#ID}</csc:param>
               <csc:param name="z_request_state"/>
               <csc:param name="z_requested_for">dlayne@csc.com</csc:param>
               <csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="z_service_attribute_name"/>
               <csc:param name="z_service_attribute_value"/>
               <csc:param name="z_short_description"/>
               <csc:param name="z_workinfo_notes">This create by calling SOAPUI by Tan for testing 20151026</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="96c53d70-9351-46ed-bf5b-87967f9e9946"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="5860c038-8988-4be8-9a04-2f6e4aec1657" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" disabled="true" id="2bc93597-1232-456c-8cec-7d5908e257e3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cca18831-e481-4e67-a57b-75e49af070f9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" disabled="true" id="20d7f187-6bb7-4851-bc74-e692f4022590"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" disabled="true" id="e3e3c63e-2073-464a-8287-0bcbf2aa3dfa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f07df134-43f2-4787-8401-174833f37b91"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" disabled="true" id="df6eb71c-c8dd-4657-ae14-0b59a789aca5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" disabled="true" id="b076aea3-bbb2-4f59-8e47-f262fb9a0c0d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9623c80b-dc9b-478d-be01-ec86e886ecd9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" disabled="true" id="e5b9f989-5289-4e7c-84d2-2254c9245b0f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" disabled="true" id="dbd98d7e-be85-495b-91cb-6cd497a15aa7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0ebc7277-4438-4965-9997-f69615a4471c"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" disabled="true" id="0a76fc34-ee97-4228-828e-f3414cc02698"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" disabled="true" id="7ba7917c-71aa-45c5-94de-9298de3c28cb"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160115072457</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720010058</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[3rd]SD_REQ_UPDATE" searchProperties="true" id="d3f30932-dcec-4938-95f0-0f8ae28f6abb" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_update" id="3add426d-36d2-4ba1-98f8-bb9e95c7cfc0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9fed18d3-7505-4fc3-8b72-ff69cbffa375"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">sd_req_update</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_assignment_group"></csc:param>
               <csc:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
               <csc:param name="z_company"></csc:param>
               <csc:param name="z_configuration_item">aa</csc:param>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference">REQ0014946</csc:param>
               <csc:param name="z_item_description"/>
               <csc:param name="z_location">1 BISHOP SQUARE</csc:param>
               <csc:param name="z_quantity">5</csc:param>
               <csc:param name="z_request_identifier">20151022181805</csc:param>
               <csc:param name="z_request_state"></csc:param>
               <csc:param name="z_requested_for">dlayne@csc.com</csc:param>
               <csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="z_service_attribute_name"/>
               <csc:param name="z_service_attribute_value"/>
               <csc:param name="z_short_description"/>
               <csc:param name="z_workinfo_notes">This is work info notes for sd_req_update</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="96c53d70-9351-46ed-bf5b-87967f9e9946"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="5860c038-8988-4be8-9a04-2f6e4aec1657" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" disabled="true" id="043b3a06-40c5-4a07-b48d-3fb84f5d34ff"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cca18831-e481-4e67-a57b-75e49af070f9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" disabled="true" id="c7e65ae7-ad7a-4ea8-975f-d6b8eaae20cb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" disabled="true" id="268049ae-260e-4b33-bdd4-11cba9567930"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f07df134-43f2-4787-8401-174833f37b91"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" disabled="true" id="62845556-4d69-4038-98db-341e8326735a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" disabled="true" id="c27d9dea-1f08-479a-a8f4-be5140fe7745"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9623c80b-dc9b-478d-be01-ec86e886ecd9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" disabled="true" id="a3c21479-b7ba-472e-bf3e-b75e62c70473"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" disabled="true" id="83113c2b-08f2-42b1-9990-5d89cb3798a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0ebc7277-4438-4965-9997-f69615a4471c"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" disabled="true" id="739c7d0e-e8da-4d83-a7c9-a0e9866ba4e5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" disabled="true" id="fbb73355-9a57-44af-88b6-c55258fbf9da"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150807023848</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720010058</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_REQ_ASSIGN" searchProperties="true" disabled="true" id="f4b7f17c-45e6-4e56-810e-d2f3b5a4fb96"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="cee3217e-9b07-47d7-b546-8c5d7a70d5ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9fed18d3-7505-4fc3-8b72-ff69cbffa375"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="96c53d70-9351-46ed-bf5b-87967f9e9946"/><con:assertion type="XQuery Match" name="XQuery z_change_id" id="5860c038-8988-4be8-9a04-2f6e4aec1657"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="45a0a7c6-958f-4426-94c1-251b9a1b3f68"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cca18831-e481-4e67-a57b-75e49af070f9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="f45a32ca-fd32-4b1c-b55a-9831c70aaadd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="9f34a49c-b2db-4197-8fe4-11e16db03c6b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f07df134-43f2-4787-8401-174833f37b91"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="1c91b6e7-aeca-4265-a1a2-e51c53a885db"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="4f0aa260-36ba-4eb8-9f7e-d1427859275a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9623c80b-dc9b-478d-be01-ec86e886ecd9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="75586104-3d4b-43b9-a9db-023c2d7f33d0"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="bae86943-590d-47c5-b85a-7180b453e5c5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0ebc7277-4438-4965-9997-f69615a4471c"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="554e9050-8eb6-467b-97d0-fb54add8c149"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="d17ba739-f207-4350-a580-94e580c33664"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150807023848</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720010058</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_REQ_UPDATE" searchProperties="true" disabled="true" id="847f0f04-40b1-4341-a2cb-c0e60426bc23"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="027fa461-3f41-45d3-bf3c-9ed95137c6a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="febbe53c-9095-4478-acf0-978baff28e4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f69b4ff-2379-4109-b488-4e5a441a6738"/><con:assertion type="XQuery Match" name="XQuery Match" id="93f7e5cc-8056-4fba-bc67-0c35f52d8eab"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="8d1e0da4-a7f5-4b5d-b723-4fc01358f5fb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa4f3ca2-8997-467f-b2a0-414a44391d89"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="8ccae598-ef0f-4571-ad51-d9ae49844545"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="0a64441e-2da5-4561-b74e-ff9cbdd63362"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d20ddf00-2e53-4c57-bb2e-355ee833e769"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="73857b10-09b4-4c47-9561-f12b239dad65"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="a757bb15-8e4e-407e-856a-ac0b1f4cf51d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="57161bdc-a50c-49c1-bd94-9501d1a2038e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="d482f966-e509-4540-a0c4-dd478e074824"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="1d9e06ce-f7a9-4e80-8216-06db3e6e3e08"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="e6eca975-b26b-4999-a8e1-3bda247cc763"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="20088bf3-e68c-42b0-a124-bd9c976b55e1"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_update" id="118d2ca9-c1c4-4735-9914-9f23a0398441"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c688976d-5133-4c68-a168-4f0832a972e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_req_update</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
               <itp:param name="file_name">sample_file.txt</itp:param>
               <itp:param name="file_type">text/plain</itp:param>
               <itp:param name="effectiveUser">configuration402</itp:param>              
               <!--REG servicenow incident adapter parameters-->
               <itp:param name="z_company">CSC Internal</itp:param>
	     	<itp:param name="z_customer_first_name">DAVID</itp:param>			
		     <itp:param name="z_customer_last_name">LAYNE</itp:param>
			<itp:param name="z_external_party">CSC Internal</itp:param>
			<itp:param name="z_quantity">1</itp:param>
			<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			   
               <itp:param name="z_requested_for">dlayne@csc.com</itp:param>                 
               <itp:param name="z_workinfo_notes">This is work info notes for sd_req_update</itp:param>					
			<itp:param name="z_request_state">Pending</itp:param>	 
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe410ef1-e2c9-4827-acec-a97534e95192"/><con:assertion type="XQuery Match" name="XQuery Match" id="c31c3aad-5566-4a5a-a2c1-5074163b7f7e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Received_Stage" id="b5e7b699-6adc-46d0-8528-aa5de76c4410"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="566f2a4d-8181-4cfb-9c8c-736e12175a33"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Received_Stage" id="a5ea9652-19cd-4068-97bf-db1600c117b2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Prepared_Stage" id="edf6afb3-2be9-49f2-919c-4bf4ba859db6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8ac1fd95-fa50-46f2-9c38-a02e8536a94a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Prepared_Stage" id="e5088e4e-5cb3-4eae-8082-7a90cf60ddb8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Sent_Stage" id="51b93771-2ae4-449b-9187-c981e7a22824"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b65fa61-3d26-4a0f-83a0-7229bda519f7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Sent_Stage" id="822a43f4-1901-4a45-95e1-c7b3ff43d57d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Replied_Stage" id="b7db0ad6-3b0f-4aca-8ef0-dae893e62f16"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="73f57c41-58df-4653-8df4-ab6fa8d508d9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Replied_Stage" id="32c6f123-efcc-4420-841c-3ca3b2ae4da5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_update" id="cd31caad-b9ca-417f-a1d3-6aabd9ce54e7"><con:settings/><con:config><script>log.info "sd_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150727051204</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720040034</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_REQ_CANCELLED" searchProperties="true" disabled="true" id="ffd7479f-e41d-4851-96c4-24df5ea73d68"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="59fd5b29-f25e-4b1f-828a-07ef8a5a1df0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="83469879-7d80-4f59-87a0-583c808ed848"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="2ae56df0-eb20-4284-ae61-6a9ba52a3d1d"/><con:assertion type="XQuery Match" name="XQuery Match" id="b51d6e80-3ccc-42be-a8d6-074cdee6782a"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="4fbcea93-e8e8-418c-bffc-1c6eef854b36"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b2f6aa86-b012-4c2d-aa86-4d641b39aa74"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="d679d48f-7ec7-4da4-a0a6-363250179183"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="0300d4a2-58ed-48a9-b196-a60e7033a12c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fcef0364-dbc4-4002-a8b4-564240bedf38"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="4c546a20-aa61-403d-a613-c054488d3d91"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="ca4cf8d3-4aa4-491b-a0e8-1c8bbac17f8f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d504cc7d-3271-4468-8b0b-74524044d750"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="0b8f9cf0-b6e8-46a9-b4e6-7be0e8732c02"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="bc591c55-3c6c-4b36-96f2-22d827efb127"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="93da4332-644d-4d12-8392-09ad9c09ebfe"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="7f1a20f7-4a71-4b44-82a7-bbb0a308fb3a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="c79ce534-d2aa-41b7-8706-48840136f179"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_cancelled" id="78c0ee61-d538-43ca-be47-23f8a2cd2cbc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="93c7590b-c93c-48c3-80b8-a8458a6275a1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_req_cancelled</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
               <itp:param name="file_name">sample_file.txt</itp:param>
               <itp:param name="file_type">text/plain</itp:param>
               <itp:param name="effectiveUser">configuration402</itp:param>              
               <!--REG servicenow incident adapter parameters-->
               <itp:param name="z_company">CSC Internal</itp:param>
			   <itp:param name="z_external_party">CSC Internal</itp:param>
			   <itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>
			   <itp:param name="z_workinfo_notes">This is work info notes for sd_req_cancelled</itp:param>		   
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6b1ea0f6-e9f2-4992-9a46-3698cf6b31e1"/><con:assertion type="XQuery Match" name="XQuery Match" id="282867c4-9bf6-4eaa-bcf6-c3ff3ad509b2"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Received_Stage" id="4613cd75-c644-4d2c-97a8-14cb2e98fb3c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2d2db69f-003b-46a4-aac1-02a257ef1292"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Received_Stage" id="4892a62b-d467-4337-967c-6f11d4993faa"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Prepared_Stage" id="bb72d3cb-fae8-4a7b-aae8-c129a401d641"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f6a2bd3-6642-474b-aa10-a179d5b225d0"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Prepared_Stage" id="681c4658-4927-40c9-a5ba-9b0e983af9c9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Sent_Stage" id="6ede028b-0f39-4222-bca3-9b62923903ee"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b653bef0-7b60-4299-ac32-a830d7bb295d"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Sent_Stage" id="70d1be0e-7b52-400e-8d42-7720167b5e6a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Replied_Stage" id="0dc66b77-a245-4584-a7c9-93b58f33c697"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="39fab74a-20f7-4ab6-a22a-bc51d683371e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Replied_Stage" id="38d35a3f-2b7c-4b24-9fc6-f636df4b5cd9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_cancelled" id="b1b3c260-1709-4aea-98fe-5bdf6f879627"><con:settings/><con:config><script>log.info "sd_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150804024345</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720022625</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SD_REQ_REASSIGN" searchProperties="true" disabled="true" id="19558aaa-0877-4ffa-9aef-73c676f10fea"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="40039d74-2570-4b12-8279-7e12c6cff2f7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="09db2815-c1d7-4de9-b5e1-d06c39f32caa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0f989a57-ca1a-4564-92fd-f375a73ae855"/><con:assertion type="XQuery Match" name="XQuery Match" id="f066b441-8fdc-40d2-9140-02758d0586c7"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="60710594-42ac-4a39-b87a-58c32efab9a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="995d676c-6cd0-4eee-9372-0fe614dcc8d6"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="aeef0c17-ceea-4be6-b67f-6f290f446128"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="9ca98cd5-0d94-43b3-904c-f4c781a67dc0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3e737f8e-b6b1-4087-8137-2fb5bd9dca3f"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="82dafc55-3b3d-4960-9322-1315144e378c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="41f608bc-4ad2-4f40-9f5f-92b0c190c361"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="245c8e31-2e2a-4c57-ad6b-31c4b499c4f0"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="4c80c809-f87f-4828-ac73-ca2e5ee5cf4a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="6766ebef-9a08-487f-8f83-a2b013fbf09d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="560d3b55-980f-4bb3-a4af-dee601bedbb6"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="b221f408-8550-4fd9-a61d-fb41957fd64d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="df13640c-8455-4dbb-afe7-ef269faf035a"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_reassign" id="cd26a1b9-4bf6-4f42-b0f8-7ddb43c9f57e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="1eebe388-eecd-42e3-b755-a4b556c08468"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_req_reassign</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
               <itp:param name="file_name">sample_file.txt</itp:param>
               <itp:param name="file_type">text/plain</itp:param>
               <itp:param name="effectiveUser">configuration402</itp:param>              
               <!--REG servicenow incident adapter parameters-->
               <itp:param name="z_company">CSC Internal</itp:param>
			<itp:param name="z_external_party">CSC Internal</itp:param>
			<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>
			<itp:param name="z_workinfo_notes">This is work info notes for sd_req_reassign</itp:param>		   
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6e37a1b0-35ee-4cfb-8dd4-4df7e79a7d36"/><con:assertion type="XQuery Match" name="XQuery Match" id="9bd50672-6ad6-4898-bb31-866e8e7fbc78"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Received_Stage" id="de465a9f-1e09-4bdb-806b-0d1a53194b6c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9c38e3e1-61cb-460f-921f-de4fb90c31f8"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Received_Stage" id="96903cd4-2b97-4034-8d5d-2599eaf3a726"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Prepared_Stage" id="212c57fc-e71e-4b89-af85-01c0bc0013e1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e921b6b7-e34d-4b8a-bb16-e84282e241fd"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Prepared_Stage" id="3609ffeb-01a2-406f-9470-d6da5c4237d9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Sent_Stage" id="ed91ac5c-5329-49f8-9a83-ef536ce8a0eb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="0f05da23-e032-45d0-8eaa-dd276d9c9e2a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Sent_Stage" id="67ae0642-dc8b-4b76-a254-7debde7910cf"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Replied_Stage" id="a3a70f84-b855-4a7e-8541-7adff95b92ae"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1713b255-78c9-4cc4-9fc6-064842ad501c"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Replied_Stage" id="3ca5ffed-9415-491c-885a-ddc75caf60e5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_reassign" id="7f89f408-43c6-436d-a31a-db1dfce51f6e"><con:settings/><con:config><script>log.info "sd_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150807041450</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720022426</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_REQ_COMPLETE" searchProperties="true" disabled="true" id="cff08631-b77f-4276-a12a-3715c751542e"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="c567c3c7-9326-404b-bd31-547908ebc0bc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="2654f134-7844-4b78-8446-37fc3f764a71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="40724864-7fbe-4daf-ab6e-d40fba667ed2"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="73bc869f-eab8-4174-81d1-058024475087"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="88a14607-9b71-42b2-bd9b-ecf5ea433168"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="5038a2e4-f09d-4cda-b6e1-eb5ad6d76b80"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="12177cfe-16a3-437b-9909-d0329da2ce4a"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="831b4123-e265-496f-8207-74f4138e4330"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="0c2a7f42-7fae-49f8-ae8d-8bc83c599b19"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="62ae3925-2a40-4cb8-ace7-12d584e9436e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="edbb2136-8806-4d60-8706-5dd68e3be250"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="1364787a-21ae-4bde-80bc-d3e2212549e1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="e8dcadf2-0aaa-41c4-bcd0-4275065f6e34"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e0f54dc0-30d4-4b6a-a731-4bca65215c1f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="99443866-d7ef-48ab-923c-b9764224c28f"/><con:assertion type="XPath Match" name="XPath z_number" id="213c323a-795c-48ae-8779-c0e28a061a3d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="ef00498f-92ed-4055-9b6e-601ceb5247cc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6b1f82d8-8942-449b-a4f6-40238503cf21"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="759b034c-ef43-44dd-8bfe-2a04695c6ca9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="13f7bec2-5bd4-489c-bafc-9abd95013530"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="cbbb1913-054b-4c6c-a8de-0f0b56e6740b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="e233dc8b-9d26-4210-b5da-ffaba9224930"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="abce51aa-19dd-4314-ba3e-3b5a16b4f16a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="81147501-025c-4f58-a3d6-e0a9645b58f3"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="fe5e7969-a80e-4a26-8e27-ee9ae17cf214"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)
if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="9ebed3ac-2442-433b-b697-5480cab32629"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3c0d9939-2c3c-4462-a9e9-1d46a1f0b800"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="d322b8d6-7fb6-4807-a63e-ebc0e8ab2ba5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="3d1d2ce6-8765-496f-91ec-8e39ecd275a5"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="17736738-5f81-4fff-859d-9cd99aefface"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="b844e54c-29a6-4b95-94c8-87da03b586b5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="fb301b5f-7d4b-48bb-a452-989b45fbe2a0"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_complete" id="c2a580ef-7c28-411c-805c-bce1bf583828"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7cec6e3e-febd-4d0c-be43-23b4147c297f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">pro_req_complete</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration404</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>	
					<itp:param name="z_external_party">CSC</itp:param>					
					<itp:param name="z_request_identifier">${#TestCase#RECEIVER_ID}</itp:param>					
					<itp:param name="z_workinfo_notes">This is work info notes for pro_req_complete</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="75837ce7-47e2-44b8-957d-ac5d1b3d6fdf"/><con:assertion type="XPath Match" name="XPath z_request_identifiter" id="85baa9d5-38d2-4a6e-b89b-fb4915b64633" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Received_Stage" id="146f6b8d-ff42-408c-96e2-4c46fb6a9555"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="86cb3a2b-d99b-4119-813f-128336bd7385"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Received_Stage" id="57600579-491d-48b4-8831-47a28944f7d6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Prepared_Stage" id="ea94b19e-0c2d-4fec-8cc7-c3bf8377f67f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2698620a-b598-4030-853b-9d8a93791e10"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Prepared_Stage" id="fea01c2e-5e66-4aa1-abbb-dfc91d06c02c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Sent_Stage" id="aa3b16c1-71b0-4358-8cfb-fbf17fc1d6c1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="40aa65e0-f33f-45ab-89c0-29d82e7de49f"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Sent_Stage" id="9688f25c-f1f0-4e73-8a1e-5e0999fbb1fa"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Replied_Stage" id="ca0c5a5f-beb1-4749-8ca7-88670c05ee05"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Replied_Stage" id="0059b2bf-8cae-4927-ab3d-6c2598f899e4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_complete" id="149a206c-0b68-4622-8bca-76cba59a3baa"><con:settings/><con:config><script>log.info "pro_req_complete has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014076</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0014987</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>54e5644a-1c6f-4485-b96d-40c6ebe9d6ab</con:value></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_REQ_CANCELLED" searchProperties="true" disabled="true" id="6f3b562a-f115-434c-9b89-9d9c245a6691"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="5fe139df-8f95-4b5a-8e73-b2a03374b5ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="a9b205af-3f14-44a5-8111-57429cfff6cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e37fe5d4-9d05-4a74-9b6c-9a4156e7e89c"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="8efecece-974b-4653-ba8f-4153023fb3ca"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="52cacd46-829e-4c01-a1b2-86c2659d03fe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="dae1975a-e2f1-4700-b0ff-3967cd85fd71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c1d5df1e-031a-468a-9891-b0852766be02"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="79b4d49f-be91-488c-93ce-de10f439db6e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="342c3ca5-891f-4bf7-8fa3-67e34b10ed91"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="0f9c7a57-ae2f-448b-b1cc-f1ff3652f399"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a8c35f4e-b774-4352-9631-dbd125560c45"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="d08a9bc8-44cf-4988-aca7-82f10df1f60a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="593693ca-879e-4a82-8d9f-d05a1da72aba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="80920a8f-7502-4b77-861d-938f334073bc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="7bd3e757-83aa-42a3-badd-d73fcafe6423"/><con:assertion type="XPath Match" name="XPath z_number" id="43db4e25-212e-4e5f-8b67-42024bf6c82d"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="892f1f2a-0c61-4ced-9306-1cd064618283"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c14f5101-d17d-4635-bcc9-002eb25e54f1"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="7863e3ce-a266-485b-8ff1-11ddf696192a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="ec5bfcdd-5417-467b-a32f-e1a7767f81ab"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="77187af6-85a5-46dd-a502-cfeef1d70ed7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="ca01b366-d7f0-49da-8d87-61553fafbaa7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="db1d6c7a-ef64-4c03-afb1-f2e4b17cf4b3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="c26c7d56-14c3-4a2d-b0d6-1bf821a8b48c"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="d8d2458b-374d-487b-9357-6c48e77e6699"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="f81b34aa-c1b6-42ca-b62a-d99fd56556c1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5d00a142-7a39-4e9f-9aac-e8467d41cfab"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="d7100082-a703-4ead-8b36-b4a0420b38c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="3cd1ea57-d079-45ee-a503-dea08788959f"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="912ccdbf-e01b-4184-82ca-7a65b4679b7a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="d1ff6144-5023-499c-9bd6-2026803324a0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="88bf6900-7814-4e7a-a3a8-f081ddc76780"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_cancelled" id="f979e65e-0e49-4411-973e-560a134af53b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e124a7a9-07e2-4e37-bfcf-b50dee9fda9a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">pro_req_cancelled</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration404</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>	
					<itp:param name="z_external_party">CSC</itp:param>					
					<itp:param name="z_request_identifier">${#TestCase#RECEIVER_ID}</itp:param>					
					<itp:param name="z_workinfo_notes">This is work info notes for pro_req_cancelled</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c0d6567a-7701-40ee-b824-8f58056d9a9c"/><con:assertion type="XPath Match" name="XPath z_request_identifier" id="14b6bab3-1b8b-4322-b874-8e874c211286" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Received_Stage" id="347a104b-9486-4e94-94a8-e63707de8929"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="a66d66cd-684d-4597-9b37-54fa3b4c0d41"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Received_Stage" id="e0604471-2054-4ea2-91cc-8d834199eb27"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Prepared_Stage" id="3cb59168-8fbf-4d44-8aa8-4be894f667a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7ffe5a19-f2dc-4ce2-ada0-b2a223967408"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Prepared_Stage" id="e1d8a681-3ab8-4f6e-982c-7904385f7960"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Sent_Stage" id="f7448e1b-9689-4ab6-8e8d-f59bbdc02d0e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="647d382e-cebe-4370-bf54-341e0fc223f0"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Sent_Stage" id="7b326067-e7d3-4caa-b6c4-22d73015ab15"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Replied_Stage" id="ad76e053-1851-42bf-9652-33a3af7093cb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="93bcdbe8-eef0-40d5-9cf8-d446d2180904"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Replied_Stage" id="e696175d-17ca-4373-a65f-89af61d57cbf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_cancelled" id="3491858e-6666-4047-9f40-c5d0423dcfa2"><con:settings/><con:config><script>log.info "pro_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014189</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015054</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>d314ada1-27d9-48e6-9038-fe12965d29f5</con:value></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_REQ_UPDATE" searchProperties="true" id="46e5266d-857d-4ab7-bda1-2510b5afa13a" disabled="true"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="290b81e7-205f-4929-8bbf-d7e5826baaaa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="b9d43538-11ad-4b07-a434-04996a9fe0e0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="85df6242-ceec-412c-a08b-74cf8c44c6eb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="2062b4da-05d9-4b98-a606-481b544f2f45"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="db007983-8f06-4330-86e7-afd3ae6cc7d5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="f1f3bde3-1d4c-442e-a432-c30e25589895"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="d58bc4ba-2ff0-4b96-99de-72eb8e394b26"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="5acb58b6-de92-4566-97b7-c42d9a8620b6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="e02d4b00-fad1-49e4-ac93-da7e1c3b9328"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_additional_information">2 - High</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="09cd119f-9f1e-481f-8e08-e0b72dcd3237"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7d6d3039-1179-45d0-b909-90f196e203fa"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="bdcad085-7e74-40f5-8847-9b9527c655e8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="d5803dbb-ba42-4b1a-bf6a-ccafcf5eec8c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8c803ee2-c4cc-4406-88ee-927caf88d648"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="a50d30d8-62f4-43aa-ba59-a56ad997835b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="abd437fa-ae14-42ce-80cf-c3490d6cb00d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21b98c1d-8a0c-4dac-8338-edc7eb150b8e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="c1c6d2d4-dc49-45d8-a8d1-c2b8122a2539"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="085b4e20-c740-4849-8f3f-8a828f9cc621"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f44099f2-b12d-40dc-a2bd-bde999b33149"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="0f366113-a210-4197-898a-79627ef2edbe"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="1470e7a0-4054-46d5-b89a-608e773ff24c"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="ae1c994d-f490-4e83-b8d9-35868eaa2dc6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="11e3b65c-e9b3-4693-9ce4-34c9af7a939c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="1c51dc70-33ac-43bb-899d-31c4cf2a3a65"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_update" id="b210f8b0-47ae-4d55-8d2b-e1810d7b3dbc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">pro_req_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration404</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>					
					<itp:param name="z_request_identifier">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_workinfo_notes">This is work info notes for pro_req_update</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_request_identifier" id="8b273de4-d848-4560-8aeb-9e06ae192074" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Received_Stage" id="9c97eb09-1800-446d-ad77-22f51ed81e55"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e4590a06-7477-4ecf-bd30-e4560aed3bc9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Received_Stage" id="d294b448-e0ca-4364-b91a-b91bdfa82e18"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Prepared_Stage" id="5a8c1eac-ece8-4fe9-bf5c-3333cf212797"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6d615028-15f5-4e93-bb38-f29913363fc1"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Prepared_Stage" id="81a56dee-f044-44e8-baf3-9763b5625b33"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Sent_Stage" id="49cf5352-270e-4537-b4ac-66fd380f6177"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f6819fa-a80e-47e0-9670-28f8bd4080eb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Sent_Stage" id="98faa46a-8832-4b52-81e5-4f4d9fd004dd"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Replied_Stage" id="14a12f3e-19dd-4674-b14c-3f666999349b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="10aa57e6-b0e3-4262-88d0-7104a66cd518"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Replied_Stage" id="cf2f86e6-58a7-4a19-a1f4-d39f5fa5dd6c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_update" id="7c52a774-82bb-456f-b756-e53386919d70"><con:settings/><con:config><script>log.info "pro_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014179</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015051</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PRO_REQ_REASSIGN" searchProperties="true" disabled="true" id="cc5ecead-a0ff-4397-909b-5995d46ac06b"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="f4c1b202-e992-44ef-8e67-3cb9d7b696bc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="23089753-0236-419f-8333-891a3cf15084"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d3d2e6c7-f5b2-4750-8cbd-f46521584aa5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="0f43b366-3ce3-4e0a-9a67-74ccd96e8d99"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="7b7eea70-d5c9-4d72-86b7-9e7221657923"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="369b77c0-08b7-41bd-9ae5-5f216143398f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9c86eb3c-1cc0-4f42-8490-d37f4b329f95"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="23726a98-c8fc-4a80-a171-1b5659d8cf29"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="077a1076-91b7-4db8-851d-2dff0daff095"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="90609fec-4c3f-418d-bfbe-aa2069063af0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ef553115-d7bc-4e87-9713-125f128924ca"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="143d2b77-47a4-45ec-bd9a-97f562261918"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="19c63f16-2e3e-4d30-8811-d0f521b0ff30"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f8443c2f-7b7e-425f-a35b-055928cf3e6b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c73bf2a0-a507-4f4c-aae3-1f71ea37353a"/><con:assertion type="XPath Match" name="XPath z_number" id="91e89562-5c2d-491b-8ebb-7891c2313b66"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="fd58e3ef-66a4-47b1-944b-c56d94c02754"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="9b9e162d-c1be-413d-88f6-9289cfd6a6cc"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="6ea79150-69d0-43b7-a164-b259c4a829a2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="369ac84b-c1ef-46aa-89dd-d981568ff59f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="98cc9724-912a-44ff-aa7f-932185ee23c5"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="6ac1f9ca-e8c1-4f75-a016-a76e47fbd07c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="a6d6a8d5-ca67-48b2-bc6e-9980d897a764"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e1105489-4291-4ee7-b946-a29149f8c916"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="99cbbf1a-6616-42cd-a490-240d17c7c7eb"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)
if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="1ad5df90-6ee4-4a64-a279-62646ab6d6dd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5b7bb7bf-0aef-47fb-9857-fe4c8e4dfc3d"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="a159c0c9-b1f8-49f9-a261-a7e4682a5912"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="6c36caa0-7556-4970-b40a-c36c9ee89815"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="226d8890-a203-4aac-b19c-c51a44c22a0e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="8f07b79c-44d1-472c-9c63-525e3634c3fd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="de383beb-c5a1-41d7-b4c7-8b55cc985d4f"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_reassign" id="67a45232-f567-4c31-9866-b210e97ffdd3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8f9014f3-f54f-43a7-ad69-2b6a5cf28808"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">pro_req_reassign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration404</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>	
					<itp:param name="z_external_party">CSC</itp:param>					
					<itp:param name="z_request_identifier">${#TestCase#RECEIVER_ID}</itp:param>					
					<itp:param name="z_workinfo_notes">This is work info notes for pro_req_reassign</itp:param>
					<itp:param name="z_assignment_group">Datacenter Architecture</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="ca6c1e53-92c1-47e6-b5b4-d5c214c45427"/><con:assertion type="XPath Match" name="XPath z_request_identifier" id="c69f678b-7b38-40db-b1d1-f63bf2fada03" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Received_Stage" id="76e92db6-75d3-456d-9c14-9071a5ab814c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4875bffd-819f-4f83-a105-bb075fb0662a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Received_Stage" id="d98626fc-43f8-4254-bdf1-5c76801183ca"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Prepared_Stage" id="ea34bac7-091a-46ac-a6ab-bdda7ef85f66"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d34b3afc-b402-4190-9497-fe6e97cacd55"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Prepared_Stage" id="d0aeb7f0-278b-4d00-8a32-015fb99b99f4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Sent_Stage" id="357cab33-b0f9-43df-9cbf-14246b9c39c0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="19d266a4-c4a9-4905-99ea-12c87d4a4223"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Sent_Stage" id="8c279382-e685-451e-a469-10bebfe7ed7f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Replied_Stage" id="c422cdf7-e76b-48d3-85c7-465a9a6b77ec"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7aec92de-e13b-4fe4-a8fb-d596584aeff0"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Replied_Stage" id="c9f79739-58b5-402f-aa69-e2036b194607"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_reassign" id="533f1a76-f6c9-4cac-81e2-63e06d21d79a"><con:settings/><con:config><script>log.info "pro_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014215</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015080</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>10298127-4c7c-4a47-b96b-77aeb775817c</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0015538</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_REQ_ASSIGN" searchProperties="true" id="16ec8702-0c58-4512-9039-0ce474ac4e96"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="e36900c0-01fb-4048-a495-55188db8f9cf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="eee76e67-f0fa-4cae-80dc-d2a7cad628f0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="43df39f6-b367-4028-8030-6efc73ca16e6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="f5cae175-b657-4a22-972a-78f80ba2f85f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e4e9e5ce-b380-41d3-83ae-de2e43fc53f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="598ec4e9-3740-40f2-80ab-6819fef39995"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="336f2832-278e-4fa1-afc6-1167fc4adddb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="b167820d-e6cf-4e69-afd7-91d9cd6da4c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="c3966f92-31b0-41b5-bae8-e93dccfe7098"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="6c8f8214-94a5-4346-9785-0a069038ac3e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="b20fbfb7-02c6-4b55-8cbb-6834e7ece904"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_req_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_req_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_accept" id="a976063c-ed4c-4b86-abd4-e093b6d05ecd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">pro_req_accept</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_catalogue_item"></csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"></csc:param>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference">${#TestCase#TASK_ID}</csc:param>
               <csc:param name="z_request_identifier">${#TestCase#ID_ASYNC}</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="25d4afca-fd77-4624-b565-f004a6106c50"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="2076f13b-6ffc-43f9-b295-1e7a4af8704b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="55e5188a-669c-4c3e-aa69-ff466b60460c"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="82b56071-aa1f-465c-91c1-ca54c7ee76b9"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015605</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016593</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160125100338</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0017038</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160125100338</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_REQ_UPDATE" searchProperties="true" id="cbaa69c0-ec8a-457f-97c2-28bebd50acb7"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="8d801948-94bc-4c96-9d4d-69844491d1ce"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="377c26e7-c0ab-4250-93b9-6323fb574a6e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="98251a28-0ce2-4d94-80d4-f9fd01bf2dbf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="f5cae175-b657-4a22-972a-78f80ba2f85f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e4e9e5ce-b380-41d3-83ae-de2e43fc53f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="4a912f18-1c78-465e-9c37-e8a51f7e4718"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="d5c30044-00af-4193-b97f-feafbefe14b5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="197b6fc7-e009-4e38-9676-ea1e4c54376b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="d2a1b551-d1db-48fd-980d-59ed478e8801"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="2baa7a42-deba-4dd1-ac6b-cda5e6561014"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="3534cdd0-698c-444c-b1bb-8645a16b0d2a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_req_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_req_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_accept" id="a327c961-a5cd-49a6-8a38-6e03a0acf62b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">pro_req_accept</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_catalogue_item"></csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"></csc:param>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference">${#TestCase#TASK_ID}</csc:param>
               <csc:param name="z_request_identifier">${#TestCase#ID_ASYNC}</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="5db528d2-488e-4057-b0e1-9ef05318a407"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="32a42b25-d1e4-49d4-ae60-6ab999d5cedb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="db50a966-4bf5-4d39-a79c-26ce8f12b6da"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="bc52b79b-9305-435e-abc5-963ea8c43c33"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_update" id="bdd041a2-2dae-4e77-86bc-ac5ef3d9e02a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--Routing parameters-->
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="module">Request</itp:param>
					<itp:param name="path">/Framwork/Processes/CSC ServiceNow to Standard/</itp:param>
					<itp:param name="z_transaction_code">sd_req_update</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_assignment_group">AT&amp;T - Cyber &amp; Firewall Offshore</itp:param>	
					<!-- mandatory -->
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_state">Open</itp:param>
					<!--  -->
					<!-- lookup -->
					<itp:param name="z_priority">1 - Critical</itp:param>
					<!--  -->
					<!-- non-mandatory -->
					<itp:param name="z_configuration_item">configuration_item</itp:param>
					<itp:param name="z_description">This is description for sd_req_update</itp:param>
					<itp:param name="z_requested_for">z_requested_for</itp:param>
					<itp:param name="z_short_description">This is short_description for sd_req_update</itp:param>			
					<itp:param name="z_work_notes">This is work_notes for sd_req_update</itp:param>					

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update" id="a6a98d26-3d8d-4c62-80ae-adecf163c015"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update" id="ca67d274-9e3a-4a5f-9008-a0833c7237a7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_update" id="c02f3167-79a8-44ca-98ec-024b79a0bf97"><con:settings/><con:config><script>log.info "sd_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015524</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016517</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160118114738</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016954</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160118114738</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_REQ_REASSIGN" searchProperties="true" id="d81f5660-4ef9-42d2-b113-7c5c7ba99df7"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="2cb72b49-529a-4552-96fe-244b49fcf022"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="07f0a5dc-aca2-43d8-b46f-94c1209b1a01"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="cb8a09db-e987-445c-82ea-27911a438db0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="f5cae175-b657-4a22-972a-78f80ba2f85f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e4e9e5ce-b380-41d3-83ae-de2e43fc53f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="65911221-6818-427e-b803-8d8a29479757"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="cb1b3100-6503-4376-b514-7d214054b57d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="0f28fed3-a33d-42b8-b48e-fab498e1cfa0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="fa179989-9a46-489b-9a24-7fbc7fe8f460"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="b98c2b91-1f28-48ff-b276-c0bb6a645a09"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="d30a9a86-bb28-48f9-bf9f-32bbabca909e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_req_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_req_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_accept" id="6dc0c8bf-eb68-40fb-9cba-d8725304b77a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">pro_req_accept</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_catalogue_item"></csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"></csc:param>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference">${#TestCase#TASK_ID}</csc:param>
               <csc:param name="z_request_identifier">${#TestCase#ID_ASYNC}</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="662d2e36-1a4d-48bb-bcc7-e4eede087560"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="d7d7893a-23cc-4617-b323-173ec3771caf"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="1d5c9fb2-93ca-4b9c-8bcd-454a2ec807f0"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="3b7b5172-b065-4e9b-bf1f-0664ed39c379"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_reassign" id="ca251f92-f37e-4206-9229-d220130514ba"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">sd_req_reassign</itp:param>\r
               <itp:param name="z_assignment_group"/>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>\r
               <itp:param name="z_state">Closed Cancelled</itp:param>\r
               <itp:param name="z_work_notes">This is work_notes for sd_req_reassign</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign" id="21a2706b-b6f5-46c5-a6f4-0d62dfb405e5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign" id="53f1f9df-6751-4852-87b8-d013986fd666"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_reassign" id="cdab3958-f5e3-4a71-b485-0b2c6b1b00b1"><con:settings/><con:config><script>log.info "sd_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015526</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016519</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160118120624</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016956</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160118120624</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_REQ_CANCELLED" searchProperties="true" id="a4ad2730-7387-4c9f-a970-1990d87c49bd"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="6138b277-5bc1-47ba-9224-485929d75497"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="594a623c-c424-45ea-9433-6a7107626f06"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="0cae6514-e0fa-48aa-863e-27f21d28a334"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="f5cae175-b657-4a22-972a-78f80ba2f85f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e4e9e5ce-b380-41d3-83ae-de2e43fc53f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="d010ee0b-35f6-4a1a-9b5e-07f642ba99db"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="0669d116-b8f0-41e3-83de-b48c206e82dd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="c6e66d46-c401-4452-9fa8-bc02ca0c5ca6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="0ed645c7-fb28-43db-8d9b-77b250e09366"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="8eb53141-4252-4026-9a27-ec850d6d928a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="3086442f-55b4-4a6d-a622-a3fdd2eaad01"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID_ASYNC" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_req_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_req_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_accept" id="6b0f86f2-7749-4acc-9672-4d2cf2d1e9e6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
              <csc:param name="request_type">pro_req_accept</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <csc:param name="z_catalogue_item"></csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
               <csc:param name="z_configuration_item"></csc:param>
               <csc:param name="z_customer_email"/>
               <csc:param name="z_customer_first_name"/>
               <csc:param name="z_customer_last_name"/>
               <csc:param name="z_external_party"/>
               <csc:param name="z_external_request_reference">${#TestCase#TASK_ID}</csc:param>
               <csc:param name="z_request_identifier">${#TestCase#ID_ASYNC}</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="599d79e0-4658-47ef-92a1-4bad221c6535"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="7147dc8a-05cc-40ac-82c9-0b351853ba6e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="3308d3cc-7b6d-4609-aebb-8ef34a0683c7"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="58607759-d81c-41fe-b023-a72b00de3694"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_cancelled" id="648732e8-d516-4b73-b63f-20bea2061c63"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--pam parameters-->\r
               <itp:param name="z_transaction_code">sd_req_cancelled</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>\r
               <itp:param name="z_work_notes">This is work_notes for sd_req_cancelled</itp:param>\r
               <itp:param name="z_state">Closed Incomplete</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled" id="89d02d7a-6010-4ecc-9202-f7a8e1eab3b5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled" id="4f44686b-56d2-4a27-b3f9-8a80d99196c3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_cancelled" id="1d3dfcce-87e9-4ad9-bdea-e544e750981e"><con:settings/><con:config><script>log.info "sd_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015527</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016520</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160118120737</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016957</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160118120737</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_REQ_UPDATE" searchProperties="true" id="c16b83c9-d982-4034-8afc-48661373603c"><con:settings/><con:testStep type="request" id="56cdba84-f76d-42ac-93cf-75998e762542" name="ExecuteProcess - sd_req_assign"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="request_type">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company"></csc:param>
					<csc:param name="z_catalogue_item">3744874f6fa2ce00c5afbd5dbb3ee4ba</csc:param>
					<csc:param name="z_configuration_item">L51 Computer 01</csc:param>
					<csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
					<csc:param name="z_request_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_quantity">1</csc:param>
					<csc:param name="z_request_state"></csc:param>
					<csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_service_attribute_name">PersonInfoShipTo Job Title</csc:param>
					<csc:param name="z_service_attribute_value">Mr</csc:param>
					<csc:param name="z_workinfo_notes">This is the work notes for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="b6f4a062-c470-454e-9a77-5499317f93b1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="573e60f6-4092-41ba-a1f4-7bcc0efd10c7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="75f1f2b6-32e6-497b-af7e-a32ae33d9dc3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="4dbf9a25-be90-4f0f-be9b-8309459062ff"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)



if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="dd086a38-5f95-4a30-b300-4f470a68baae"><con:settings/><con:config><script>log.info "sd_req_assign and pro_req_accept have run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_update" id="9cc1bbe8-efb0-4349-be8e-94b65334428a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_assignment_group"></itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_transaction_code">pro_req_update</itp:param>
					<itp:param name="z_external_number">${#TestCase#ID}</itp:param>
					<itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param> 
					<itp:param name="z_stage">Application Access</itp:param>
					<itp:param name="z_state">Work in Progress</itp:param>
					<itp:param name="z_location">100 MAIN ST, Charleston, South Carolina</itp:param>
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>
					<itp:param name="z_estimated_delivery_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_due_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_configuration_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_additional_comments">This request additional comments for pro_req_update</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update" id="267d6238-9590-47a7-be70-49be52ee7925"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update" id="81f0d1c5-59b5-4214-a854-2894861d5b59"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_update" id="1e88257b-2041-4d54-8988-1c38fd90f852"><con:settings/><con:config><script>log.info "pro_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160119034756</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160119034756</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_REQ_CANCELLED" searchProperties="true" id="8e63cf68-f79e-4e41-924f-69f584aca76c"><con:settings/><con:testStep type="request" id="d1a6ed5e-3598-4a4c-8ea9-4020b2c3ce9f" name="ExecuteProcess - sd_req_assign"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="request_type">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company"></csc:param>
					<csc:param name="z_catalogue_item">3744874f6fa2ce00c5afbd5dbb3ee4ba</csc:param>
					<csc:param name="z_configuration_item">L51 Computer 01</csc:param>
					<csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
					<csc:param name="z_request_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_quantity">1</csc:param>
					<csc:param name="z_request_state"></csc:param>
					<csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_service_attribute_name">PersonInfoShipTo Job Title</csc:param>
					<csc:param name="z_service_attribute_value">Mr</csc:param>
					<csc:param name="z_workinfo_notes">This is the work notes for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="f43ac78a-90e7-49e0-8c99-8f5cdc9af9c0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="aff28544-8381-461c-8701-9f55305d90c5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="2118a2f4-14fb-4811-9ecc-3b279c9b1080"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="572a79bd-8273-4b0a-98ca-812dceabae36"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)



if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="ea3931e9-f3c6-48c3-8a65-8fca088aaf85"><con:settings/><con:config><script>log.info "sd_req_assign and pro_req_accept have run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_cancelled" id="624f91e9-ea2e-42b9-b140-58cd7b8acdbd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_state">Closed Cancelled</itp:param>\r
               <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#ID}</itp:param>\r
               <itp:param name="z_transaction_code">pro_req_cancelled</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled" id="9503973b-bd17-4ab8-9026-eaec638c368e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled" id="df1954a6-d5ca-4576-8375-72391fd8fb93"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_cancelled" id="55d76db5-6acd-41aa-97f3-5098fc2669c4"><con:settings/><con:config><script>log.info "pro_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160119034551</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160119034551</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_REQ_COMPLETE" searchProperties="true" id="985f53d1-b6aa-412d-9091-6c6770358dc6"><con:settings/><con:testStep type="request" id="7bb1dcc9-7b64-4a50-9f83-5659b1f9fdc2" name="ExecuteProcess - sd_req_assign"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="request_type">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company"></csc:param>
					<csc:param name="z_catalogue_item">3744874f6fa2ce00c5afbd5dbb3ee4ba</csc:param>
					<csc:param name="z_configuration_item">L51 Computer 01</csc:param>
					<csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
					<csc:param name="z_request_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_quantity">1</csc:param>
					<csc:param name="z_request_state"></csc:param>
					<csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_service_attribute_name">PersonInfoShipTo Job Title</csc:param>
					<csc:param name="z_service_attribute_value">Mr</csc:param>
					<csc:param name="z_workinfo_notes">This is the work notes for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="f86a940e-c4ce-4976-a14c-88ea384b98ec"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="a646b110-b178-41d7-87dc-349c0fd61825"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="0fa4faaa-1020-4784-a204-4983807d50e0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="2ed363ed-a1a6-4f6c-9539-690c936748f6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)



if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="fcddd725-72e9-47a5-8438-e9cafc06fd2a"><con:settings/><con:config><script>log.info "sd_req_assign and pro_req_accept have run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_complete" id="7771bb28-1da6-4b01-824b-19b3b56d5ea7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">pro_req_complete</csc:param>
					<csc:param name="z_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#ID}</csc:param>
					<csc:param name="z_request_state">Closed Incomplete</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete" id="f86541d2-1527-4c8b-82c8-b00c323a8af4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete" id="4b05ce43-3271-441d-bed4-0e1a491ef462"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_complete" id="a27256a2-6e2f-43ff-8e3f-0ff1b2e3aac0"><con:settings/><con:config><script>log.info "pro_req_complete has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160119034515</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160119034515</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]PRO_REQ_REASSIGN" searchProperties="true" id="b620e71c-d086-458b-b124-8c6356540025"><con:settings/><con:testStep type="request" id="4410413d-6fa1-46f2-a20c-d57e645c334f" name="ExecuteProcess - sd_req_assign"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d6cea4f1-d61d-4d09-be9f-1627754dad18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">AT&amp;T</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="request_type">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company"></csc:param>
					<csc:param name="z_catalogue_item">3744874f6fa2ce00c5afbd5dbb3ee4ba</csc:param>
					<csc:param name="z_configuration_item">L51 Computer 01</csc:param>
					<csc:param name="z_location">100 MAIN ST, Charleston, South Carolina</csc:param>
					<csc:param name="z_request_identifier">${#TestCase#ID}</csc:param>
					<csc:param name="z_quantity">1</csc:param>
					<csc:param name="z_request_state"></csc:param>
					<csc:param name="z_requested_for_date">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_service_attribute_name">PersonInfoShipTo Job Title</csc:param>
					<csc:param name="z_service_attribute_value">Mr</csc:param>
					<csc:param name="z_workinfo_notes">This is the work notes for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" id="8bc2a7fc-f955-4cfd-b4b1-d5f8f037b01d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="c968688b-9f19-4a7a-a534-6e5a618030b6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="75d6c5c8-a138-4f6a-bcae-f681992d5098"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
		count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)


if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="2f013b46-f6f3-46ca-b69b-eb857832959f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d899b6af-a343-4de8-967d-6d8c2a5a0ceb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="c5135ec0-2f40-4e51-94c0-a47bd29e1b8d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)



if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="d2df13bf-796f-478c-8846-4b50afab6f5b"><con:settings/><con:config><script>log.info "sd_req_assign and pro_req_accept have run successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_reassign" id="a40fdfc7-2557-4f17-a5e9-f560a8f59120"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:csc="http://www.ca.com/cscam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">pro_req_reassign</csc:param>
					<csc:param name="z_number">${#TestCase#RECEIVER_ID}</csc:param>
					<csc:param name="z_external_number">${#TestCase#ID}</csc:param>
					<csc:param name="z_request_state">Work in Progress</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign" id="18993709-ad33-41c6-8fe6-818050e5a900"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign" id="0c914c90-38a3-40c4-97ed-14832c42be81"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_reassign" id="7287367d-b94e-4448-9ab7-ca17d44947a1"><con:settings/><con:config><script>log.info "pro_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20160119034228</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>20160119034228</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_REQ_UPDATE_OLD" searchProperties="true" disabled="true" id="e5b1c2d8-227d-4eac-b390-743c4af8c6b3"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="62d8c789-57b1-4ead-8493-381dd92b3c19"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="cf37b759-78c6-43e3-9467-a4faedff5227"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="e2ce4ccd-8bc0-44a7-9452-3487f5e331d1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="bf6cc086-ceb0-47ca-9f9a-90700364351b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="37584b3d-8d2c-4132-b7f8-4fd8daf3e6d7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="fc2855ff-2cf7-496a-96a7-ca187ed9ff3b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="1b4f2e60-842c-454b-ac02-880ec939573a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="7b8a0e5d-1d87-49eb-a673-28b5b810dfbc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="e6d1cbc4-2d6a-4275-9114-007d0f24a2c2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_additional_information">2 - High</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="6a2416e3-4ca9-4dcd-be69-9bb4cb129054"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7d6d3039-1179-45d0-b909-90f196e203fa"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="ce6ac019-b860-4d76-8f90-c57d475a822f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="ded616f5-392f-4681-86fd-22f6f504315f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8c803ee2-c4cc-4406-88ee-927caf88d648"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="0b282d61-8cbe-4a4c-81b9-7841dc4d13bb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="a136dce7-452e-4a84-b781-7d550fdfdfc6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21b98c1d-8a0c-4dac-8338-edc7eb150b8e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="7d9c9790-1d71-4113-abe6-2176efd24a12"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="0e6fb1e5-113b-40ac-8b56-f3d2af1b2fda"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f44099f2-b12d-40dc-a2bd-bde999b33149"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="ed63cab5-86da-4560-b012-a620b0bb4e11"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="ab30f77d-1f4b-4051-b57b-6971d88beba7"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="45c9bae9-758b-4642-b98a-9d7c289d3c2a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="380ce8de-8c88-4266-96bc-120b69ebb53b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="ef3812b5-977b-4697-a4ac-f4ad2e078c4b"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_update" id="13c1fe99-bbbb-45bc-9c3e-3ea39af0c060"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration406</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>	
					<itp:param name="z_external_party">CSC</itp:param>					
					<itp:param name="z_quantity">1</itp:param>					
				    <itp:param name="z_state">Pending</itp:param> 
					<itp:param name="z_work_notes">This is work notes for sd_req_update</itp:param> 
					<itp:param name="z_priority">1 - Critical</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Received_Stage" id="ebd82a47-ae7c-4616-b9db-50cfe47b0e7b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e4590a06-7477-4ecf-bd30-e4560aed3bc9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Received_Stage" id="3eb71058-02ad-4b69-bf5d-481b71b8415b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Prepared_Stage" id="c46c9c64-379d-4325-82b8-c4272219f08f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6d615028-15f5-4e93-bb38-f29913363fc1"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Prepared_Stage" id="84c52a35-2a52-49bc-8b46-fde9c0433eb7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Sent_Stage" id="c37c5ce1-16fd-4f72-b7da-ff4eeb02b754"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f6819fa-a80e-47e0-9670-28f8bd4080eb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Sent_Stage" id="2704f73c-3bd7-4cff-90d6-063035c6674a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update_Replied_Stage" id="5bf23c35-8ff4-4189-810e-134ceb0d602e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="10aa57e6-b0e3-4262-88d0-7104a66cd518"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update_Replied_Stage" id="c778f191-79db-4601-a9fb-74439288bf0b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_update" id="ca6b00f4-b1a6-4d47-bdf1-ae710af7ca9c"><con:settings/><con:config><script>log.info "sd_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014171</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015046</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>d6ab341c-c9c9-457c-8ffe-514e8e0a68c9</con:value></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_REQ_REASSIGN" searchProperties="true" disabled="true" id="2b4813d3-5be1-4e94-921f-bf951b3a1a71"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="9bb42285-29d2-4fd8-8eb2-771e380fd33a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="c4cc2a42-1f9b-48f2-a06c-bdb49f498d40"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="e86ba433-da2f-461d-8c69-82ae83e4a287"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="540623bf-8cbb-454e-b9cd-be9e48f6b8bf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="98bcf58b-da2a-438f-803c-45f10b7040e6"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="63c197c2-efc7-4029-b3dc-56f386030e95"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="92f2c2b2-22e8-4155-98c1-b5a97891d26a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="d8eafd5a-a177-4cce-aa2f-d1b0ead99e5c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="056ce651-15fb-49eb-92cf-1b5a3b6e6f1a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_additional_information">2 - High</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="82b3d6ed-3534-4368-a90f-5d5c2ac2a96c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7d6d3039-1179-45d0-b909-90f196e203fa"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="060113af-4db6-43b0-ae15-24f4dd656c66"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="b2348917-e686-4de4-b8f3-a0c8376b5613"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8c803ee2-c4cc-4406-88ee-927caf88d648"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="1047e88b-a167-4c6b-b23d-2fba47ff4d2f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="771ff522-4a71-4a62-bb3f-6b7f3cc2bd3b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21b98c1d-8a0c-4dac-8338-edc7eb150b8e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="d690ad1c-a0ed-4172-b017-30c43c0ca747"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="802dcf48-bdc5-4698-8b8a-09ba3d9ee9b1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f44099f2-b12d-40dc-a2bd-bde999b33149"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="f737a960-c92a-48f4-ba2f-6d57faaa2106"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="6f315124-6877-40f7-8eb9-f3bc8b8089ec"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="adc2954d-9024-4d40-908f-8db99aa88e2b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="32692a11-53d2-4d8e-ae2c-a434ad54e580"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="d6e3ef56-e3f8-489e-8dd2-d34dbe0e3653"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_reassign" id="a58f3712-009c-493d-8a17-2f1b5eb54dee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
 <soapenv:Header/>
 <soapenv:Body>
  <itp:executeProcess>
   <itp:flow>
    <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
    <itp:action>start</itp:action>
    <itp:auth>
     <itp:token/>
     <itp:user>pamadmin</itp:user>
     <itp:password>pamadmin</itp:password>
    </itp:auth>
    <itp:params> 
     <!--pam parameters-->
     <itp:param name="request_type">sd_req_reassign</itp:param>
     <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
     <itp:param name="effectiveUser">configuration406</itp:param>
     <!--qbe servicenow incident adapter parameters-->
     <itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
     <itp:param name="z_work_notes">This is work notes for sd_req_reassign</itp:param>

    </itp:params>
   </itp:flow>
  </itp:executeProcess>
 </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Received_Stage" id="a4fb9faa-5e4e-45f3-9447-f41d8e163b25"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e4590a06-7477-4ecf-bd30-e4560aed3bc9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Received_Stage" id="e9d8f6e2-0bd6-4899-9738-d01e6df10a88"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Prepared_Stage" id="84c2fab2-aba4-4a3f-803b-4e5aa04caac7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6d615028-15f5-4e93-bb38-f29913363fc1"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Prepared_Stage" id="3d6e599a-3a46-43f2-b3b2-710cca4bf0cc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Sent_Stage" id="b96b3c83-aa60-4a9c-b964-910b81e1f1b7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f6819fa-a80e-47e0-9670-28f8bd4080eb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Sent_Stage" id="b54b0d94-34c2-4e48-87b0-832b99597374"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign_Replied_Stage" id="5af04498-7d60-4d78-bc22-d4c7f37636e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="10aa57e6-b0e3-4262-88d0-7104a66cd518"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign_Replied_Stage" id="cfb8fdec-7244-4d3b-9a47-ffad3809f5d7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_reassign" id="73786ac0-4cc7-417c-9ec7-cd4abf153877"><con:settings/><con:config><script>log.info "sd_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014167</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015042</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>88ae6386-6184-47f3-aa60-0582ae103c17</con:value></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_REQ_CANCELLED" searchProperties="true" disabled="true" id="6e5ca655-eddc-4123-98a6-2d93f50ec819"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="88da52a2-b00e-47d1-a0f7-a6dc7b7cf940"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="6b69a5de-a1fc-4013-9273-89cba30c0b26"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="3692c51e-019d-43d2-bd37-06479c3c22f8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="789a2f74-af65-4b43-baa5-011da722b3cf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8216ecbc-a7f0-47a6-bbcd-09a4a0ee843f"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="3ce25b8a-5fda-4892-88ad-15409240eb8b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="df111e4e-6ed6-40a2-9b14-f34846140576"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="9a87169d-a2ee-4c30-98c4-1c0884cb5309"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="a12308d6-eddc-44b7-9ff3-243d5112687e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_additional_information">2 - High</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="5f57f7ac-bfbb-49df-8bf7-c142d84f1fe1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7d6d3039-1179-45d0-b909-90f196e203fa"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="761276e0-909a-4dc4-9d83-29383b5054ec"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="df77ac43-d264-4adb-a6a3-1ae09dde448e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8c803ee2-c4cc-4406-88ee-927caf88d648"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="81cd4f07-613d-4f6d-9b6f-beedf550c8f4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="cdb1f2d8-38f0-4a90-a3b0-c853bd7f0d71"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21b98c1d-8a0c-4dac-8338-edc7eb150b8e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="6694133d-48ac-429e-af7a-d2a8466e20ac"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="1ce7e60e-c6fb-4327-a836-60219ac40c07"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f44099f2-b12d-40dc-a2bd-bde999b33149"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="5041a3de-9155-497a-b9d4-d544bb099610"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="f5c4138a-c61a-460f-afc9-1a1c111cc7a8"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="6f585214-dc6d-422e-af58-81117dcc53b7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="5301aa62-9110-4c57-9d53-5ab88d7252a8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="4bdb2de2-55a6-4852-ad5a-193695050d20"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_cancelled" id="5ae5fab4-8472-4272-969a-7d1a4673edc4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_cancelled</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration406</itp:param>
					<!--qbe servicenow incident adapter parameters-->
					<itp:param name="z_company">CSC</itp:param>					
					<itp:param name="z_external_party">CSC</itp:param>	
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>			
				     <itp:param name="z_request_state">Closed Cancelled</itp:param> 
					<itp:param name="z_work_notes">This is work notes for sd_req_cancelled</itp:param>					
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Received_Stage" id="574b1fef-52df-4e2d-965b-57e3c71d4a7a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e4590a06-7477-4ecf-bd30-e4560aed3bc9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Received_Stage" id="52ec5128-64cf-46c6-a7da-c0c061f59a96"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Prepared_Stage" id="ff61d914-59c1-4796-8d28-e11024c64851"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6d615028-15f5-4e93-bb38-f29913363fc1"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Prepared_Stage" id="6c64d122-882b-40b4-9205-1a7a89957863"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Sent_Stage" id="41c1a994-a3cb-4696-a37b-220ca44de21a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6f6819fa-a80e-47e0-9670-28f8bd4080eb"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Sent_Stage" id="7158b32d-33a3-4beb-bd42-fbfbdab0cc72"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled_Replied_Stage" id="1fd479ca-f725-47b7-bc08-003bf08c02e8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="10aa57e6-b0e3-4262-88d0-7104a66cd518"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled_Replied_Stage" id="1cf52820-867b-4834-921c-515b8e02d3c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_cancelled" id="01649578-8c5d-4ba6-a31a-b510adb7fc73"><con:settings/><con:config><script>log.info "sd_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014193</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015055</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>891b0788-4031-42d9-8d31-3351280b6238</con:value></con:property><con:property><con:name>ITEM_ID</con:name></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_REQ_CACELLED" searchProperties="true" disabled="true" id="f372fb4c-b257-4214-91a7-d294b3bc84df"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="075f29a9-2274-4d31-a5d4-e7e1d88d17d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="febbe53c-9095-4478-acf0-978baff28e4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f69b4ff-2379-4109-b488-4e5a441a6738"/><con:assertion type="XQuery Match" name="XQuery Match" id="93f7e5cc-8056-4fba-bc67-0c35f52d8eab"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="877ed407-b207-42ee-8aa1-cd3e9eec4091"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa4f3ca2-8997-467f-b2a0-414a44391d89"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="3642328e-3c72-4ecc-9531-2f461cb82817"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="9c550cbb-7599-4f01-819d-be99ff06237a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d20ddf00-2e53-4c57-bb2e-355ee833e769"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="11f013d6-861d-4592-af60-9275bc582b83"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="18b3dbd2-358f-47db-9085-00a1c9b99573"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="57161bdc-a50c-49c1-bd94-9501d1a2038e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="00cfdaa3-4ab0-40fd-9f95-a242505d5c55"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="d767a2e4-063a-4dcf-8afc-75e300a925cf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="7e6df11d-56ef-41de-8077-ac5246aa78ee"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="5cf690f4-f14c-472e-b982-38bafea9dfcf"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="979f8a98-5bdd-4f6e-8350-3be280575066"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="069c39fb-1efa-4846-9c0d-58a5ebb62127"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="f2d242e8-15b3-47b1-8b60-6eb9147440a6"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_cancelled" id="0540d570-8277-40e9-bcd9-3dc673841b0a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c688976d-5133-4c68-a168-4f0832a972e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_req_cancelled</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration408</itp:param>
		  <!--qbe servicenow incident adapter parameters-->			  
		  <!--qbe servicenow incident adapter parameters-->
		  <itp:param name="z_external_party">CSC</itp:param>
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
		  <itp:param name="z_request_state">Closed Incomplete</itp:param>	  
		  <itp:param name="z_work_notes">This is work notes for pro_req_cancelled</itp:param>  	 		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe410ef1-e2c9-4827-acec-a97534e95192"/><con:assertion type="XQuery Match" name="XQuery Match" id="c31c3aad-5566-4a5a-a2c1-5074163b7f7e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Received_Stage" id="062e6204-23fd-4b1c-a2c1-5ef8148d5f27"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="566f2a4d-8181-4cfb-9c8c-736e12175a33"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Received_Stage" id="ca980c3d-2605-40fd-bd07-86d3f693e567"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Prepared_Stage" id="268032c0-e579-4f83-b21b-baac91bc1b77"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8ac1fd95-fa50-46f2-9c38-a02e8536a94a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Prepared_Stage" id="551df081-9952-4166-9f43-e2c34f5e92b7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Sent_Stage" id="f3ca4694-e2ed-4bb9-b7e2-eb90bfef18e3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b65fa61-3d26-4a0f-83a0-7229bda519f7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Sent_Stage" id="7e414bdb-cb60-41c6-96b1-42042e800d6e"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_cancelled_Replied_Stage" id="6a9022b4-cf2e-4730-8e3e-fa9ec8f7a38a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="73f57c41-58df-4653-8df4-ab6fa8d508d9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_cancelled_Replied_Stage" id="cae2d783-44fb-4229-9168-a16d5a96ea92"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_cancelled_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_cancelled" id="0a610823-7dc3-47f2-9985-3568f4ddde14"><con:settings/><con:config><script>log.info "pro_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150807021539</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720040034</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>REQ0014186</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_REQ_UPDATE" searchProperties="true" id="43a9c436-8deb-4274-8ed2-8bacc19f1a8f" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="45b144e0-b6f2-442c-9dcb-95a6ab4abde5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="febbe53c-9095-4478-acf0-978baff28e4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f69b4ff-2379-4109-b488-4e5a441a6738"/><con:assertion type="XQuery Match" name="XQuery Match" id="93f7e5cc-8056-4fba-bc67-0c35f52d8eab"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="4f482941-d671-4772-97fb-2a62d6e69345"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa4f3ca2-8997-467f-b2a0-414a44391d89"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="75f7d0f1-3c5e-41b8-a63a-0d905c31188f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="57000cec-4e8c-4a9a-a50d-69f4d2d3a173"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d20ddf00-2e53-4c57-bb2e-355ee833e769"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="16ebdea4-6bc9-4aa0-bb46-94343f5d1f0e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="39cdbe54-20e7-42c8-9335-509b4371f344"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="57161bdc-a50c-49c1-bd94-9501d1a2038e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="3b546286-0527-4d9c-aab7-d533fcea57ef"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="eaf27875-1941-4ea0-b8fb-3eb88a2800af"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="572041a1-0662-49c4-b567-50a8e2d0e438"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="7ac91b14-30f7-47ef-8135-878988474d68"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="c95848a1-134f-41db-804a-34faaff2515a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="6bfdb35a-bfef-4fb3-b394-860014aacb50"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="f98c284f-d6a3-404b-a94b-b733af81eb8d"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_update" id="ff437da2-faa8-4274-b9ec-7ba598541ad5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c688976d-5133-4c68-a168-4f0832a972e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_req_update</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration408</itp:param>
		  <!--qbe servicenow incident adapter parameters-->			  
		  <!--qbe servicenow incident adapter parameters-->
		  <itp:param name="z_external_party">CSC</itp:param>
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>
		  <itp:param name="z_comments">This is comments for pro_req_update</itp:param>
		  <itp:param name="z_work_notes">This is work notes for pro_req_update</itp:param>
		  <itp:param name="z_due_date">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>		  
		  <itp:param name="z_estimated_delivery">${=new Date().format("yyyy-MM-dd-HH:mm:ss")}</itp:param>		 		  
		  <itp:param name="z_stage">Open</itp:param>		
		  		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe410ef1-e2c9-4827-acec-a97534e95192"/><con:assertion type="XQuery Match" name="XQuery Match" id="c31c3aad-5566-4a5a-a2c1-5074163b7f7e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Received_Stage" id="6b49ff85-8e84-401f-a2a4-8b9423036c3b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="566f2a4d-8181-4cfb-9c8c-736e12175a33"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Received_Stage" id="eda094f9-820b-4631-8f83-b428b9a90884"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Prepared_Stage" id="b7a51147-508d-44da-a37a-68daaef58ce8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8ac1fd95-fa50-46f2-9c38-a02e8536a94a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Prepared_Stage" id="a899607e-80db-40d9-be7e-6468ea7a1474"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Sent_Stage" id="808fe909-c006-46c8-b64b-9f4685a6c81c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b65fa61-3d26-4a0f-83a0-7229bda519f7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Sent_Stage" id="5639a554-714c-4269-bc71-7cf5d7c3f6f0"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_update_Replied_Stage" id="b72dd7a7-d7d0-4793-8d29-17a93d4919be"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="73f57c41-58df-4653-8df4-ab6fa8d508d9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_update_Replied_Stage" id="ef6bc9ef-74da-450d-8ccf-158fd1fcf075"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_update" id="84b53bd9-b960-4976-aba3-bdf84bf2a34c"><con:settings/><con:config><script>log.info "pro_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150917221211</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720040034</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>REQ0014632</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_REQ_COMPLETE" searchProperties="true" disabled="true" id="84ba3e2b-92e1-4cd9-991b-fe0e99448876"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="4f144aaa-61cb-4b20-a911-5d6f8d5ca102"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="febbe53c-9095-4478-acf0-978baff28e4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f69b4ff-2379-4109-b488-4e5a441a6738"/><con:assertion type="XQuery Match" name="XQuery Match" id="93f7e5cc-8056-4fba-bc67-0c35f52d8eab"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="20f02536-9725-4a05-97bf-d5f8e23b80c6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa4f3ca2-8997-467f-b2a0-414a44391d89"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="692a7fe8-de03-492f-b97f-35f74b55ae11"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="d18e712a-9c40-4a11-99ff-57f183851476"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d20ddf00-2e53-4c57-bb2e-355ee833e769"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="1c980b4b-9631-4a54-a7d8-3bd8b5ae6f30"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="3ea28aa9-036e-46a2-a131-525634c7ed22"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="57161bdc-a50c-49c1-bd94-9501d1a2038e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="9391c1e3-7915-4f78-a3fb-1c7035a18f70"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="edc1020e-ceb4-44db-b1da-20c539fe8521"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="3ec2db0d-be42-4775-b843-9b9336afcb94"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="deba5832-45c2-4122-af56-89a16204df1d"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="d01b99d7-60d2-4e7e-ae65-a54a0987d5ae"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="79ffb2f5-d1a1-4cd5-9e38-c94517a6b7f5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="5e2b50b5-aa9d-4bec-9beb-b159d52d3bf4"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_complete" id="6ebf5957-211b-457a-a2b8-32b6f837afbc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_complete" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c688976d-5133-4c68-a168-4f0832a972e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_req_complete</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration408</itp:param>	
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>			  
		  <itp:param name="z_external_party">CSC</itp:param>
		  <itp:param name="z_state">Closed Complete</itp:param>		  	  
		  <itp:param name="z_work_notes">This is work notes for pro_req_complete</itp:param>  	 		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe410ef1-e2c9-4827-acec-a97534e95192"/><con:assertion type="XQuery Match" name="XQuery Match" id="c31c3aad-5566-4a5a-a2c1-5074163b7f7e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ*</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Received_Stage" id="31d4e722-3442-4c16-9a31-6dd428e24931"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="566f2a4d-8181-4cfb-9c8c-736e12175a33"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Received_Stage" id="49b4b9ce-1879-4286-96d1-02dec2c08eab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Prepared_Stage" id="d4650faf-f6b7-4e40-9967-589379574fb2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8ac1fd95-fa50-46f2-9c38-a02e8536a94a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Prepared_Stage" id="795a370e-5b5d-49b1-9dcc-fcb8cef75b12"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Sent_Stage" id="2bd6ae07-f97b-4669-9d2e-701a653a5cfa"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b65fa61-3d26-4a0f-83a0-7229bda519f7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Sent_Stage" id="87f2fe09-be3a-4de2-ad47-3f64beae8051"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_complete_Replied_Stage" id="8029b8ce-4296-41d8-ad6d-1e0f758e67f4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_complete'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="73f57c41-58df-4653-8df4-ab6fa8d508d9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_complete_Replied_Stage" id="a9d73902-5e6a-4b27-815d-ebfe91f70763"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_complete_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_complete" id="d95d9c55-9421-4e5b-9903-b06b0d7e8dbb"><con:settings/><con:config><script>log.info "pro_req_complete has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150807033343</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720040034</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>REQ0014191</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]PRO_REQ_REASSIGN" searchProperties="true" disabled="true" id="8adf097b-2589-4b7f-b404-27e2fdb0d037"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="c9b57f19-c3bd-463a-b1d0-6c8ba2aa9c79"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="febbe53c-9095-4478-acf0-978baff28e4e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="file_base64">VGhpcyBpcyBhbiBhdHRhY2htZW50Lg==</itp:param>
					<itp:param name="file_name">sample_file.txt</itp:param>
					<itp:param name="file_type">text/plain</itp:param>
					<itp:param name="effectiveUser">configuration401</itp:param>
					
					<itp:param name="z_catalogue_item">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_request_identifier">${#TestCase#ID}</itp:param>			
					<itp:param name="z_requested_for">dlayne@csc.com</itp:param>			
					<itp:param name="z_workinfo_notes">This is work info notes for sd_req_assign</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f69b4ff-2379-4109-b488-4e5a441a6738"/><con:assertion type="XQuery Match" name="XQuery Match" id="93f7e5cc-8056-4fba-bc67-0c35f52d8eab"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_request_identifier']</path><content>&lt;itp:param name="z_request_identifier" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="b4644e44-153d-4808-ac57-8659aa9f978b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="fa4f3ca2-8997-467f-b2a0-414a44391d89"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="f010bc22-4f44-4cf2-b9e3-af7aea3283cd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="a21f7d81-bf19-4b85-93ec-567b15a923f0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d20ddf00-2e53-4c57-bb2e-355ee833e769"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="1515b365-8b38-4b57-87f4-8d44ba3968d0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="b227581f-db25-4a12-aa23-c0ddd68ccd94"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="57161bdc-a50c-49c1-bd94-9501d1a2038e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="7c14ea06-ecd3-4839-bd7f-6c5298535505"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="53306ce1-f726-4a15-a6a0-177c2ccab979"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="36b7036f-dc18-46a0-9beb-8ad8f4bd0357"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="0766972b-9078-4ce0-bfbc-ced9174df49d"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept_Replied_Stage" id="6cd8717c-4ad8-4818-938e-e0804e30c41b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="5238b9d4-019b-4c74-bd40-59f203a5afaf"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept_Replied_Stage" id="11e746e7-d4d3-47eb-8545-1266aead4012"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="9b9fce8b-abdd-4399-bee0-a61b4ed71e45"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_req_reassign" id="8d5be3d1-83c1-4d4c-89f0-753c8e583664"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c688976d-5133-4c68-a168-4f0832a972e0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_req_reassign</itp:param>
		  <itp:param name="sender">cscoamndc102</itp:param>
		  <itp:param name="effectiveUser">configuration408</itp:param>	
		  <itp:param name="z_number">${#TestCase#RECEIVER_ID}</itp:param>			  
		  <itp:param name="z_external_party">CSC</itp:param>		  	  
		  <itp:param name="z_work_notes">This is work notes for pro_req_reassign</itp:param>  	 		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fe410ef1-e2c9-4827-acec-a97534e95192"/><con:assertion type="XQuery Match" name="XQuery Match" id="c31c3aad-5566-4a5a-a2c1-5074163b7f7e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>REQ</content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Received_Stage" id="96a3f760-26a4-4ac2-9dc2-077b4f51c427"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="566f2a4d-8181-4cfb-9c8c-736e12175a33"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Received_Stage" id="1f202399-42f7-486e-af7e-1469e3777911"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Prepared_Stage" id="c48c1083-c4a4-433f-82d3-3aeb334baaa8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8ac1fd95-fa50-46f2-9c38-a02e8536a94a"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Prepared_Stage" id="72c47a4d-6deb-4be4-959e-518e3aa65019"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Sent_Stage" id="05a870dc-08cf-407b-8c2b-cbbb999c5e45"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="2b65fa61-3d26-4a0f-83a0-7229bda519f7"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Sent_Stage" id="a4453a48-38d5-4d99-bff5-b98501689156"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_reassign_Replied_Stage" id="d100ba90-88ef-4497-9027-a9dbe9727547"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="73f57c41-58df-4653-8df4-ab6fa8d508d9"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_reassign_Replied_Stage" id="e135bf3e-d4c2-4520-b9b2-73a09126f8f9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_reassign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_reassign" id="b2bacd23-82a5-421a-876f-9d39b6483b6e"><con:settings/><con:config><script>log.info "pro_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150727051204</con:value></con:property><con:property><con:name>REQID</con:name><con:value>20150720040034</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SYN[SNOW]SD_REQ_REASSIGN" searchProperties="true" id="ba0f89e4-ddb9-44b3-a953-2970d2ab7b7b" disabled="true"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="506bd121-856a-4c2b-9867-64bd05ebbe47"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="a10b3469-59cd-4b70-908c-304ece7bccae"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="86f468eb-7e5e-480d-9c59-5e35e9aa21c1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="bf6cc086-ceb0-47ca-9f9a-90700364351b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="37584b3d-8d2c-4132-b7f8-4fd8daf3e6d7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="15d2c8d8-7b6f-4f13-aad3-b8eda88083ae"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="a887a884-f18f-4f34-8bbe-fc016372e1f0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="5a4bcdff-58ea-4692-813e-e3a873fa6906"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="3e5fd6db-f986-45c3-87bb-bcb2f77cb742"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="afb0bc43-3488-47da-9cb0-fe36eae4ebde"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="a8e40353-3f0a-436a-b0a1-b87bcfdcd7e6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="0e3a534e-96e4-4868-bb02-7965976c7b37"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="f1f67fcd-d47c-454c-bd28-f16b1ada7d3b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="5ba75762-3c23-41fc-bdc0-0ec156761c7a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="40e6f789-e8e4-4973-bf2f-9c6a3257ffbe"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_reassign" id="e64659c8-95ee-48f7-a65b-a27b942a21a7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_reassign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <!--You have a CHOICE of the next 2 items at this level-->\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <!--Optional:-->\r
            <itp:params>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="z_transaction_code">sd_req_reassign</itp:param>\r
               <itp:param name="z_assignment_group"/>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <!--1 or more repetitions:-->\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>\r
               <itp:param name="z_state">Closed Cancelled</itp:param>\r
               <itp:param name="z_work_notes">This is work_notes for sd_req_reassign</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_reassign" id="6553df04-cd14-4431-a01e-b4403668a90e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_reassign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_reassign" id="db574118-93cf-4c20-ad0f-6357c4a12058"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_reassign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_reassign" id="363a6918-7a44-489d-8334-0c9d108b14ae"><con:settings/><con:config><script>log.info "sd_req_reassign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015479</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016482</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>ede65d9d-d4c5-403f-b649-b32d1334db11</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016909</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SYN[SNOW]SD_REQ_CANCELLED" searchProperties="true" id="15ee539e-68d5-4ade-8d0e-dbe7f737e41e" disabled="true"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="63f96485-ae47-4bba-8f3a-7f70cd8c7f9c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="1f010be2-a4b2-4717-a5c4-dd0e7f4ca239"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="4a345fef-6272-44a2-bc1a-191adab7ae30"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="bf6cc086-ceb0-47ca-9f9a-90700364351b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="37584b3d-8d2c-4132-b7f8-4fd8daf3e6d7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="3608e57d-bf7d-4bc3-ba9a-cf5362aa6e70"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="afc24554-c1dc-4858-96f2-8de15f6d93ae"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="2f101ec7-3af7-40a7-a9a3-00b9391a2240"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="17c0f7b6-30f9-46b3-a801-71157e8806b9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="9af84b96-c640-4464-a01f-b3610f27535e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="56e3d7ba-04f4-414e-99e1-847e38044b8a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="47236db3-17e5-4b12-a081-e0a8cd84c461"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="6e32ad46-e8ea-44d1-b615-dd9545f52ebb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="0279ae12-c79e-4e79-96ec-97e5b6c87c73"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="d1994b94-a119-4b44-9354-b53feabfa7a6"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_cancelled" id="3821cfa8-2992-4d2c-a2fb-27f91485f25a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_cancelled" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <itp:executeProcess>\r
         <itp:flow>\r
            <itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>\r
            <itp:action>start</itp:action>\r
            <itp:auth>\r
               <itp:token/>\r
               <itp:user>pamadmin</itp:user>\r
               <itp:password>pamadmin</itp:password>\r
            </itp:auth>\r
            <itp:params>\r
               <!--pam parameters-->\r
               <itp:param name="z_transaction_code">sd_req_cancelled</itp:param>\r
               <itp:param name="sender">CSC ServiceNow</itp:param>\r
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>\r
               <itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>\r
               <itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>\r
               <itp:param name="z_work_notes">This is work_notes for sd_req_cancelled</itp:param>\r
               <itp:param name="z_state">Closed Incomplete</itp:param>\r
            </itp:params>\r
         </itp:flow>\r
      </itp:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_cancelled" id="b6bc06c0-7e84-47b5-8c67-f87225ffd1cd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_cancelled'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_cancelled" id="b3c44269-9d81-46d1-9226-fc8fcdbfb264"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_cancelled#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_cancelled" id="1ced9a42-e248-4d1f-b226-3db65704fed8"><con:settings/><con:config><script>log.info "sd_req_cancelled has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015480</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016483</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>c71caac8-6657-49c3-96ae-2d452d4a807c</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016911</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SYN[SNOW]SD_REQ_UPDATE" searchProperties="true" id="0d031a89-0871-4f0f-8f6d-adb4585d7b22" disabled="true"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="7560ea72-c5d1-4d4c-9b79-2d66b7ed6cbd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="1d3a0d3f-dca6-49eb-aa69-c79ddd23ef33"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="88ab6bdc-2f60-4771-8727-745e1c500966"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="bf6cc086-ceb0-47ca-9f9a-90700364351b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="37584b3d-8d2c-4132-b7f8-4fd8daf3e6d7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="54629d89-ffa1-498d-8ee1-e2d1264a4de1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="cb530715-2ea4-4772-9b56-7ccbb14e0399"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="c4de977b-261e-40ff-abe0-caeb4f9c63a3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="737ff89d-10a6-4589-a3a9-601d92d1d559"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Request/CSC ServiceNow</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender">CSC ServiceNow</csc:param>
					<csc:param name="file_base64"/>
					<csc:param name="file_name"/>
					<csc:param name="file_type"/>
					<!--pam parameters-->
					<csc:param name="z_transaction_code">sd_req_assign</csc:param>
					<csc:param name="z_assignment_group"></csc:param>
					<csc:param name="z_company">CSC Internal</csc:param>
					<csc:param name="z_configuration_item">VAN_change_3</csc:param>
					<csc:param name="z_description">This is description for sd_req_assign</csc:param>
					<csc:param name="z_email"></csc:param>
					<csc:param name="z_external_number"></csc:param>
					<csc:param name="z_external_party"></csc:param>
					<csc:param name="z_first_name"></csc:param>
					<csc:param name="z_last_name"></csc:param>
					<csc:param name="z_location"></csc:param>
					<csc:param name="z_number">${#TestCase#TASK_ID}</csc:param>
					<csc:param name="z_request_item">VAN_change_3</csc:param>
					<csc:param name="z_quantity"></csc:param>
					<csc:param name="z_requested_for_date"></csc:param>
					<csc:param name="z_requested_for">pamadmin</csc:param>
					<csc:param name="z_short_description">This is short description for sd_req_assign</csc:param>
					<csc:param name="z_state">Closed Incomplete</csc:param>
					<csc:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</csc:param>
					<csc:param name="z_work_notes">This is work note for sd_req_assign</csc:param>
				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign" id="ea46379c-a3a9-4e7e-b936-025b70376042"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign" id="7a365f67-b072-4774-a5eb-0c1207c9b70d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="8da1ee64-ca76-47b0-88e0-6aa1f46e94d9"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_req_accept" id="0774a9bf-7862-4a19-825b-ff9fb4edc998"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'pro_req_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_req_accept" id="ce3590ff-c63f-4ecf-852b-fde32f015a8b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_req_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_req_accept" id="e10684ba-1e84-4ff3-b657-8a54b7dc4ba9"><con:settings/><con:config><script>log.info "pro_req_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_update" id="5d6d5365-38d2-4418-a92b-f0bd62dabf6d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="573efd31-ba0e-4331-8772-3e024b8b1dc6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Request/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--Routing parameters-->
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="module">Request</itp:param>
					<itp:param name="path">/Framwork/Processes/CSC ServiceNow to Standard/</itp:param>
					<itp:param name="z_transaction_code">sd_req_update</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_assignment_group">AT&amp;T - Cyber &amp; Firewall Offshore</itp:param>	
					<!-- mandatory -->
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_external_number">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_state">Open</itp:param>
					<!--  -->
					<!-- lookup -->
					<itp:param name="z_priority">1 - Critical</itp:param>
					<!--  -->
					<!-- non-mandatory -->
					<itp:param name="z_configuration_item">configuration_item</itp:param>
					<itp:param name="z_description">This is description for sd_req_update</itp:param>
					<itp:param name="z_requested_for">z_requested_for</itp:param>
					<itp:param name="z_short_description">This is short_description for sd_req_update</itp:param>			
					<itp:param name="z_work_notes">This is work_notes for sd_req_update</itp:param>					

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="529ee3b8-ebef-4219-a913-0ec58c3eb6ab"/><con:assertion type="XPath Match" name="XPath z_number" id="8b273de4-d848-4560-8aeb-9e06ae192074"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK**</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_update" id="f4a37e81-7ed4-4483-988b-69f55a67048a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:REQ  AND [request].request_type = 'sd_req_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_update" id="a56f4136-00e9-481c-acac-04e1f74803b1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_update" id="5fcc74ff-26e4-446e-a51a-7106035690c0"><con:settings/><con:config><script>log.info "sd_req_update has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0015478</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0016481</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>f1d3de68-b301-4798-afc5-dd8a8ac729df</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0016908</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN_ADAPTER]SD_REQ_ASSIGN" searchProperties="true" id="6a0db7e0-99d8-4f30-8d70-face5a8520e5" disabled="true"><con:settings/><con:testStep type="request" name="Insert - Create_REQ_SNOW" id="a64e361e-8555-4796-8d54-0e117a9cea3b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="Insert - Create_REQ_SNOW" id="36230c93-12e2-4eff-b452-91016a009ddd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_request_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_request_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_assignment_group></u_assignment_group>
         <!--Optional:-->
         <u_catalog_item_code>38fe37066f5b2d00c5afbd5dbb3ee4d0</u_catalog_item_code>
         <!--Optional:-->
         <u_configuration_item></u_configuration_item>
         <!--Optional:-->
         <u_external_number>Scenario1_27</u_external_number>
         <!--Optional:-->
         <u_external_party>SRM</u_external_party>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_location>100 Ave Of The Americas</u_location>
         <!--Optional:-->
         <u_priority></u_priority>
         <!--Optional:-->
         <u_quantity>1</u_quantity>
         <!--Optional:-->
         <u_request_item></u_request_item>
         <!--Optional:-->
         <u_requested_for>dlayne@csc.com</u_requested_for>
         <!--Optional:-->
         <u_requested_for_date>${=new Date().format("yyyy-MM-dd HH:mm:ss")}</u_requested_for_date>
         <!--Optional:-->
         <u_short_description>This is Description for SD_REQ_ASSIGN</u_short_description>
         <!--Optional:-->
         <u_task_description>This is task description for SD_REQ_ASSIGN</u_task_description>
         <!--Optional:-->
         <u_transaction_code>SD_REQ_ASSIGN</u_transaction_code>
         <!--Optional:-->
         <u_transaction_type>Inbound</u_transaction_type>
         <!--Optional:-->
         <u_work_notes>This is work note for SD_REQ_ASSIGN</u_work_notes>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72cb322e-8022-4b9e-abd2-a69e30d5d9f9"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_1" id="6dd99423-2da2-4b61-8bf1-eec1189725bc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Insert - Create_REQ_SNOW#Response");

def reqId = holder.getNodeValue("//ns1:display_value");
log.info "id: " + reqId

testRunner.testCase.setPropertyValue("REQ_ID", reqId)</script></con:config></con:testStep><con:testStep type="request" name="Get - Request_Item" id="44c88e54-ec6a-4e26-aad4-d3d3e8ad77eb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="Get - Request_Item" id="f5cae175-b657-4a22-972a-78f80ba2f85f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_req_item_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_change_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:getRecords>
        <request>${#TestCase#REQ_ID}</request>
      </u:getRecords>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="e4e9e5ce-b380-41d3-83ae-de2e43fc53f5"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_2" id="ea6a74fa-1a2e-413c-95cc-93578b0ec25f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("Get - Request_Item#Response");

def itemId = holder.getNodeValue("//getRecordsResponse/getRecordsResult/number");
log.info "id: " + itemId

testRunner.testCase.setPropertyValue("ITEM_ID", itemId)</script></con:config></con:testStep><con:testStep type="request" name="insert - Request_Task" id="3fc70e83-8609-498d-82c4-ee8c3aef1139"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>getRecords</con:operation><con:request name="insert - Request_Task" id="2ad837c8-6573-44d3-bf3b-10c45ff6a9e5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/sc_task_list.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sc="http://www.service-now.com/sc_task">
   <soapenv:Header/>
   <soapenv:Body>
      <sc:insert>        
         <request_item>${#TestCase#ITEM_ID}</request_item>         
      </sc:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="040c94d0-56c7-4b93-b965-6b6f49ac4a08"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_3" id="fb125e94-892c-40af-b984-6839efbd7b28"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Request_Task#Response");

def taskId = holder.getNodeValue("//insertResponse/number");
log.info "id: " + taskId

testRunner.testCase.setPropertyValue("TASK_ID", taskId)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_req_assign" id="d51ab565-18f1-40cb-82d0-5d57a1293722"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_req_assign" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_req_assign</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration405</itp:param>
					
					<itp:param name="z_work_notes">This is work notes for sd_req_assign</itp:param>
					<itp:param name="z_number">${#TestCase#TASK_ID}</itp:param>
					<itp:param name="z_catalog_item_code">38fe37066f5b2d00c5afbd5dbb3ee4d0</itp:param>
					<itp:param name="z_company">CSC</itp:param>
					<itp:param name="z_quantity">1</itp:param>
					<itp:param name="z_external_party">CSC</itp:param>
					<itp:param name="z_additional_information">2 - High</itp:param>

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Received_Stage" id="ab4f4cda-fb24-4999-9b96-d976fea9d6b8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='received' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="7d6d3039-1179-45d0-b909-90f196e203fa"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Received_Stage" id="595173c2-8a99-4026-8b92-d3303d2f0bb4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Prepared_Stage" id="74ef7e1d-23ca-4ab3-bf6b-14d22125820e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8c803ee2-c4cc-4406-88ee-927caf88d648"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Prepared_Stage" id="17ea759f-60e6-4ae8-8c44-3643a5a11222"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Sent_Stage" id="b89b324d-573a-4610-b79a-907192ba6040"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="21b98c1d-8a0c-4dac-8338-edc7eb150b8e"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Sent_Stage" id="c01b94f9-e617-4ad8-bc92-e0c1897df044"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def req = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && req == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	req = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (req)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", req)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_req_assign_Replied_Stage" id="39b6d382-2128-40de-a0b6-e4a675ea2e0a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:REQ and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_req_assign'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="f44099f2-b12d-40dc-a2bd-bde999b33149"/><con:properties><con:property><con:name>REQ</con:name><con:value>${#TestCase#TASK_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_req_assign_Replied_Stage" id="cf95493e-60f8-4368-8d2f-2712f61a3ee0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_req_assign_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_req_assign" id="296cf8eb-649c-4a84-ae48-8366d191510a"><con:settings/><con:config><script>log.info "sd_req_assign has ran successfully"</script></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>REQ_ID</con:name><con:value>REQ0014631</con:value></con:property><con:property><con:name>TASK_ID</con:name><con:value>TASK0015399</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>b86c8654-c2ca-4efb-a054-af0a77ca7633</con:value></con:property><con:property><con:name>ITEM_ID</con:name><con:value>RITM0015990</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="CI" id="63133671-1468-415e-bb20-69b63691fba2" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[3rd] SD_CI_CREATE" searchProperties="true" id="8ba8a568-a4d6-4a52-bcc4-0306853ff5b2" disabled="true"><con:settings/><con:testStep type="request" name="[3rd]sd_ci_create_Successful" id="2cb89e65-241d-4619-95c8-6d02922bb32a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <!--pam parameters-->\r
               <csc:param name="request_type">sd_ci_create</csc:param>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="file_base64"/>\r
               <csc:param name="file_name"/>\r
               <csc:param name="file_type"/>\r
               <!--standard request adapter parameters-->\r
               <csc:param name="z_asset_tag">ASSTAG1VINH95</csc:param>\r
               <csc:param name="z_class">Business Service</csc:param>\r
               <csc:param name="z_location">Buffalo</csc:param>\r
               <csc:param name="z_manufacturer_name">Cisco</csc:param>\r
               <csc:param name="z_model_id">1600 Series Router</csc:param>\r
               <csc:param name="z_name">LLUU3_TEST_1_VINH0095</csc:param>\r
               <csc:param name="z_serial_number">SN:1111_VINH0095</csc:param>\r
               <csc:param name="z_status">In Stock</csc:param>\r
               <csc:param name="z_support_group">Approval Test1</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="[3rd]sd_ci_create_Fail_Missing_RequireField" id="19a6a087-d7d3-4194-b32d-4689ee089f9f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="[3rd]sd_ci_create_Fail_Missing_RequireField" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">sd_ci_create</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
					<csc:param name="file_base64"></csc:param>
					<csc:param name="file_name"></csc:param>
					<csc:param name="file_type"></csc:param>
					<!--standard incident adapter parameters-->

					<csc:param name="z_agent_software_version"></csc:param>	 
					<csc:param name="z_amps"></csc:param>	 
					<csc:param name="z_approval_group"></csc:param>	 
					<csc:param name="z_asset"></csc:param>	 
					<csc:param name="z_asset_tag">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_name"></csc:param>
					<csc:param name="z_status">Absent</csc:param>
					<csc:param name="z_company">Aon</csc:param>
					<csc:param name="z_class">Database</csc:param>
					<csc:param name="z_type">MySQL</csc:param>
					<csc:param name="z_manufacturer_name">2020 Insight</csc:param>
					<csc:param name="z_serial_number">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_business_criticality">not critical</csc:param>
					<csc:param name="z_match_type">Serial</csc:param>
					<csc:param name="z_model_id">1600 Series Router</csc:param>
					<csc:param name="z_supported">Yes</csc:param>
					<csc:param name="z_used_for">QA</csc:param>
					<csc:param name="z_operational_status">Operational</csc:param>
					<csc:param name="z_assigned_to"></csc:param>	 
					<csc:param name="z_attached_devices"></csc:param>	 
					<csc:param name="z_attached_to"></csc:param>	 
					<csc:param name="z_attributes"></csc:param>	 
					<csc:param name="z_audible_alarm_status	"></csc:param> 
					<csc:param name="z_battery_current"></csc:param>	 
					<csc:param name="z_battery_last_replaced"></csc:param>	 
					<csc:param name="z_battery_status"></csc:param>	 
					<csc:param name="z_battery_temperature"></csc:param>	 
					<csc:param name="z_battery_voltage"></csc:param>	 
					<csc:param name="z_bypass_frequency"></csc:param>	 
					<csc:param name="z_can_hub_ip"></csc:param>	 
					<csc:param name="z_can_partition_vlans"></csc:param>	 
					<csc:param name="z_can_print"></csc:param>	 
					<csc:param name="z_can_route_ip"></csc:param>	 
					<csc:param name="z_can_switch_ip"></csc:param>	 
					<csc:param name="z_category"></csc:param> 
					<csc:param name="z_cd"></csc:param>	 
					<csc:param name="z_cd_speed"></csc:param>	 
					<csc:param name="z_channels"></csc:param>	 
					<csc:param name="z_chassis_type"></csc:param>	 
					<csc:param name="z_checked_in"></csc:param>	 
					<csc:param name="z_checked_out"></csc:param>	 
					<csc:param name="z_child_class"></csc:param>	 
					<csc:param name="z_child_config_item"></csc:param>	 
					<csc:param name="z_child_name"></csc:param>	 
					<csc:param name="z_class_label"></csc:param>	 
					<csc:param name="z_classification"></csc:param>	 
					<csc:param name="z_classifier"></csc:param>	 
					<csc:param name="z_cluster_status"></csc:param>	 
					<csc:param name="z_color"></csc:param>	 
					<csc:param name="z_colors"></csc:param>	 
					<csc:param name="z_comments"></csc:param>	 
					<csc:param name="z_computer"></csc:param>	 
					<csc:param name="z_connection_strength"></csc:param>	 
					<csc:param name="z_cooling_watts"></csc:param>	 
					<csc:param name="z_correlation_id"></csc:param>	 
					<csc:param name="z_cost"></csc:param>	 
					<csc:param name="z_cost_center"></csc:param>	 
					<csc:param name="z_cost_currency"></csc:param>	 
					<csc:param name="z_cpu_core_count"></csc:param>	 
					<csc:param name="z_cpu_core_thread"></csc:param>	 
					<csc:param name="z_cpu_count"></csc:param>	 
					<csc:param name="z_cpu_manufacturer"></csc:param>	 
					<csc:param name="z_cpu_name"></csc:param>	 
					<csc:param name="z_cpu_speed"></csc:param>	 
					<csc:param name="z_cpu_type"></csc:param> 
					<csc:param name="z_current_load_state"></csc:param>	 
					<csc:param name="z_database_server"></csc:param>	 
					<csc:param name="z_date_of_manufacture"></csc:param>	 
					<csc:param name="z_default_gateway"></csc:param>	 
					<csc:param name="z_department"></csc:param>	 
					<csc:param name="z_description"></csc:param>	 
					<csc:param name="z_device_type"></csc:param>	 
					<csc:param name="z_disaster_backup_server"></csc:param>	 
					<csc:param name="z_discovery_source"></csc:param>	 
					<csc:param name="z_disk_space"></csc:param>	 
					<csc:param name="z_number_of_drives"></csc:param>	 
					<csc:param name="z_dns_domain"></csc:param>	 
					<csc:param name="z_dns_host_name"></csc:param>	 
					<csc:param name="z_domain"></csc:param>	 
					<csc:param name="z_due"></csc:param>	 
					<csc:param name="z_due_in"></csc:param>	 
					<csc:param name="z_estimated_bandwidth"></csc:param>	 
					<csc:param name="z_estimated_charge_remaining"></csc:param>	 
					<csc:param name="z_estimated_minutes_remaining"></csc:param>	 
					<csc:param name="z_fault_count"></csc:param>	 
					<csc:param name="z_firewall_status"></csc:param>	 
					<csc:param name="z_firmware_manufacturer"></csc:param>	 
					<csc:param name="z_firmware_version"></csc:param>	 
					<csc:param name="z_first_discovered"></csc:param>	 
					<csc:param name="z_floppy"></csc:param>	 
					<csc:param name="z_footprint"></csc:param>	 
					<csc:param name="z_form_factor"></csc:param>	 
					<csc:param name="z_fully_qualified_domian_name"></csc:param>	 
					<csc:param name="z_gl_account"></csc:param>	 
					<csc:param name="z_hardware_version"></csc:param>	 
					<csc:param name="z_high_voltage_transfer_point"></csc:param>	 
					<csc:param name="z_horizontal_resolution"></csc:param>	 
					<csc:param name="z_host_name"></csc:param>	 
					<csc:param name="z_input_line_bads"></csc:param>	 
					<csc:param name="z_install_count"></csc:param>	 
					<csc:param name="z_installed"></csc:param>
					<csc:param name="z_invoice_number"></csc:param>	 
					<csc:param name="z_ip_address"></csc:param>	 
					<csc:param name="z_is_virtual"></csc:param>	 
					<csc:param name="z_justification"></csc:param>	 
					<csc:param name="z_kernel_release"></csc:param>	 
					<csc:param name="z_key"></csc:param>	 
					<csc:param name="z_lease_contract"></csc:param>	 
					<csc:param name="z_licence_count"></csc:param>	 
					<csc:param name="z_licences_available"></csc:param>	 
					<csc:param name="z_location">100 MAIN ST Charleston South Carolina</csc:param>
					<csc:param name="z_low_battery_threshold"></csc:param>	 
					<csc:param name="z_low_voltage_transfer_point"></csc:param>	 
					<csc:param name="z_mac_address"></csc:param>	 
					<csc:param name="z_maintenace_shedule"></csc:param>	 
					<csc:param name="z_managed_by"></csc:param>	 
					<csc:param name="z_managed_domain"></csc:param>	 
					<csc:param name="z_master_state"></csc:param>	 
					<csc:param name="z_model_number">M003</csc:param>
					<csc:param name="z_monitor">false</csc:param>
					<csc:param name="z_monitored"></csc:param>	 
					<csc:param name="z_most_recent_discovery"></csc:param>	 
					<csc:param name="z_msft_sms_productid"></csc:param>	 
					<csc:param name="z_normal_input_frequency"></csc:param>	 
					<csc:param name="z_normal_input_voltage"></csc:param>	 
					<csc:param name="z_normal_ouput_voltage	"></csc:param> 
					<csc:param name="z_normal_output_frequency"></csc:param>	 
					<csc:param name="z_number_of_outlets"></csc:param>	 
					<csc:param name="z_operating_system"></csc:param> 
					<csc:param name="z_order_received"></csc:param>	 
					<csc:param name="z_ordered"></csc:param>	 
					<csc:param name="z_os_address_width"></csc:param>	 
					<csc:param name="z_os_domain"></csc:param>	 
					<csc:param name="z_os_service_pack"></csc:param>	 
					<csc:param name="z_os_version"></csc:param>	 
					<csc:param name="z_output_frequency"></csc:param> 
					<csc:param name="z_output_source"></csc:param>	 
					<csc:param name="z_owned_by"></csc:param>	 
					<csc:param name="z_package_name"></csc:param>	 
					<csc:param name="z_pages_per_minute"></csc:param>	 
					<csc:param name="z_paper"></csc:param>	 
					<csc:param name="z_parent_asset"></csc:param>	 
					<csc:param name="z_parent_class"></csc:param>	 
					<csc:param name="z_parent_config_item"></csc:param>	 
					<csc:param name="z_parent_name"></csc:param>	 
					<csc:param name="z_part_of"></csc:param>	 
					<csc:param name="z_pcl"></csc:param>	 
					<csc:param name="z_phone_number"></csc:param>	 
					<csc:param name="z_physical_interface_count"></csc:param>	 
					<csc:param name="z_pid"></csc:param>	 
					<csc:param name="z_po_number"></csc:param>	 
					<csc:param name="z_port"></csc:param>	 
					<csc:param name="z_ports"></csc:param>	 
					<csc:param name="z_postscript"></csc:param>	 
					<csc:param name="z_power_consumption"></csc:param>	 
					<csc:param name="z_print_type"></csc:param>	 
					<csc:param name="z_provided_by"></csc:param>	 
					<csc:param name="z_provider_child_sys_id"></csc:param>	 
					<csc:param name="z_provider_parent_sys_id"></csc:param>	 
					<csc:param name="z_provider_sys_id"></csc:param>	 
					<csc:param name="z_purchased"></csc:param>	 
					<csc:param name="z_rack_units"></csc:param>	 
					<csc:param name="z_rack_units_in_use"></csc:param>	 
					<csc:param name="z_raid_type"></csc:param>	 
					<csc:param name="z_ram"></csc:param>	 
					<csc:param name="z_range"></csc:param>	 
					<csc:param name="z_rated_output_true_power"></csc:param>	 
					<csc:param name="z_rated_output_va"></csc:param>	 
					<csc:param name="z_requires_verification"></csc:param>	 
					<csc:param name="z_resolution_units"></csc:param>	 
					<csc:param name="z_running_process"></csc:param>	 
					<csc:param name="z_scheduled_retirement"></csc:param>	 
					<csc:param name="z_seconds_on_battery"></csc:param>	 
					<csc:param name="z_seconds_on_battery_desired"></csc:param>	 
					<csc:param name="z_serial_number_desired"></csc:param>	 
					<csc:param name="z_shared"></csc:param>	 
					<csc:param name="z_skip_sync"></csc:param>	 
					<csc:param name="z_sla"></csc:param>	 
					<csc:param name="z_start_date"></csc:param>	 
					<csc:param name="z_sub_category"></csc:param>	 
					<csc:param name="z_sub_status"></csc:param>	 
					<csc:param name="z_support_group">Approval Test1</csc:param>
					<csc:param name="z_supported_by"></csc:param>	 
					<csc:param name="z_tcp_ports"></csc:param>	 
					<csc:param name="z_total_capacity"></csc:param>	 	 
					<csc:param name="z_updates"></csc:param>	 
					<csc:param name="z_ups_software_version"></csc:param>	 
					<csc:param name="z_use_count"></csc:param>	 
					<csc:param name="z_use_count_units"></csc:param>	  
					<csc:param name="z_vendor"></csc:param>	 
					<csc:param name="z_version_number"></csc:param>	 
					<csc:param name="z_vertical_resolution"></csc:param>	 
					<csc:param name="z_warranty_contract"></csc:param>	 

				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="1b254f79-010a-43cd-8b83-dd5d25500516" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="53ad92b2-1167-4f59-9054-02a124e7952f" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="7962b84c-cbbf-4b76-b758-708786b9dd6e" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="8f7f20d5-2b9a-45f6-b41e-504ef20debc8" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="a00a2e5d-9de4-4b62-9c45-4c52cd5992f1" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="6f398a13-289a-4e45-99bd-0471e50777f5" disabled="true"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="2117d23f-d38c-42ef-aee1-76a014fda69b" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="97998121-423e-4109-a7a1-16a0c52f886a" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="3db16c99-4719-4537-9c68-b48296a2f9fa" disabled="true"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="QCTEST[3rd]sd_ci_create_Successful" id="67544773-d708-4563-b4cf-1dec4b49c36b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS0212001</csc:param>
              <csc:param name="z_provider_sys_id">VINHCaheoASSTAG_WS0212001</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Network Gear</csc:param>
               <csc:param name="z_location">Hangzhou</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset0212001</csc:param>
               <csc:param name="z_serial_number">SN:15860212001</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="COmpanyQCTEST[3rd]sd_ci_create_Successful" id="434f1400-58be-49da-a6b6-6b28948bc937"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="COmpanyQCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://CSCPCOMDC101DE.emea.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <!--pam parameters-->\r
               <csc:param name="request_type">sd_ci_create</csc:param>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="file_base64"/>\r
               <csc:param name="file_name"/>\r
               <csc:param name="file_type"/>\r
               <!--standard request adapter parameters-->\r
               <csc:param name="z_asset_tag">CaheoASSTAG_WS081210002</csc:param>\r
                <csc:param name="z_provider_sys_id">VINHCaheoASSTAG_WS081210002</csc:param>
               <csc:param name="z_class">Web Server</csc:param>\r
               <csc:param name="z_location">Hangzhou</csc:param>\r
               <csc:param name="z_manufacturer_name">Apple</csc:param>\r
               <csc:param name="z_model_id">MacIntosh Quadra 900</csc:param>\r
               <csc:param name="z_name">caheo_test_asset081210002</csc:param>\r
               <csc:param name="z_serial_number">SN:1586081210002</csc:param>\r
               <csc:param name="z_status">Defective</csc:param>\r
               <csc:param name="z_support_group">Application Support - TEST</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CLASS_NETWORK_QCTEST[3rd]sd_ci_create_Successful" id="33966e82-5f7f-41ad-8b81-ebec80712900"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="CLASS_NETWORK_QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS001</csc:param>
              <csc:param name="z_provider_sys_id">CaheoASSTAG_WS001</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Network Gear</csc:param>
               <csc:param name="z_location">Hangzhou</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset001</csc:param>
               <csc:param name="z_serial_number">SN:1586001</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CLASS_Computer_QCTEST[3rd]sd_ci_create_Successful" id="dffc488d-c851-4b1f-9f9d-cc9c50098dee"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="CLASS_Computer_QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS10120008</csc:param>
              <csc:param name="z_provider_sys_id">External_CaheoASSTAG_WS10120008</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Computer</csc:param>
               <csc:param name="z_location">Hangzhouaa</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset10120008</csc:param>
               <csc:param name="z_serial_number">SN:158610120008</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150908022800</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150908022800</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSP] SD_CI_CREATE" searchProperties="true" id="d5fbbc9b-15fe-46a6-acdf-2610912155c3" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="e4cd35bf-5d0c-4fa3-963a-cd59e925e200"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#NAME}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="c8127335-3c2e-45f7-a797-cef04719dcf9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="50a52178-0ea6-49e2-bb56-acd0b2b63071"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="f642801b-9d9c-462a-ba91-72016f2f739c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="af819fb4-b2e6-4f7c-a5f7-8962362da40c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="c5c284e9-2c34-4387-b107-b56c3a88f6e0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="744acafa-40d5-4daa-ade7-4ebf0c2da56b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="6a265d41-7935-4d1f-b0c8-698357e0bcbb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="9d8160df-d417-4f9a-b98a-bde205b747da"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="b6f17ad0-c856-498b-b860-07181e54bb27"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150908022800</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150908022800</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSP] SD_CI_UPDATE" searchProperties="true" id="08963a22-e1a8-4010-b4f0-ccdea4c82ddf" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="a77f01e6-7370-4b89-9a7d-6ce7237c4c2b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4396dcca-eb71-480b-99f6-9f0f83c84217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#NAME}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b1070069-9a90-46dd-ab60-f6a42f89512a"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="8de20d0d-0818-440e-8e93-2d2975962dbf"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="76709f49-9454-4ab4-9aed-89701b182a26"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6943344d-c790-4780-9d8d-691f8049ed6f"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="d939bb81-5f6d-4561-9f79-c8dd84ff89ec"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="0eb0e3ba-7c24-4983-8c36-94a332857bce"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b6a51a43-2359-4666-9c98-d2bd16ff4b53"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="91773947-c1f9-4917-9947-c7e0debbf13e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="724f0b8c-a638-4882-97b4-a72e00bded53"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ddaff1fa-9aed-45dc-b67b-a413d1c6c898"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="0843d1f3-8594-4026-ae65-ad278d19cc7d"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="1ddb5fa2-745f-4e2c-80cc-f6a0e0b76b42"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8e68340a-dff4-40a9-8a04-579c69f011c4"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="b009fc87-cd3b-4ee3-9833-c81d3c05b0a2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="d0c9eec3-66db-4922-b625-879363b850a5"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept_Replied_Stage" id="a6283b57-3522-41c1-a443-b2efd3bfda94"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept_Replied_Stage" id="90b153b1-89ef-46a5-aab2-c9bb599ab26e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_update" id="3acf5682-e3ec-440a-a3b8-b78bf5f0d152"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ab52a23a-722e-477e-8dce-7158cac40480"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_ci_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration151</itp:param>
					 <!--Standard CI Adapter parameters-->

					<itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
					<itp:param name="z_business_criticality">most critical</itp:param>
					<itp:param name="z_class">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
					<itp:param name="z_location">Groote Eylandt</itp:param>
					<itp:param name="z_manufacturer_name">Wacom</itp:param>
					<itp:param name="z_match_type">BiosAsset</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>
					<itp:param name="z_operational_status">Repair in Progress</itp:param>
					<itp:param name="z_os_domain">Window10</itp:param>
					<itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>
					<itp:param name="z_status">In Stock</itp:param>
					<itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
					<itp:param name="z_supported">No</itp:param>
					<itp:param name="z_type">Mouse</itp:param>
					<itp:param name="z_used_for">Staging</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_users_supported">[null]</itp:param>



				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e4f4977a-8560-476c-b073-9f1c18d51963"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="df7352e5-59b4-4d92-9406-68403a31b323"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Received_Stage" id="3c78ad01-e76a-486e-978d-b0f4d73a4d71"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d5d8efd7-3440-4b01-a812-005e2c9975c7"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Received_Stage" id="44c32d9f-4e16-4b99-b34a-2228cb5f7647"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Prepared_Stage" id="56635909-1f58-4ac5-9467-31c7ff18f487"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="749c708c-99ee-4ec0-af79-7be10ada8e22"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Prepared_Stage" id="7abf212f-fec3-47fc-9609-8e4c40a5b077"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Sent_Stage" id="fd77aed4-a3cf-4691-91b4-03f5419b9ae9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3199153e-6524-4639-8bef-96716964ce71"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Sent_Stage" id="6a0bccd5-c8c2-4a1d-bcd5-043f69a948dd"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Replied_Stage" id="2f93ce77-cdbf-4558-ba56-6efd9689fd02"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4ae2bb08-fde2-4ec1-a983-223ba1a664c9"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Replied_Stage" id="43593e96-39db-41de-8af9-7aedf6128ea3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_update" id="ddc7fdec-f370-4063-a328-8aabd96a6997"><con:settings/><con:config><script>log.info "sd_ci_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150916073823</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150916073824</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1e5503556fe2ca001a72be4dbb3ee499</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSP] SD_CI_RETIRE" searchProperties="true" id="c10cc9c1-a17c-45f7-8a53-65a7cf813409" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="c6883357-2403-436f-96d6-ecfd86a8f948"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4396dcca-eb71-480b-99f6-9f0f83c84217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#NAME}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b1070069-9a90-46dd-ab60-f6a42f89512a"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="8de20d0d-0818-440e-8e93-2d2975962dbf"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="65be75bf-59c9-427f-841c-0981667a9cb0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6943344d-c790-4780-9d8d-691f8049ed6f"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="2a7b5481-1fa5-4e73-ba4c-405b983747fb"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="53c767da-092d-4ac6-9577-831633f9254d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b6a51a43-2359-4666-9c98-d2bd16ff4b53"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="ce3ab1b5-d4ee-4ec5-a211-3304842658d8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="e3228e08-26a7-4a17-8df3-0eef04ae5423"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ddaff1fa-9aed-45dc-b67b-a413d1c6c898"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="842b88d7-524a-42da-80d1-3389eacaa112"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="bbe0f829-5485-44ac-ae03-4232bf7c1156"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8e68340a-dff4-40a9-8a04-579c69f011c4"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="b8e811b4-51f0-44bf-b3e9-a2f95919a093"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="ff0d49ed-921c-467f-a96e-bf28095d5034"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept_Replied_Stage" id="4627cb53-1bb4-46eb-b27a-4f91ff7506b9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept_Replied_Stage" id="531b0dae-bd0f-4a53-9157-7947c52555d3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_retire" id="c868b7b1-2e02-4724-8300-e55551e3e9ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_retire" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ab52a23a-722e-477e-8dce-7158cac40480"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_retire</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration151</itp:param>
               <!--Standard CI Adapter parameters-->
              
              
               <itp:param name="z_class">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
              
              
              
               <itp:param name="z_name">${#TestCase#NAME}</itp:param>
              
              
			<!--<itp:param name="z_provider_sys_id">${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</itp:param>-->

			<itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID}</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e4f4977a-8560-476c-b073-9f1c18d51963"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Received_Stage" id="4e14392a-eb3f-4edb-b16c-da23ac1a0831"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d5d8efd7-3440-4b01-a812-005e2c9975c7"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Received_Stage" id="f65b5aec-c1c4-4701-b521-c416177bf3a4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Prepared_Stage" id="118aef13-9052-4975-ab61-1280a2df4db3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="749c708c-99ee-4ec0-af79-7be10ada8e22"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Prepared_Stage" id="6c485f01-8e05-4f64-8b44-2d28edb82b41"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Sent_Stage" id="04ce6942-3dac-450e-8955-9a2260fab9d0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3199153e-6524-4639-8bef-96716964ce71"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Sent_Stage" id="148b1e5a-c1fe-44c7-874f-12841f6f978a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Replied_Stage" id="a502a2b0-858b-4129-bce1-0e93af73b330"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4ae2bb08-fde2-4ec1-a983-223ba1a664c9"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Replied_Stage" id="3491808e-e725-4404-a779-8c588ba978f2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_retire" id="71322c15-eee5-46c2-aa70-2ad16332bc25"><con:settings/><con:config><script>log.info "sd_ci_retire has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150917220425</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150917220425</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>001557316f6e4e00c5afbd5dbb3ee44d</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSP] SD_CI_REL_CREATE" searchProperties="true" id="d2026068-c381-442f-ad0f-bebfcd7917b8" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_ci_create1" id="c8a4ccef-d4b1-4c52-ab77-8ff05b7d97ef"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#P_CI}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#P_ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Received_Stage" id="f84bc1d8-241f-48fd-b2f7-923adf43da6d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Received_Stage" id="09ac7a46-8420-4b97-930a-f34b7b409e2c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Prepared_Stage" id="0d72f9a9-4cc7-40bd-b712-f4abb8c278ed"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Prepared_Stage" id="01b03087-b04a-494b-a2ae-62ab65b66922"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Sent_Stage" id="262b32e4-12d8-4895-8ebf-96666b724a81"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Sent_Stage" id="21910eec-4d44-443b-8d10-83dd74c70b11"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID1", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Replied_Stage" id="e44176f4-ec3a-47e3-90f4-e69ffdc8da8d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Replied_Stage" id="0fe10931-cffd-4ef7-871e-6b084dc18b4e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create1" id="51ec9057-0666-4d5e-ac27-34123199a0b8"><con:settings/><con:config><script>log.info "sd_ci_create1 has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Replied_Stage" id="bfa5494e-56c4-4d52-8878-275687ffbaf1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Replied_Stage" id="27b1a331-8d7b-4c86-a914-1d3f778dc3ef"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="73e36e77-5ff4-4403-886e-d3324941d3ca"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#C_CI}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#C_ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Received_Stage" id="d826366b-ad37-4297-aca4-0a9d54958004"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Received_Stage" id="4cb16c0a-db1a-48e0-8858-c54d3e74dd90"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Prepared_Stage" id="b107253c-6e52-4407-8bf6-f0df150b5911"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Prepared_Stage" id="af6eb870-b9ef-431a-8ac3-3bd9ec6eae98"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Sent_Stage" id="b0ce8add-f3db-42d0-a1cd-0df05126835f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Sent_Stage" id="d814cc9a-711d-4e72-a2c5-e5ddae307bc7"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID2", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Replied_Stage" id="fb3023ac-5447-47e9-97ed-68eb2525b7a9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Replied_Stage" id="45660bc6-63bf-42d2-9503-fa9e3d671d16"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="81bd1cf2-7799-448b-88c5-e454dcc582de"><con:settings/><con:config><script>log.info "sd_ci_create2 has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Replied_Stage" id="6ee3e9e8-6c6f-4d7f-b412-b26f9d5213bd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Replied_Stage" id="bc9ffe45-fea1-4f29-997d-eaeaad4b7310"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="414f43e9-fc6c-4002-ab95-f711c2d9f096"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration150</itp:param>

		 <!--Standard CI Adapter parameters-->	  
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_config_item">${#TestCase#P_CI}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_CI}</itp:param> 
		  <itp:param name="z_type">Depends on::Used by</itp:param>

		
		  <itp:param name="z_connection_strength"></itp:param>
		  <itp:param name="z_child_sys_id"></itp:param>
		  <itp:param name="z_parent_sys_id"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Received_Stage" id="52627a19-a4e2-47cb-a386-9fe1b9c6d594"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Received_Stage" id="f0f362bb-0e42-43d7-8bed-6c373d86ea4e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Prepared_Stage" id="12cf4003-d348-442e-9375-5452a725c2cf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Prepared_Stage" id="4c9fb534-517d-422e-af33-ed9047b5a520"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Sent_Stage" id="06cb7d02-be7b-4dc6-b81b-5a4a413b6d95"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Sent_Stage" id="187e2ed9-d7d7-43d3-b1ed-a07ce2242313"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Replied_Stage" id="ae49cabd-d0f7-44ec-8704-f1e7863b636b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Replied_Stage" id="7fd690c2-33e6-4b26-bbad-14e08f2b1150"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="58798b14-ec80-40e0-b25c-12c1e62b90c2"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_CI", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID", (new Date()+1).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_CI", (new Date()+1).format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>P_ID</con:name><con:value>20150828030117</con:value></con:property><con:property><con:name>P_CLASSS</con:name><con:value/></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>P_CI</con:name><con:value>20150828030117</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20150829030117</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>C_CI</con:name><con:value>20150829030117</con:value></con:property><con:property><con:name>RECEIVER_ID1</con:name><con:value>4c5f4c136f4e82001a72be4dbb3ee45a</con:value></con:property><con:property><con:name>RECEIVER_ID2</con:name><con:value>63bfc09f6f0a4600c5afbd5dbb3ee43c</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSP] SD_CI_REL_BREAK" searchProperties="true" id="341b5c8d-854c-4394-b768-574a892ee1af" disabled="true"><con:settings/><con:testStep type="request" name="ExecuteProcess - sd_ci_create1" id="0a977a84-7819-4c12-8334-90dbdfa51ed5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#P_CI}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#P_ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Received_Stage" id="ee0da923-5ad3-4dc8-8d3c-be8f7a78cd98"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Received_Stage" id="70315486-026d-4527-a25a-b70d6f48c3c4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Prepared_Stage" id="4a8279f9-15e0-4c3a-a725-ad3e9164a2c8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Prepared_Stage" id="60dce066-26ba-4035-8791-39bbaa0a4a4c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Sent_Stage" id="67524680-491c-4724-bbab-8eeccf340168"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Sent_Stage" id="a253cb36-0606-4d64-be17-fafb4c89a269"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

testRunner.testCase.setPropertyValue("RECEIVER_ID1", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Replied_Stage" id="590da059-cc51-4b22-9bd3-4872baf1031a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Replied_Stage" id="04f33069-1592-4a13-8454-be3a563b703d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create1" id="fb65924e-1cb9-491e-895c-fa553510ebc2"><con:settings/><con:config><script>log.info "sd_ci_create1 has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Replied_Stage" id="36096402-46a1-478c-8695-38548c7d6cdc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Replied_Stage" id="b528ecaf-742d-442d-a81a-18bb46aa1473"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="5fa70269-735e-4c15-b98a-88b7e18e9f89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_create</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration150</itp:param>
               <!--Standard CI Adapter parameters-->
               <itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
               <itp:param name="z_business_criticality">most critical</itp:param>
               <itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
               <itp:param name="z_location">Groote Eylandt</itp:param>
               <itp:param name="z_manufacturer_name">Cisco</itp:param>
               <itp:param name="z_match_type">Serial</itp:param>
               <itp:param name="z_model_id">1600 Series Router</itp:param>
               <itp:param name="z_name">${#TestCase#C_CI}</itp:param>
               <itp:param name="z_operational_status">Non-Operational</itp:param>
               <itp:param name="z_serial_number">serial_number${#TestCase#C_ID}</itp:param>
          	<itp:param name="z_status">In Disposition</itp:param>
               <itp:param name="z_support_group">Area 2-5 Dispatch</itp:param>
               <itp:param name="z_supported">Yes</itp:param>
               <itp:param name="z_type">Wifi</itp:param>
               <itp:param name="z_used_for">Disaster Recovery</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Received_Stage" id="08a4a9ef-aee9-4b4e-b6b2-ce18683c3f02"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Received_Stage" id="9485577c-8f20-48a7-b62a-a6b3fed1e04c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Prepared_Stage" id="1a7e4478-188f-47c0-a2ff-fa2322486df3"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Prepared_Stage" id="8185e4a5-89c6-4580-b296-d7985de097b8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Sent_Stage" id="7e4845c3-b0e1-460a-8000-cd91eb4b3966"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Sent_Stage" id="b4e5be4b-f95d-4fad-a21c-7b7bd428d5c2"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

testRunner.testCase.setPropertyValue("RECEIVER_ID2", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Replied_Stage" id="9be0d570-9c0e-4e4e-bef1-859091b92bb6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_CI}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Replied_Stage" id="bb6a6154-4058-46ce-9517-fb634deb186f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="558e12cf-9e36-442a-ad45-89d99889135b"><con:settings/><con:config><script>log.info "sd_ci_create2 has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Replied_Stage" id="bb9c58d7-5d11-4d32-96ea-7176860dd268"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Replied_Stage" id="cb0b6198-1e8b-4756-bc72-69fdce0b38ad"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="727ced43-b589-4b41-bba0-704ddc300da9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration150</itp:param>

		 <!--Standard CI Adapter parameters-->	  
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_config_item">${#TestCase#P_CI}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_CI}</itp:param> 
		  <itp:param name="z_type">Depends on::Used by</itp:param>

		
		  <itp:param name="z_connection_strength"></itp:param>
		  <itp:param name="z_child_sys_id"></itp:param>
		  <itp:param name="z_parent_sys_id"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Received_Stage" id="727876e7-76e9-4c43-9f3a-d3790c3d062e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Received_Stage" id="4d7908de-83c4-4662-a404-c2506d4ac295"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Prepared_Stage" id="fbf6c263-e209-47c0-b0e3-2cb4d98f51bb"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Prepared_Stage" id="ef1b2bef-c7d2-4c6b-93da-9a646ac52cce"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Sent_Stage" id="fd93fd53-b0f3-4367-999b-03e59bcc33b6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Sent_Stage" id="150888a3-fc35-44ee-808b-c3b894f56a39"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID3", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Replied_Stage" id="409b0dcf-30ac-49b5-b969-64b2b400a3da"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Replied_Stage" id="30c3a47d-3176-4b74-8adb-0e9a3ef916bd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="774ba647-fef0-4610-9fd3-40e65248f7d2"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Replied_Stage" id="c86a0f22-866c-4271-a7f7-54139b175be5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Replied_Stage" id="6847442d-fbf6-426f-92e5-d25724e2f301"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_break" id="af32a560-a722-4c3e-91b6-f996ff7f03b1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_break" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_break</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:809</itp:param>
		  <itp:param name="effectiveUser">configuration151</itp:param>

		  <!--qbe servicenow incident adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_CI}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_CI}</itp:param> 
		  <itp:param name="z_type">Depends on::Used by</itp:param>

		  <itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID3}</itp:param>
		  <itp:param name="z_parent_name">${#TestCase#P_CI}</itp:param>
		  <itp:param name="z_child_name">${#TestCase#C_CI}</itp:param>
		  <itp:param name="z_child_sys_id"></itp:param>
		  <itp:param name="z_parent_sys_id"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Received_Stage" id="d76aa7f3-03d4-4d48-8ead-25840c99e82d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Received_Stage" id="cf0be4c8-07f9-492e-a1de-074916971e0d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Prepared_Stage" id="7f4a30ac-752a-4f2e-a515-05e426e6bb1e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Prepared_Stage" id="4924e156-d2c3-4781-9107-a3b4404808a5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Sent_Stage" id="ca7e62ae-7ea8-4d8b-adc1-793b392bd2cd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Sent_Stage" id="21750c76-9cb1-451e-909e-a61dee4ebd9e"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Replied_Stage" id="7bdf0f68-2bec-42fa-b535-42ebb1a7218b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_CI},${#TestCase#C_COMPANY},${#TestCase#C_CI},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Replied_Stage" id="b2c15b81-3a80-489e-aaf0-548e58fe515b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_break" id="2bbfd32e-1199-46d3-b371-198e67511c0c"><con:settings/><con:config><script>log.info "sd_ci_rel_break has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_CI", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID", (new Date()+1).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_CI", (new Date()+1).format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>P_ID</con:name><con:value>20150828025200</con:value></con:property><con:property><con:name>P_CLASSS</con:name><con:value/></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>P_CI</con:name><con:value>20150828025200</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20150829025200</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>C_CI</con:name><con:value>20150829025200</con:value></con:property><con:property><con:name>RECEIVER_ID1</con:name><con:value>aa5d84136f4e82001a72be4dbb3ee474</con:value></con:property><con:property><con:name>RECEIVER_ID2</con:name><con:value>f2ddc4136f4e82001a72be4dbb3ee4f6</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>RECEIVER_ID3</con:name><con:value>f82e48136f4e82001a72be4dbb3ee414</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_CI_CREATE" searchProperties="true" id="6c9529ff-9df0-47cf-86a8-39002ebacba0"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="39e0270d-ab26-4234-b25f-0b877671e7d8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="33c80534-7644-4da6-95c9-ba240ded4392"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="a8249215-2dc6-4067-af00-19ad982ab898"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create" id="f6a95676-e7bb-4d83-9c61-f6ded4665ad0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create" id="3bde6a1d-a3d3-4be1-862d-b4725cf8998f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept" id="62d39754-a473-4a55-81f6-1ecaaae568c0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept" id="45a1d3f4-cb92-44e0-98fb-d942189386a7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept" id="aeb90e5e-3f4a-46e6-b1b1-c77df9d8fbf7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="fafa8bf4-756c-493e-a491-bd4485aee50e"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept" id="1251d9e3-25d9-47d5-b857-61b6e43e86a6"><con:settings/><con:config><script>log.info "pro_ci_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("NAME",'NAME_'+ new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
</con:setupScript><con:properties><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160203084453</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160203084453</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NAME_20160203084453</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">d53b975a6fd59a041a72be4dbb3ee48c</con:value></con:property><con:property><con:name>ID</con:name><con:value>20160203084453</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_CI_UPDATE" searchProperties="true" id="fbabd8d5-c8b5-49ff-a190-92efd2c3571d"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="713f3356-3c07-4326-a0ec-8a9182e52ebc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="4fb53d87-dbc7-4915-924f-b05042af1f71"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="e55aa3b5-047e-4c64-b4b4-ff109447ce21"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create" id="41d8129d-95e3-4811-8ef7-a347f46e3482"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create" id="fd09461d-0711-4813-a027-bf1e44dc4195"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept" id="f6790877-b10d-4723-9014-70d27aa025aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept" id="a54a4036-5300-47dc-833c-7c72f718b8bd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept" id="8b5014be-961b-4c05-a771-20ce1cfd43fc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="584abe9d-0a86-4c50-b17c-1f4e0a8fba44"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept" id="7e6dcc21-873e-41f0-9a09-5b2487f9d2ef"><con:settings/><con:config><script>log.info "pro_ci_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_update" id="abded40a-1286-4028-a109-701ea9cc1056"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <!--You have a CHOICE of the next 2 items at this level-->
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <!--Optional:-->
            <itp:params>
               <!--1 or more repetitions:-->
               <itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_serial_number">${#TestCase#ID}</itp:param>
               <itp:param name="z_u_supported">Yes</itp:param>
               <itp:param name="z_support_group">Approval Test1</itp:param>
               <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
               <itp:param name="z_company">CSC Internal</itp:param>
               <itp:param name="z_transaction_code">SD_CI_UPDATE</itp:param>
               <itp:param name="z_external_ci_reference">${#TestCase#RECEIVER_ID}</itp:param>
               <itp:param name="z_location">10 Lanidex Center West</itp:param>
               <itp:param name="z_sys_mod_count">1</itp:param>
               <itp:param name="z_name">ha2015120302</itp:param>
               <itp:param name="z_first_discovered">2015-12-04 08:39:51</itp:param>
               <itp:param name="z_provider_sys_id">${#TestCase#SYS_ID}</itp:param>
               <itp:param name="z_u_shared">true</itp:param>
               <itp:param name="z_virtual">true</itp:param>
               <itp:param name="z_discovery_source">SCCM</itp:param>
               <itp:param name="z_form_factor">Desktop</itp:param>
               <itp:param name="z_install_status">In Stock</itp:param>
               <itp:param name="z_model_id">Hewlett-Packard 8510w</itp:param>
               <itp:param name="z_manufacturer">1099 Pro</itp:param>
               <itp:param name="z_os">Mac OS 8</itp:param>
               <itp:param name="started">2015-12-03 08:40:03</itp:param>
            </itp:params>
            <!--Optional:-->
            <itp:options>
               <!--Optional:-->
               <itp:startDate/>
               <!--Optional:-->
               <itp:startTime/>
               <!--Optional:-->
               <itp:tagId/>
               <!--Optional:-->
               <itp:isAutoArchive>true</itp:isAutoArchive>
               <!--Optional:-->
               <itp:priority/>
            </itp:options>
            <!--Optional:-->
            <itp:attachments attachmentsParamName="">
               <!--Zero or more repetitions:-->
               <itp:attachment>
                  <itp:attachmentID>cid:162531937635</itp:attachmentID>
                  <itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
                  <!--Optional:-->
                  <itp:localSourceLocation/>
               </itp:attachment>
            </itp:attachments>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>INC*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update" id="45102def-ce4f-43ed-acec-e2bf38dd49ed"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update" id="fb5e9c1f-6570-421f-9361-77a748db76d4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_update" id="415008ca-6870-4202-a8fc-54925190cad0"><con:settings/><con:config><script>log.info "sd_ci_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("NAME",'NAME_'+ new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
</con:setupScript><con:properties><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160122063752</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160122063752</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NAME_20160122063752</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">638b4d626f0956041a72be4dbb3ee45b</con:value></con:property><con:property><con:name>ID</con:name><con:value>20160122063752</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_CI_RETIRE" searchProperties="true" id="55481b26-fce5-42b7-99a9-371b9441fa01"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="b92b1cb3-e101-4357-a7fe-5e3767b8e92d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="470df0a7-4dee-49cc-b4b3-63c013feb517"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="f45a6fd4-5977-44db-abd3-1c56917b58c7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create" id="c47f5536-9da6-41f5-8998-9a5be4fb7339"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create" id="052b6e60-f9b4-4ef1-bd07-5d11c2fcbe57"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("ID" );
		testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept" id="fef63915-81c3-48fd-90e4-906d4910f768"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept" id="89eee67f-6418-49a8-9285-964e49291677"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept" id="f50e0073-2f6b-4bb2-82d1-8610427ed202"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="6281ae11-e503-4dc0-a5e6-bac0bb26e025"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept" id="4efd07a3-c623-4244-9658-9f2dd9dadc4a"><con:settings/><con:config><script>log.info "pro_ci_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_retire" id="3fdfc772-36de-4da5-be9e-fbef0b2b349c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_retire" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[
<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_transaction_code">sd_ci_retire</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	

					<!--1 or more repetitions:-->
					<itp:param name="z_external_ci_reference">${#TestCase#RECEIVER_ID}</itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#SYS_ID}</itp:param>				
					<itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>	
					<itp:param name="z_name">${#TestCase#NAME}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> 
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>INC*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire" id="9569edea-ba80-4481-af40-1f60a0ba925d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire" id="5bab29a1-3e48-404d-ac8c-5cef6bfd18c9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_retire" id="03e6aecc-ac22-4699-b338-b2c4be73cdd8"><con:settings/><con:config><script>log.info "sd_ci_retire has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID_ASYNC", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("NAME",'NAME_'+ new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
</con:setupScript><con:properties><con:property><con:name>RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160122071458</con:value></con:property><con:property><con:name>ID_ASYNC</con:name><con:value>20160122071458</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">NAME_20160122071458</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">280495ee6fc11e00c5afbd5dbb3ee4c1</con:value></con:property><con:property><con:name>ID</con:name><con:value>20160122071458</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_CI_REL_CREATE" searchProperties="true" id="6b07d919-1615-4887-9e99-3d07e9f3c2a8"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="7e131b76-82d1-43aa-ba91-18adb52180fb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#P_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#P_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#P_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#P_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#P_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#P_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="0d6d8938-c61b-45b2-811a-3666d02cb66a"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("P_NAME", ciName)
testRunner.testCase.setPropertyValue("P_SYS_ID", ci_sys_id)

def rel_P_Name =	testRunner.testCase.getPropertyValue("P_NAME" );
		testRunner.testCase.setPropertyValue("REL_P_NAME",rel_P_Name)
def rel_C_Name =	testRunner.testCase.getPropertyValue("C_NAME" );
		testRunner.testCase.setPropertyValue("REL_C_NAME", rel_C_Name)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="ec75bf74-8cc2-4e0c-ad13-9ef675964a25"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#P_CLASS}</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#P_ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#P_SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create" id="960e6174-edf6-467e-8c57-288dcccf8bba"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create" id="c3534ec2-ed6c-4a2f-899a-6cb26266b964"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("P_ID" );
		testRunner.testCase.setPropertyValue("P_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("P_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept" id="aef3ab6f-9587-4054-9f40-0ad172466387"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#P_SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#P_NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#P_RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept" id="a361913e-655a-419e-ba91-42d2c0dce6fe"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept" id="4e4fc3c7-d2a5-41aa-a659-3a7952bd59c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="34ee3918-3510-42e3-8d80-16ba9c4daf91"><con:settings/><con:config><script>log.info "sd_ci_create parent has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept" id="52653d4c-8a46-4cbd-b9dc-1211f5c47902"><con:settings/><con:config><script>log.info "pro_ci_accept parent has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_CI2_SNOW" id="ae3202d5-4616-4245-a5c1-749993675ee6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI2_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#C_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#C_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#C_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#C_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#C_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#C_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property2" id="3b3cebac-4e71-4638-90fc-cb0c2d9b2271"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI2_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("C_NAME", ciName)
testRunner.testCase.setPropertyValue("C_SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="426b0ef1-0d17-4b2b-b338-80016092159a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#C_ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2" id="18acdbc1-59e3-41d0-bde1-734475ec9306"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2" id="e3119b79-3fca-47e3-b1f1-83dd856c8f51"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("C_ID" );
		testRunner.testCase.setPropertyValue("C_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept2");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("C_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept2")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept2" id="d6b04fb8-0c8b-42ed-91ee-738837530baf"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#C_NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#C_RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2" id="a66cc6ca-68b5-48e1-a37c-3961e551ffff"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2" id="fea8e473-9341-4c53-a0f3-0a99ccfb92a3"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_Relationships_SNOW" id="401508af-6f20-4b86-81ef-400dffcdf818"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_Relationships_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9e2c8a1-92e7-4d7f-aedf-d20f2b2c4b26"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log/>
         <!--Optional:-->
         <u_child_class>${#TestCase#C_CLASS}</u_child_class>
         <!--Optional:-->
         <u_child_company>${#TestCase#C_COMPANY}</u_child_company>
         <!--Optional:-->
         <u_child_name>${#TestCase#C_NAME}</u_child_name>
         <!--Optional:-->
         <u_connection_strength/>
         <!--Optional:-->
         <u_external_ci_rel_reference>${#TestCase#P_SYS_ID}</u_external_ci_rel_reference>
         <u_parent_class>${#TestCase#P_CLASS}</u_parent_class>
         <!--Optional:-->
         <u_parent_company>${#TestCase#P_COMPANY}</u_parent_company>
         <!--Optional:-->
         <u_parent_name>${#TestCase#P_NAME}</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c6dd4092-702e-4a31-a40d-54e056b11b19"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="a9f464ca-5aef-410b-8a52-abecd7be30c2"><con:settings/><con:config><script>log.info "sd_ci_create child has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept2" id="71f55ace-55ae-4139-b324-de844062a9c0"><con:settings/><con:config><script>log.info "pro_ci_accept child has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_Relationships" id="be4159af-e735-49e3-8fd9-59055ba7ba20"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_Relationships_SNOW#Response");


def ci_sys_id = holder.getNodeValue("//ns1:sys_id");

log.info "sys_id: " + ci_sys_id


testRunner.testCase.setPropertyValue("REL_SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="3618da0b-5bc8-4a2e-95d0-4234798ed571"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="sender">CSC ServiceNow</itp:param>
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
               <itp:param name="z_transaction_code">sd_ci_rel_create</itp:param>
               <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
               <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>
               <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
               <itp:param name="z_provider_sys_id">${#TestCase#REL_SYS_ID}</itp:param>
               <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
               <itp:param name="z_child_name">${#TestCase#C_NAME}</itp:param>
               <itp:param name="z_parent_name">${#TestCase#P_NAME}</itp:param>
               <itp:param name="z_child_config_item">${#TestCase#C_SYS_ID}</itp:param>
               <itp:param name="z_parent_config_item">${#TestCase#P_SYS_ID}</itp:param>
               <itp:param name="z_relationship_type">Depends on::Used by</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create" id="a6e2e678-df5c-462d-b8ba-64a04552aae9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#REL_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create" id="46a9f5f0-3698-480f-af32-75c680118b34"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("REL_ID_ASYNC" );
		testRunner.testCase.setPropertyValue("REL_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_rel_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("REL_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_rel_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_rel_accept" id="28af58d4-85dc-44f5-bc1f-f527f131f827"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_rel_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_rel_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	

					<!--1 or more repetitions:-->
					<itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_child_name">${#TestCase#REL_C_NAME}</itp:param>
					<itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>						
					<itp:param name="z_child_config_item">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#REL_RECEIVER_ID}</itp:param>
					<itp:param name="z_external_ci_rel_reference">${#TestCase#REL_SYS_ID}</itp:param>
					<itp:param name="z_parent_config_item">${#TestCase#P_SYS_ID}</itp:param>	
					<itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
					<itp:param name="z_parent_name">${#TestCase#REL_P_NAME}</itp:param>	
					<itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>							

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept" id="13b63a69-9170-4dd7-8be6-dbf733112f9d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#REL_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept" id="ee8e3008-aee0-42bc-833b-54ca622b264d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="6f17b074-6555-4a1c-9c8d-63b0bcd59f55"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_rel_accept" id="a78ca59e-9dab-422d-9caf-fd6d043acc8f"><con:settings/><con:config><script>log.info "pro_ci_rel_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID_ASYNC", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_NAME", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID_ASYNC", (new Date()+2).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_ID", (new Date()+2).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_NAME", (new Date()+2).format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("REL_ID_ASYNC", (new Date()+4).format("yyyyMMddHHmmss")) 
</con:setupScript><con:properties><con:property><con:name>P_RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160203093632</con:value></con:property><con:property><con:name>P_ID_ASYNC</con:name><con:value>20160203094123</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>P_NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160203094123</con:value></con:property><con:property><con:name>P_SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">c997e79e6fd59a041a72be4dbb3ee4ca</con:value></con:property><con:property><con:name>P_ID</con:name><con:value>20160203094123</con:value></con:property><con:property><con:name>C_RECEIVER_ID</con:name><con:value>20160205093632</con:value></con:property><con:property><con:name>C_ID_ASYNC</con:name><con:value>20160205094123</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>C_NAME</con:name><con:value>20160205094123</con:value></con:property><con:property><con:name>C_SYS_ID</con:name><con:value>acb7e71a6f155240c5afbd5dbb3ee4b9</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20160205094123</con:value></con:property><con:property><con:name>REL_SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">f7c72b9e6fd59a041a72be4dbb3ee48f</con:value></con:property><con:property><con:name>REL_RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160207094123</con:value></con:property><con:property><con:name>REL_ID_ASYNC</con:name><con:value>20160207094123</con:value></con:property><con:property><con:name>REL_P_NAME</con:name><con:value>20160203093632</con:value></con:property><con:property><con:name>REL_C_NAME</con:name><con:value>20160205093632</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SNOW]SD_CI_REL_BREAK" searchProperties="true" id="37cbe7f5-befe-43f5-a764-fc8e367e0f19"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="e55ca576-1b97-4328-b18c-f00c7a1c5ee6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#P_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#P_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#P_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#P_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#P_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#P_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="e7a651d4-528d-4e9e-bc8b-a990319afa90"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("P_NAME", ciName)
testRunner.testCase.setPropertyValue("P_SYS_ID", ci_sys_id)


def rel_P_Name =	testRunner.testCase.getPropertyValue("P_NAME" );
		testRunner.testCase.setPropertyValue("REL_P_NAME",rel_P_Name)
def rel_C_Name =	testRunner.testCase.getPropertyValue("C_NAME" );
		testRunner.testCase.setPropertyValue("REL_C_NAME", rel_C_Name)
		</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="2cf3c081-adf8-46f7-aba4-48349e80077b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#P_CLASS}</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#P_ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#P_SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create" id="331aefc9-cd72-4c73-91f1-8b74dd808b54"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create" id="cb14f392-03db-49b0-9755-06718c89dad4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("P_ID" );
		testRunner.testCase.setPropertyValue("P_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("P_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept" id="b3c66f82-6b7e-451d-98e0-4772cbd251d6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#P_SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#P_NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#P_RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">CSC Internal</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept" id="4483c921-4e98-424f-a6e1-d470f5bad3cc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept" id="bcc2a54b-173c-43a8-9959-b209f1c555dc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="fa86034b-d67c-440e-96dc-dc78fbdc11b4"><con:settings/><con:config><script>log.info "sd_ci_create parent has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept" id="79530d54-9bb7-4258-8d00-10d8c81a1123"><con:settings/><con:config><script>log.info "pro_ci_accept parent has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_CI2_SNOW" id="56fe76c4-904e-4551-84a0-eb311d356e66"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI2_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#C_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#C_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#C_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#C_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#C_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#C_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property2" id="4ff48e8a-80f2-4e68-b4ed-de663e109e89"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI2_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("C_NAME", ciName)
testRunner.testCase.setPropertyValue("C_SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="eaa7bca2-b005-4b0a-b563-b3e91a17a265"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
					<itp:param name="z_class_name">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
					<itp:param name="z_serial_number">${#TestCase#C_ID}</itp:param>
					<itp:param name="z_support_group"></itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2" id="df3a17c7-5c03-4c78-bfb4-3dbe82060456"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2" id="c1a73700-599c-4929-b833-335f98b0b1c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("C_ID" );
		testRunner.testCase.setPropertyValue("C_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_accept2");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("C_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_accept2")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept2" id="385733c3-5cbb-4e6c-8039-790097ae3220"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	
					<!--1 or more repetitions:-->
					<itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_external_ci_reference">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_external_party"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>	
					<itp:param name="z_name">${#TestCase#C_NAME}</itp:param>	
					<itp:param name="z_provider_sys_id">${#TestCase#C_RECEIVER_ID}</itp:param>	
					<itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>		

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2" id="6ac19232-8a45-4e48-ba31-fc880ead0ebc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2" id="3d954192-46a3-4c6f-81fd-1d4477de1394"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_Relationships_SNOW" id="8d11b19b-565a-4746-b00f-243f49580df3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_Relationships_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9e2c8a1-92e7-4d7f-aedf-d20f2b2c4b26"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log/>
         <!--Optional:-->
         <u_child_class>${#TestCase#C_CLASS}</u_child_class>
         <!--Optional:-->
         <u_child_company>${#TestCase#C_COMPANY}</u_child_company>
         <!--Optional:-->
         <u_child_name>${#TestCase#C_NAME}</u_child_name>
         <!--Optional:-->
         <u_connection_strength/>
         <!--Optional:-->
         <u_external_ci_rel_reference>${#TestCase#P_SYS_ID}</u_external_ci_rel_reference>
         <u_parent_class>${#TestCase#P_CLASS}</u_parent_class>
         <!--Optional:-->
         <u_parent_company>${#TestCase#P_COMPANY}</u_parent_company>
         <!--Optional:-->
         <u_parent_name>${#TestCase#P_NAME}</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c6dd4092-702e-4a31-a40d-54e056b11b19"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="67162c44-858b-4d64-ac1c-1f44c98a8201"><con:settings/><con:config><script>log.info "sd_ci_create child has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept2" id="b2241360-a162-451b-bd58-fbad794a1a5f"><con:settings/><con:config><script>log.info "pro_ci_accept child has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_Relationships" id="b9ce933f-aa94-413f-b339-322bfb90b882"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_Relationships_SNOW#Response");


def ci_sys_id = holder.getNodeValue("//ns1:sys_id");

log.info "sys_id: " + ci_sys_id


testRunner.testCase.setPropertyValue("REL_SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="bf073ba4-3457-48a2-88eb-a215fe3564e3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="sender">CSC ServiceNow</itp:param>
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
               <itp:param name="z_transaction_code">sd_ci_rel_create</itp:param>
               <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
               <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>
               <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
               <itp:param name="z_provider_sys_id">${#TestCase#REL_SYS_ID}</itp:param>
               <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
               <itp:param name="z_child_name">${#TestCase#C_NAME}</itp:param>
               <itp:param name="z_parent_name">${#TestCase#P_NAME}</itp:param>
               <itp:param name="z_child_config_item">${#TestCase#C_SYS_ID}</itp:param>
               <itp:param name="z_parent_config_item">${#TestCase#P_SYS_ID}</itp:param>
               <itp:param name="z_relationship_type">Depends on::Used by</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create" id="94c27c30-1b09-48af-bf2d-7920738e71ab"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id],
		[request].[request_async] AS [request_async]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI AND [request].request_type = 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#REL_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create" id="f94da053-4a60-4dc8-9ecb-f6c981bb0737"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
def request_async = holder.getNodeValue("//REQUEST_ASYNC");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);




	while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
	{
		sleep(5000)
		log.info "** Recall: " + count
		step.run(testRunner, context)
		sleep(5000)
		groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
		holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create#ResponseAsXml");
		receiver_id = holder.getNodeValue("//RECEIVER_ID");
		status = holder.getNodeValue("//STATUS");
		request_async = holder.getNodeValue("//REQUEST_ASYNC");
		//fw_status = holder.getNodeValue("//FW_STATUS");
		count = count + 1
	}
	if(request_async=='true')
	{
		
		def id_async =	testRunner.testCase.getPropertyValue("REL_ID_ASYNC" );
		testRunner.testCase.setPropertyValue("REL_RECEIVER_ID", id_async)
		//testRunner.testCase.setPropertyValue("RECEIVER_ID", id_async);
		testRunner.gotoStepByName("ExecuteProcess - pro_ci_rel_accept");
	}
	else
	{
	log.info (receiver_id)
	log.info (status)
	testRunner.testCase.setPropertyValue("REL_RECEIVER_ID", receiver_id)
	if(count == 100)
		assert false
	else
		assert true
		
	testRunner.gotoStepByName( "JDBC_pro_ci_rel_accept")
	
	}
		
	
		
	
</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_rel_accept" id="26a995e9-23bd-4b3b-9590-bf6a58c5f3d7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_rel_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:itp="http://www.ca.com/itpam" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/Standard</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
					<itp:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</itp:param>
					<itp:param name="request_type">pro_ci_rel_accept</itp:param>
					<itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param> 	

					<!--1 or more repetitions:-->
					<itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
					<itp:param name="z_child_name">${#TestCase#REL_C_NAME}</itp:param>
					<itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>						
					<itp:param name="z_child_config_item">${#TestCase#C_SYS_ID}</itp:param>
					<itp:param name="z_provider_sys_id">${#TestCase#REL_RECEIVER_ID}</itp:param>
					<itp:param name="z_external_ci_rel_reference">${#TestCase#REL_SYS_ID}</itp:param>
					<itp:param name="z_parent_config_item">${#TestCase#P_SYS_ID}</itp:param>	
					<itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
					<itp:param name="z_parent_name">${#TestCase#REL_P_NAME}</itp:param>	
					<itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>							

				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>TASK*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept" id="51d3703b-465e-423e-b893-1f38a91273cf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="59f64f50-dea1-47a4-a27f-59b922dd199b"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#REL_RECEIVER_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept" id="01f85c17-1078-4d29-98b3-b23c5842f097"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept#ResponseAsXml");

def status = holder.getNodeValue("//STATUS");

def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept#ResponseAsXml");
	status = holder.getNodeValue("//STATUS");
	count = count + 1
}

log.info (status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="bae3c86b-8166-4494-93ae-f6acaef0ade1"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_rel_accept" id="2abcb014-362d-428e-8362-91cdf4d8f0af"><con:settings/><con:config><script>log.info "pro_ci_rel_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_break" id="7f4f847d-e7e7-42e8-9d1c-c46835a3e932"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_break" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a324ef63-9f59-41f8-95fc-e193db624368"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="sender">CSC ServiceNow</itp:param>
               <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
               <itp:param name="z_transaction_code">sd_ci_rel_break</itp:param>
               <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
               <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>
               <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
               <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
               <itp:param name="z_child_name">${#TestCase#REL_C_NAME}</itp:param>
               <itp:param name="z_parent_name">${#TestCase#REL_P_NAME}</itp:param>
               <itp:param name="z_child_sys_id">${#TestCase#C_SYS_ID}</itp:param>
               <itp:param name="z_parent_sys_id">${#TestCase#P_SYS_ID}</itp:param>
               <itp:param name="z_provider_sys_id">${#TestCase#REL_SYS_ID}</itp:param>
               <itp:param name="z_external_ci_rel_reference">${#TestCase#REL_RECEIVER_ID}</itp:param>
               <itp:param name="z_relationship_type">Depends on::Used by</itp:param>
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="4f199cea-c18d-4752-af08-0f5597f99abd"/><con:assertion type="XPath Match" name="XPath z_number" id="38b1a0b5-b628-4b42-bd58-2511abf6bb5e" disabled="true"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_number']</path><content>INC*</content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break" id="d0686147-dab2-4fdd-b19d-8042298192a2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://20.138.56.246:54354;databaseName=integrations_new;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[request].[status] AS [status],
		[relationship].[receiver_id] AS [receiver_id]
FROM	[dbo].[request] 
	LEFT JOIN [dbo].[relationship] ON [request].[sender_id] = [relationship].[sender_id] 
		--and [relationship].[sender] = @my_sender 
		--and [relationship].[receiver_id] = @my_receiver_id
WHERE [request].[sender_id]=:CI  AND [request].request_type = 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1fa3d945-bc5f-470a-8354-bce683896723"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#REL_SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break" id="413c0d85-841d-4c09-9ba5-80e781074802"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break#ResponseAsXml");
def receiver_id = holder.getNodeValue("//RECEIVER_ID");
def status = holder.getNodeValue("//STATUS");
//def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(receiver_id ==null &amp;&amp; status != 'completed' &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break#ResponseAsXml");
	receiver_id = holder.getNodeValue("//RECEIVER_ID");
	status = holder.getNodeValue("//STATUS");
	//fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (receiver_id)
log.info (status)
testRunner.testCase.setPropertyValue("REL_RECEIVER_ID", receiver_id)
//log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_break" id="4390eacd-af10-488c-8281-1e4e2528ebc7"><con:settings/><con:config><script>log.info "sd_ci_rel_break has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID_ASYNC", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_NAME", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID_ASYNC", (new Date()+2).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_ID", (new Date()+2).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_NAME", (new Date()+2).format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("REL_ID_ASYNC", (new Date()+4).format("yyyyMMddHHmmss")) 
</con:setupScript><con:properties><con:property><con:name>P_RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160203094854</con:value></con:property><con:property><con:name>P_ID_ASYNC</con:name><con:value>20160203094854</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>P_NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160203094854</con:value></con:property><con:property><con:name>P_SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">d85ae35a6f155240c5afbd5dbb3ee4eb</con:value></con:property><con:property><con:name>P_ID</con:name><con:value>20160203094854</con:value></con:property><con:property><con:name>C_RECEIVER_ID</con:name><con:value>20160205094854</con:value></con:property><con:property><con:name>C_ID_ASYNC</con:name><con:value>20160205094854</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>C_NAME</con:name><con:value>20160205094854</con:value></con:property><con:property><con:name>C_SYS_ID</con:name><con:value>047ae3de6fd59a041a72be4dbb3ee496</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20160205094854</con:value></con:property><con:property><con:name>REL_SYS_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">038a675a6f155240c5afbd5dbb3ee423</con:value></con:property><con:property><con:name>REL_RECEIVER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20160207094854</con:value></con:property><con:property><con:name>REL_ID_ASYNC</con:name><con:value>20160207094854</con:value></con:property><con:property><con:name>REL_P_NAME</con:name><con:value>20160203094854</con:value></con:property><con:property><con:name>REL_C_NAME</con:name><con:value>20160205094854</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSD] SD_CI_REL_CREATE" searchProperties="true" id="c016baf4-358d-4cba-807e-b26e62bb28e1" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CI1_SNOW" id="c8616027-c598-4e96-8981-e30de32dcb9c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI1_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3582d30b-f134-4c5a-afc0-ba1b061ad222"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#P_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#P_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#P_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#P_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#P_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#P_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6166173c-a124-4a27-915c-1a290c057dc7"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property1" id="584c73f1-72db-4441-ac93-f153d267341b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI1_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("P_NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID1", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create1" id="cb86dd87-fc71-4ac0-8238-61ee347ed091"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#P_ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID1}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Received_Stage" id="72582f83-99e5-449b-a99a-7da551253a7e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Received_Stage" id="77188c75-14ad-4efa-8049-1dcc153fc76b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Prepared_Stage" id="f1895c91-b85c-44ae-9502-856da490efc1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Prepared_Stage" id="a15950ba-4b5f-44a1-8b2f-f79e943fd04e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Sent_Stage" id="910c8ea3-bea0-4fa1-8eae-f55b86f178db"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Sent_Stage" id="bab5e63c-26b8-4634-9f8c-61ca04d6a168"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Replied_Stage" id="92d596eb-cdfd-4cca-a219-710c8c6592f4"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Replied_Stage" id="ce14f911-7b58-4aca-bc12-74b45bc6f79b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create1" id="1e4d75fe-a9e9-4f1a-ae53-84daf35515e8"><con:settings/><con:config><script>log.info "sd_ci_create1 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept1" id="c59afe7a-cbac-4e3d-9efb-00c8d1256ef5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>
		  <!--ci adapter parameters-->
		  
		  <itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
		  
		 <itp:param name="z_provider_sys_id">${#TestCase#SYS_ID1}</itp:param>
		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Received_Stage" id="adfea66e-7676-4439-b9e8-9df9f05594c6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Received_Stage" id="d537b28a-f66c-46f0-8d1d-af0e4ff89b8e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Prepared_Stage" id="2198b623-cfcb-4609-a7c7-328df1a6f7e2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Prepared_Stage" id="c90c7506-8f16-44bd-ad55-c66778241e41"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Sent_Stage" id="150899c2-f58c-47a5-8712-d9dbb1f28330"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Sent_Stage" id="8c295294-57b3-4e58-99fb-612135128625"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Replied_Stage" id="82d32023-6985-4513-aa1b-98f3f554f370"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Replied_Stage" id="b5fc55cc-5df0-4685-a11b-c37d80f6ba12"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept1" id="aff6dfb0-e0c1-4cbc-bc89-a0b11eab3604"><con:settings/><con:config><script>log.info "pro_ci_accept1 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_CI2_SNOW" id="edbeef4b-56f8-414c-8a4f-9aa93d0ccbd7"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI2_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3b34afc0-6df2-4b50-a5ef-af334c00db41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#C_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#C_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#C_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#C_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#C_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#C_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="2c92dd83-95d8-4826-bcaa-6943318f5964"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property2" id="f2edd491-d50b-4b3c-a638-69e24124c213"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI2_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("C_NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID2", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="8328b8fd-55dd-458b-98d9-1b7f057b690e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#C_ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID2}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Received_Stage" id="2337a16e-3390-499e-9927-13a1f8c2803e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Received_Stage" id="f7f6e944-a850-4b39-ac44-e012ca474519"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Prepared_Stage" id="f9dfde71-259f-40d5-9adf-40960776d5ac"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Prepared_Stage" id="f67b600b-aeb4-43db-a559-cd313a87a5ef"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Sent_Stage" id="75c4dd9a-7d10-41d5-ab38-a32b32c3fa35"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Sent_Stage" id="954126b8-fd4b-4512-8c93-dfc53970e467"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Replied_Stage" id="aa7c9552-5f84-4c3c-8624-afc122f4bb8f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Replied_Stage" id="7a49c8bf-80a7-4f91-9dd8-ee9c88c9a8be"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="5d37c5ac-1ae7-467f-aeae-b98ec7065eed"><con:settings/><con:config><script>log.info "sd_ci_create2 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept2" id="56a9d656-fbe9-43c9-b958-419ac009403c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>
		  <!--ci adapter parameters-->
		  
		  <itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
		  
		 <itp:param name="z_provider_sys_id">${#TestCase#SYS_ID2}</itp:param>
		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Received_Stage" id="6d819e21-e368-4ea6-9f2b-b3c5332adf49"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Received_Stage" id="4a4581a6-e65a-4c1b-ac6e-8b37c3288ecd"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Prepared_Stage" id="49047e09-d907-4047-b762-02ee3fe93826"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Prepared_Stage" id="6272e942-ded9-4cba-959f-a3b152f72133"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Sent_Stage" id="095993b4-fbd1-4648-80d5-f86ca4f777d6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Sent_Stage" id="6ca5d0dc-f9ef-49c2-b53b-406c2361e06e"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Replied_Stage" id="41b04034-e881-411d-96bc-773cedb0b521"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Replied_Stage" id="4a12cb11-9b27-454c-900a-4b9a54af49da"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept2" id="3bb3eec0-6ba9-46ed-a650-194bd78bbe11"><con:settings/><con:config><script>log.info "pro_ci_accept2 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_Relationships_SNOW" id="0cc19b04-644b-4fef-902d-207157ce52cb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_Relationships_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9e2c8a1-92e7-4d7f-aedf-d20f2b2c4b26"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>${#TestCase#C_CLASS}</u_child_class>
         <!--Optional:-->
         <u_child_company>${#TestCase#C_COMPANY}</u_child_company>
         <!--Optional:-->
         <u_child_name>${#TestCase#C_NAME}</u_child_name>
         <!--Optional:-->
         <u_connection_strength></u_connection_strength>
         <!--Optional:-->
         <u_parent_class>${#TestCase#P_CLASS}</u_parent_class>
         <!--Optional:-->
         <u_parent_company>${#TestCase#P_COMPANY}</u_parent_company>
         <!--Optional:-->
         <u_parent_name>${#TestCase#P_NAME}</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c6dd4092-702e-4a31-a40d-54e056b11b19"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_Relationships" id="7186664f-0240-4d7e-bec3-bf1cd4f1f4e6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_Relationships_SNOW#Response");


def ci_sys_id = holder.getNodeValue("//ns1:sys_id");

log.info "sys_id: " + ci_sys_id


testRunner.testCase.setPropertyValue("SYS_ID3", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="dad7ad96-7a48-412f-bcef-1581e47af6a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_NAME}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_NAME}</itp:param> 
		  <itp:param name="z_type">Members::Member of</itp:param>
          <itp:param name="z_sys_id">${#TestCase#SYS_ID3}</itp:param>

		  <itp:param name="z_port"></itp:param>
		  <itp:param name="z_connection_strength"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Received_Stage" id="bc65d2a4-86a0-4913-9d34-7e00e7634467"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Received_Stage" id="e6ddf49f-067b-49b1-8b36-da65ede3156d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Prepared_Stage" id="aa24c5a1-4745-4f85-ad7c-81a8fc09ff78"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Prepared_Stage" id="cabd793b-19ae-453d-a3eb-38377c8e72c7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Sent_Stage" id="d72751f8-4602-49ff-b208-3dc0c5753e38"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Sent_Stage" id="105445e6-5c77-4c93-8ee9-dddb375dde6e"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Replied_Stage" id="bbaa686f-869d-42ef-baa6-e5cb2b1aec63"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Replied_Stage" id="fabfa300-7fdb-4745-84a8-0787e20e1ac0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="12814480-f0b2-4216-8730-b3d218c097b7"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_rel_accept" id="0087f8d2-6c04-456c-8ec6-7291c01236c1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_rel_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_rel_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_NAME}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_NAME}</itp:param> 
		
          <itp:param name="z_sys_id">${#TestCase#SYS_ID1}</itp:param>

		

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Received_Stage" id="fba559b8-c5ea-4abc-b7ba-63e17291523d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Received_Stage" id="2efacf2e-a180-40ad-a52d-e924856ceec9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Prepared_Stage" id="995c5971-9825-4b28-b749-cc83418655a0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Prepared_Stage" id="75cb9918-7a10-46aa-b885-97c30154bd8c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Sent_Stage" id="b664507e-ce3c-485f-9e91-c4204e8962de"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Sent_Stage" id="184eba4e-4506-4fe6-a169-105aba92f48c"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Replied_Stage" id="bf2d91a2-c929-4fc7-9319-f88206aec5ed"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Replied_Stage" id="359f4f7f-b225-4f6b-97e5-0e717020ccd8"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_rel_accept" id="e44731f0-b1bf-4c5b-8f88-ee3d3b86c24c"><con:settings/><con:config><script>log.info "pro_ci_rel_accept has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_NAME", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID", (new Date()+1).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_NAME", (new Date()+1).format("yyyyMMddHHmmss")) 



</con:setupScript><con:properties><con:property><con:name>P_ID</con:name><con:value>20150909034947</con:value></con:property><con:property><con:name>P_CLASSS</con:name><con:value/></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>SYS_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7a5d024f6fda8a00c5afbd5dbb3ee4e1</con:value></con:property><con:property><con:name>P_NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20150909034947</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20150910034947</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>SYS_ID2</con:name><con:value>dfcd0ac76fdac6001a72be4dbb3ee47f</con:value></con:property><con:property><con:name>C_NAME</con:name><con:value>20150910034947</con:value></con:property><con:property><con:name>SYS_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5a3e8ac76fdac6001a72be4dbb3ee4a3</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSD] SD_CI_CREATE" searchProperties="true" id="76850997-402d-4d46-8482-f357f55d9511" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="25de4497-8d00-43a6-8305-3d1efa856b08"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5a16ac6e-96e5-4339-9932-8162c773bfb3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="71df6332-8bf0-48cc-8776-c21399ac9626"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="08fcaf01-b54a-4e08-995f-bb384aa51c37"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="40e9fb09-028d-4d49-8b66-4304bb10fc68"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="50a7515e-047b-4347-9788-b3f6ec044d8e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="eae2f730-0171-4fc9-ac1b-f6134ef794c0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="dc0a6e3b-323a-43ca-993d-66b36d650d42"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="d0cbf56b-f6f8-4f4d-b050-9af126a70872"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="a300e93a-f91c-4e49-8ac6-c8eefc3c37a2"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="bf407992-0c68-4476-89dd-267e3ea05e5f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="3f8881be-aaad-4f11-ac1c-8eeb76fb3747"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="9e6336c2-9094-4567-ba64-d451d17148b5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="a78ba29f-84fe-4178-bec2-247b825e9c71"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150908041500</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150908041501</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value>46890dbe6f568a00c5afbd5dbb3ee440</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSD] SD_CI_UPDATE" searchProperties="true" id="92b7773c-a68a-4ce2-b80c-b73deffcebae" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="8498bbc0-4f37-45a9-ab52-722003f624b2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d924935f-cc38-4572-b00f-82eb7eeb8a08"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c0c047b6-b19a-48b5-a262-52896fe8d523"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="fa3a2104-21c6-4c8a-bb25-63a1b77ab090"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="c4a0880c-7721-460c-8f55-7edb3cb9d4f3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4396dcca-eb71-480b-99f6-9f0f83c84217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b1070069-9a90-46dd-ab60-f6a42f89512a"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="8de20d0d-0818-440e-8e93-2d2975962dbf"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="b0424e2d-84cb-47c2-956f-7d7e2b487889"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6943344d-c790-4780-9d8d-691f8049ed6f"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="bc490837-67e7-4d64-b2ea-1c4fd51666c2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="850328e6-b80c-48d1-8973-2128710f839d"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b6a51a43-2359-4666-9c98-d2bd16ff4b53"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="8178d4f0-fe75-4992-b8b9-a73ba9f4630d"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="888ece87-7d98-4342-915c-6df1f7d5acca"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ddaff1fa-9aed-45dc-b67b-a413d1c6c898"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="84f30685-2bda-491d-a1d2-01094b29fa74"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="07e94818-e3ef-471d-9c71-edc1436f038a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8e68340a-dff4-40a9-8a04-579c69f011c4"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="f530792b-3edd-492c-bd29-753682afdc44"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="0478c229-61da-4f3a-988d-bcbb8cbfd1f7"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_update" id="bf942bc8-e6e6-4df3-9ee8-70ae1550d4e6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_update" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ab52a23a-722e-477e-8dce-7158cac40480"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<itp:token/>
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<itp:params>
					<!--pam parameters-->
					<itp:param name="request_type">sd_ci_update</itp:param>
					<itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
					<itp:param name="effectiveUser">configuration155</itp:param>
					 <!--Standard CI Adapter parameters-->
					
					<itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
		  			<itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
		  			<itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
		  			<itp:param name="z_name">${#TestCase#NAME}</itp:param>
		  			<itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>		  
		  			<itp:param name="z_sys_id">${#TestCase#SYS_ID}</itp:param>
		  			<itp:param name="z_location">Americas</itp:param>
		  			<itp:param name="z_support_group">Approval Group Testing 2</itp:param>
		  			<itp:param name="z_manufacturer_name">Apple</itp:param>
		  			<itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  			<itp:param name="z_status">In Stock</itp:param>
            			<itp:param name="z_used_for">Production</itp:param>	
            			<itp:param name="z_business_criticality">4 - not critical</itp:param>
		  			<itp:param name="z_match_type">Serial, Nodename</itp:param>
		  			<itp:param name="z_operational_status">DR Standby</itp:param>
		  			<itp:param name="z_supported">Yes</itp:param>
		  			<itp:param name="z_type">iPlanet</itp:param>
		  			<itp:param name="z_maintenance_schedule">[123]</itp:param>
		  			<itp:param name="z_normal_output_voltage">[345]</itp:param>
					
					
					
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope> ]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e4f4977a-8560-476c-b073-9f1c18d51963"/><con:assertion type="XQuery Match" name="XQuery z_incident_identifier" id="df7352e5-59b4-4d92-9406-68403a31b323"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Received_Stage" id="ecba9680-f9aa-40e8-8df0-0019e02fc1af"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d5d8efd7-3440-4b01-a812-005e2c9975c7"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Received_Stage" id="a462fef6-aabb-4578-a295-7764eff62046"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Prepared_Stage" id="a24e1a74-de86-48e6-921f-e16833127def"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="749c708c-99ee-4ec0-af79-7be10ada8e22"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Prepared_Stage" id="7de92daa-cef0-4fdf-98d1-622f53d5acee"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Sent_Stage" id="9ccbd2ef-9332-438d-9421-5f346003efc5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3199153e-6524-4639-8bef-96716964ce71"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Sent_Stage" id="7feee215-df5b-484f-82db-4ab25b84429f"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_update_Replied_Stage" id="9c577818-3382-43f9-9e49-57d294ca7a46"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_update'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4ae2bb08-fde2-4ec1-a983-223ba1a664c9"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_update_Replied_Stage" id="4519bc81-c093-476c-b90a-732708537798"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_update_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_update" id="8429968a-ec07-4e28-93dc-cf77d3a83c23"><con:settings/><con:config><script>log.info "sd_ci_update has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150914022116</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150914022116</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value>b829efe06f628a001a72be4dbb3ee462</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSD] SD_CI_RETIRE" searchProperties="true" id="5e45202c-c25e-476c-870a-a44f5721e6d3" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CI_SNOW" id="614eba9d-2985-4b75-a20c-6690c4dc884a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e156f2cd-0681-4427-b515-f3b9361a6676"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fc1f1c70-37bc-4910-b6ba-cb0f2a5c7b7f"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property" id="05f5f3a2-e454-4b80-a8a8-4ae52eecc7dc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create" id="54241d99-b975-4cac-a66a-d33ee8c209fe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4396dcca-eb71-480b-99f6-9f0f83c84217"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b1070069-9a90-46dd-ab60-f6a42f89512a"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="8de20d0d-0818-440e-8e93-2d2975962dbf"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="0f9c8ea8-cd5d-47d2-88b6-2af3e892b4e6"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="6943344d-c790-4780-9d8d-691f8049ed6f"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="15a7cddd-198d-4503-a424-2cbc4c42ac81"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="8bd40299-7815-4d82-8737-30a580a431e0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="b6a51a43-2359-4666-9c98-d2bd16ff4b53"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="ea2230a2-e457-4a49-bf37-c60c6816755f"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="1e877994-86e7-4047-b3ad-9a77bbdc848a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ddaff1fa-9aed-45dc-b67b-a413d1c6c898"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="d8093318-dceb-4b42-9ad5-c260dbf16c8b"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)
testRunner.testCase.setPropertyValue("RECEIVER_ID", ci)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="0061c537-c58c-401d-84ae-8ab27cf41150"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="8e68340a-dff4-40a9-8a04-579c69f011c4"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="144c82bb-074f-45b8-a054-6707ad7a38d2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="2fc46014-b7cc-4fb3-8dca-7b498fe40ab3"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_retire" id="d21dcc05-934a-40be-8391-4fb860544450"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_retire" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="ab52a23a-722e-477e-8dce-7158cac40480"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
   <soapenv:Header/>
   <soapenv:Body>
      <itp:executeProcess>
         <itp:flow>
            <itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
            <itp:action>start</itp:action>
            <itp:auth>
               <itp:token/>
               <itp:user>pamadmin</itp:user>
               <itp:password>pamadmin</itp:password>
            </itp:auth>
            <itp:params>
               <!--pam parameters-->
               <itp:param name="request_type">sd_ci_retire</itp:param>
               <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
               <itp:param name="effectiveUser">configuration155</itp:param>
               <!--Standard CI Adapter parameters-->
              
              
               <itp:param name="z_class">${#TestCase#CLASS}</itp:param>
               <itp:param name="z_company">${#TestCase#COMPANY}</itp:param>
              
              
              
               <itp:param name="z_name">${#TestCase#NAME}</itp:param>
              
              
			<itp:param name="z_sys_id">${#TestCase#SYS_ID}</itp:param>
               
               
               
               
            </itp:params>
         </itp:flow>
      </itp:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="e4f4977a-8560-476c-b073-9f1c18d51963"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Received_Stage" id="7fc520e0-7043-4e29-ba80-d5978b63ee25"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT  [fw_request].[fk], [fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="d5d8efd7-3440-4b01-a812-005e2c9975c7"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Received_Stage" id="ed80ebbd-48eb-4b01-815d-5b3518005fc9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Prepared_Stage" id="edc0cc9e-bc59-4db9-ae33-fdcf6ab3cff5"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="749c708c-99ee-4ec0-af79-7be10ada8e22"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Prepared_Stage" id="837caa4f-9186-4705-a605-9f9f24627692"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Sent_Stage" id="a5c646f5-936a-4430-95ca-b888eb35d550"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="3199153e-6524-4639-8bef-96716964ce71"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Sent_Stage" id="21664504-bf11-41e7-b0ca-356b9b0fa546"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_retire_Replied_Stage" id="33e731aa-d26a-4b48-a4d3-31dd1b66362b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_retire'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="4ae2bb08-fde2-4ec1-a983-223ba1a664c9"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_retire_Replied_Stage" id="e6c6145d-66f3-4489-bd10-0f5469c7a4f5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_retire_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_retire" id="e93f2cd8-6a13-44c7-9c4e-21d97a06bce0"><con:settings/><con:config><script>log.info "sd_ci_retire has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150911025619</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150911025619</con:value></con:property><con:property><con:name>RECEIVER_ID</con:name><con:value>33545c3b6fd6ca00c5afbd5dbb3ee4cd</con:value></con:property><con:property><con:name>SYS_ID</con:name><con:value>33545c3b6fd6ca00c5afbd5dbb3ee4cd</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[CSCaaSD] SD_CI_REL_BREAK" searchProperties="true" id="ccc9720c-5d8c-4b5d-a1b5-c1b157538852" disabled="true"><con:settings/><con:testStep type="request" name="insert - Create_CI1_SNOW" id="e1cfedf1-d0ca-45eb-a3f7-0c713dba4cc6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI1_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a37ae017-f1d6-4414-ae63-9b8faff590da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#P_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#P_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#P_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#P_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#P_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#P_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="086c4474-23e0-4b81-b601-df68065ba918"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property1" id="ba07bfad-3b0d-464c-a169-7ec1746d42e7"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI1_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("P_NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID1", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create1" id="4d627b9c-b2e5-4f13-9f60-8edbf5e2a691"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#P_ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#P_ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID1}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#P_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Received_Stage" id="a9c2947e-1380-4526-9dce-e2894749accf"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Received_Stage" id="d1fa46a2-cde7-4f1c-a756-c7b3c58b5c40"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Prepared_Stage" id="3659ca80-8ac7-4807-8ecb-ef83b80c7728"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Prepared_Stage" id="bca5314f-5c85-4186-8d76-894b4fa66cb1"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Sent_Stage" id="74dbdbf7-56b7-4a14-a6bc-7a45dc6608f9"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Sent_Stage" id="8be03d29-1b50-436d-9049-41d56f99cbd2"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create1_Replied_Stage" id="9ecc4c64-1a11-4a2a-a0c5-077ca44fa76a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID1}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create1_Replied_Stage" id="a0aa6264-cc36-41b7-b54b-741798627b0e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create1" id="e4a487e3-ac2a-4e9b-a1f6-302b54b4801b"><con:settings/><con:config><script>log.info "sd_ci_create1 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept1" id="a82defd1-bc59-4442-ab4c-89d7e5384de5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>
		  <!--ci adapter parameters-->
		  
		  <itp:param name="z_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#P_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#P_NAME}</itp:param>
		  
		 <itp:param name="z_provider_sys_id">${#TestCase#SYS_ID1}</itp:param>
		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Received_Stage" id="ba6805e6-3f59-4bb5-a828-2dea41a08e52"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Received_Stage" id="a0d57b61-f0d4-4c71-9d3a-08efc0068f78"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Prepared_Stage" id="0c7043a0-d4ea-4d15-94ad-a39ec7f18415"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Prepared_Stage" id="39ac1117-c41d-4adc-ace0-dce4a5182e63"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Sent_Stage" id="63228ee1-5e4a-464f-b736-68509edc9023"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Sent_Stage" id="cc4c0a65-d2e3-4ba1-82b3-6a3faf9af038"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept1_Replied_Stage" id="b3a57204-63e9-475e-90c4-34ea9c48e06e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept1_Replied_Stage" id="2308ce09-9381-4b26-b43a-4174cf769485"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept1_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept1" id="61525a27-ac84-4518-9ce4-3371673e9400"><con:settings/><con:config><script>log.info "pro_ci_accept1 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_CI2_SNOW" id="1415e124-2ea7-4ae1-8b87-093bf830475f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_CI2_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6dafe35c-fa7a-4aa7-b42b-0c38d2c2c3ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_create.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_create">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_agent_software_version></u_agent_software_version>
         <!--Optional:-->
         <u_asset></u_asset>
         <!--Optional:-->
         <u_asset_tag>${#TestCase#C_ID}</u_asset_tag>
         <!--Optional:-->
         <u_assigned_to></u_assigned_to>
         <!--Optional:-->
         <u_attached_devices></u_attached_devices>
         <!--Optional:-->
         <u_attached_to></u_attached_to>
         <!--Optional:-->
         <u_attributes></u_attributes>
         <!--Optional:-->
         <u_audible_alarm_status></u_audible_alarm_status>
         <!--Optional:-->
         <u_bandwidth></u_bandwidth>
         <!--Optional:-->
         <u_battery_current></u_battery_current>
         <!--Optional:-->
         <u_battery_last_replaced></u_battery_last_replaced>
         <!--Optional:-->
         <u_battery_status></u_battery_status>
         <!--Optional:-->
         <u_battery_temperature></u_battery_temperature>
         <!--Optional:-->
         <u_battery_voltage></u_battery_voltage>
         <!--Optional:-->
         <u_busines_criticality></u_busines_criticality>
         <!--Optional:-->
         <u_bypass_freq></u_bypass_freq>
         <!--Optional:-->
         <u_can_hub></u_can_hub>
         <!--Optional:-->
         <u_can_partitionvlans></u_can_partitionvlans>
         <!--Optional:-->
         <u_can_print></u_can_print>
         <!--Optional:-->
         <u_can_route></u_can_route>
         <!--Optional:-->
         <u_can_switch></u_can_switch>
         <!--Optional:-->
         <u_capacity></u_capacity>
         <!--Optional:-->
         <u_category></u_category>
         <!--Optional:-->
         <u_cd_rom></u_cd_rom>
         <!--Optional:-->
         <u_cd_speed></u_cd_speed>
         <!--Optional:-->
         <u_change_control>Approval Test1</u_change_control>
         <!--Optional:-->
         <u_channels></u_channels>
         <!--Optional:-->
         <u_chassis_type></u_chassis_type>
         <!--Optional:-->
         <u_checked_in></u_checked_in>
         <!--Optional:-->
         <u_checked_out></u_checked_out>
         <!--Optional:-->
         <u_class_name>${#TestCase#C_CLASS}</u_class_name>
         <!--Optional:-->
         <u_classification></u_classification>
         <!--Optional:-->
         <u_classifier></u_classifier>
         <!--Optional:-->
         <u_cluster_status></u_cluster_status>
         <!--Optional:-->
         <u_color></u_color>
         <!--Optional:-->
         <u_colors></u_colors>
         <!--Optional:-->
         <u_comments></u_comments>
         <!--Optional:-->
         <u_company>${#TestCase#C_COMPANY}</u_company>
         <!--Optional:-->
         <u_computer></u_computer>
         <!--Optional:-->
         <u_correlation_id></u_correlation_id>
         <!--Optional:-->
         <u_cost></u_cost>
         <!--Optional:-->
         <u_cost_cc></u_cost_cc>
         <!--Optional:-->
         <u_cost_center></u_cost_center>
         <!--Optional:-->
         <u_cpu_core_count></u_cpu_core_count>
         <!--Optional:-->
         <u_cpu_core_thread></u_cpu_core_thread>
         <!--Optional:-->
         <u_cpu_count></u_cpu_count>
         <!--Optional:-->
         <u_cpu_manufacturer></u_cpu_manufacturer>
         <!--Optional:-->
         <u_cpu_name></u_cpu_name>
         <!--Optional:-->
         <u_cpu_speed></u_cpu_speed>
         <!--Optional:-->
         <u_cpu_type></u_cpu_type>
         <!--Optional:-->
         <u_current_load_amps></u_current_load_amps>
         <!--Optional:-->
         <u_current_load_state></u_current_load_state>
         <!--Optional:-->
         <u_date_of_man></u_date_of_man>
         <!--Optional:-->
         <u_db_server></u_db_server>
         <!--Optional:-->
         <u_default_gateway></u_default_gateway>
         <!--Optional:-->
         <u_delivery_date></u_delivery_date>
         <!--Optional:-->
         <u_department></u_department>
         <!--Optional:-->
         <u_device_type></u_device_type>
         <!--Optional:-->
         <u_discovery_source></u_discovery_source>
         <!--Optional:-->
         <u_disk_size></u_disk_size>
         <!--Optional:-->
         <u_disk_space></u_disk_space>
         <!--Optional:-->
         <u_dns_domain></u_dns_domain>
         <!--Optional:-->
         <u_dr_backup></u_dr_backup>
         <!--Optional:-->
         <u_due></u_due>
         <!--Optional:-->
         <u_due_in></u_due_in>
         <!--Optional:-->
         <u_est_charge_remaining></u_est_charge_remaining>
         <!--Optional:-->
         <u_est_mins_remaining></u_est_mins_remaining>
         <!--Optional:-->
         <u_fault_count></u_fault_count>
         <!--Optional:-->
         <u_firewall_status></u_firewall_status>
         <!--Optional:-->
         <u_firmware_manufacturer></u_firmware_manufacturer>
         <!--Optional:-->
         <u_firmware_version></u_firmware_version>
         <!--Optional:-->
         <u_first_discovered></u_first_discovered>
         <!--Optional:-->
         <u_floppy></u_floppy>
         <!--Optional:-->
         <u_footprint></u_footprint>
         <!--Optional:-->
         <u_form_factor></u_form_factor>
         <!--Optional:-->
         <u_fqdn></u_fqdn>
         <!--Optional:-->
         <u_gl_account></u_gl_account>
         <!--Optional:-->
         <u_hardware_substatus></u_hardware_substatus>
         <!--Optional:-->
         <u_hardware_version></u_hardware_version>
         <!--Optional:-->
         <u_high_voltage_transfer_point></u_high_voltage_transfer_point>
         <!--Optional:-->
         <u_horizontal_resolution></u_horizontal_resolution>
         <!--Optional:-->
         <u_host_name></u_host_name>
         <!--Optional:-->
         <u_input_line_bads></u_input_line_bads>
         <!--Optional:-->
         <u_install_count></u_install_count>
         <!--Optional:-->
         <u_install_date></u_install_date>
         <!--Optional:-->
         <u_install_status>On Order</u_install_status>
         <!--Optional:-->
         <u_internal_error_message></u_internal_error_message>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_invoice_number></u_invoice_number>
         <!--Optional:-->
         <u_ip_address></u_ip_address>
         <!--Optional:-->
         <u_justification></u_justification>
         <!--Optional:-->
         <u_kernel_release></u_kernel_release>
         <!--Optional:-->
         <u_key></u_key>
         <!--Optional:-->
         <u_last_discovered></u_last_discovered>
         <!--Optional:-->
         <u_lease_id></u_lease_id>
         <!--Optional:-->
         <u_license_available></u_license_available>
         <!--Optional:-->
         <u_license_count></u_license_count>
         <!--Optional:-->
         <u_location>Americas</u_location>
         <!--Optional:-->
         <u_low_battery_threshold_mins></u_low_battery_threshold_mins>
         <!--Optional:-->
         <u_low_voltage_transfer_point></u_low_voltage_transfer_point>
         <!--Optional:-->
         <u_mac_address></u_mac_address>
         <!--Optional:-->
         <u_mainframe></u_mainframe>
         <!--Optional:-->
         <u_maintenance_schedule></u_maintenance_schedule>
         <!--Optional:-->
         <u_managed_by></u_managed_by>
         <!--Optional:-->
         <u_managed_domain></u_managed_domain>
         <!--Optional:-->
         <u_manufacturer>10Tec</u_manufacturer>
         <!--Optional:-->
         <u_master_state></u_master_state>
         <!--Optional:-->
         <u_match_type></u_match_type>
         <!--Optional:-->
         <u_model_id>Back-UPS 500</u_model_id>
         <!--Optional:-->
         <u_model_number>M003</u_model_number>
         <!--Optional:-->
         <u_monitor></u_monitor>
         <!--Optional:-->
         <u_monitored></u_monitored>
         <!--Optional:-->
         <u_msft_sms_id></u_msft_sms_id>
         <!--Optional:-->
         <u_name>${#TestCase#C_NAME}</u_name>
         <!--Optional:-->
         <u_nom_input_freq></u_nom_input_freq>
         <!--Optional:-->
         <u_nom_input_volt></u_nom_input_volt>
         <!--Optional:-->
         <u_nom_output_freq></u_nom_output_freq>
         <!--Optional:-->
         <u_nom_output_volt></u_nom_output_volt>
         <!--Optional:-->
         <u_operational_status></u_operational_status>
         <!--Optional:-->
         <u_order_date></u_order_date>
         <!--Optional:-->
         <u_os></u_os>
         <!--Optional:-->
         <u_os_address_width></u_os_address_width>
         <!--Optional:-->
         <u_os_domain></u_os_domain>
         <!--Optional:-->
         <u_os_service_pack></u_os_service_pack>
         <!--Optional:-->
         <u_os_version></u_os_version>
         <!--Optional:-->
         <u_outlet_count></u_outlet_count>
         <!--Optional:-->
         <u_output_freq></u_output_freq>
         <!--Optional:-->
         <u_output_source></u_output_source>
         <!--Optional:-->
         <u_owned_by></u_owned_by>
         <!--Optional:-->
         <u_package_name></u_package_name>
         <!--Optional:-->
         <u_paper></u_paper>
         <!--Optional:-->
         <u_parent></u_parent>
         <!--Optional:-->
         <u_part_of></u_part_of>
         <!--Optional:-->
         <u_pcl></u_pcl>
         <!--Optional:-->
         <u_phone_number></u_phone_number>
         <!--Optional:-->
         <u_physical_interface_count></u_physical_interface_count>
         <!--Optional:-->
         <u_pid></u_pid>
         <!--Optional:-->
         <u_po_number></u_po_number>
         <!--Optional:-->
         <u_ports></u_ports>
         <!--Optional:-->
         <u_postscript></u_postscript>
         <!--Optional:-->
         <u_power_consumption></u_power_consumption>
         <!--Optional:-->
         <u_ppm></u_ppm>
         <!--Optional:-->
         <u_print_type></u_print_type>
         <!--Optional:-->
         <u_provided_by></u_provided_by>
         <!--Optional:-->
         <u_purchase_date></u_purchase_date>
         <!--Optional:-->
         <u_rack_units></u_rack_units>
         <!--Optional:-->
         <u_rack_units_in_use></u_rack_units_in_use>
         <!--Optional:-->
         <u_raid_type></u_raid_type>
         <!--Optional:-->
         <u_ram></u_ram>
         <!--Optional:-->
         <u_range></u_range>
         <!--Optional:-->
         <u_rated_output_power></u_rated_output_power>
         <!--Optional:-->
         <u_rated_output_va></u_rated_output_va>
         <!--Optional:-->
         <u_resolution_units></u_resolution_units>
         <!--Optional:-->
         <u_seconds_on_battery></u_seconds_on_battery>
         <!--Optional:-->
         <u_seconds_on_battery_desired></u_seconds_on_battery_desired>
         <!--Optional:-->
         <u_serial_number>serial_number${#TestCase#C_ID}</u_serial_number>
         <!--Optional:-->
         <u_shared></u_shared>
         <!--Optional:-->
         <u_short_description></u_short_description>
         <!--Optional:-->
         <u_skip_sync></u_skip_sync>
         <!--Optional:-->
         <u_sla></u_sla>
         <!--Optional:-->
         <u_start_date></u_start_date>
         <!--Optional:-->
         <u_subcategory></u_subcategory>
         <!--Optional:-->
         <u_support_group>Area 1-00</u_support_group>
         <!--Optional:-->
         <u_supported></u_supported>
         <!--Optional:-->
         <u_supported_by></u_supported_by>
         <!--Optional:-->
         <u_class_sys_id>${#TestCase#C_CLASS}</u_class_sys_id>
         <!--Optional:-->
         <u_tcp_port></u_tcp_port>
         <!--Optional:-->
         <u_transaction_code>SD_CI_CREATE</u_transaction_code>
         <!--Optional:-->
         <u_type></u_type>
         <!--Optional:-->
         <u_unverified></u_unverified>
         <!--Optional:-->
         <u_ups_software_version></u_ups_software_version>
         <!--Optional:-->
         <u_use_count></u_use_count>
         <!--Optional:-->
         <u_use_units></u_use_units>
         <!--Optional:-->
         <u_used_for></u_used_for>
         <!--Optional:-->
         <u_user_group></u_user_group>
         <!--Optional:-->
         <u_vendor></u_vendor>
         <!--Optional:-->
         <u_version></u_version>
         <!--Optional:-->
         <u_vertical_resolution></u_vertical_resolution>
         <!--Optional:-->
         <u_virtual></u_virtual>
         <!--Optional:-->
         <u_watts></u_watts>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8dfb37dd-ead6-435b-b2f2-a6ef83d5b5f8"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_create/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property2" id="1e944388-2307-4131-ba8d-306aeff144df"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_CI2_SNOW#Response");

def ciName = holder.getNodeValue("//ns1:display_value");
def ci_sys_id = holder.getNodeValue("//ns1:sys_id");
log.info "name: " + ciName
log.info "sys_id: " + ci_sys_id

testRunner.testCase.setPropertyValue("C_NAME", ciName)
testRunner.testCase.setPropertyValue("SYS_ID2", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_create2" id="cbe3e654-e216-4e95-bd6a-467e84c8a4ce"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_create2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>
		  <!--ci adapter parameters-->
		  <itp:param name="z_asset_tag">${#TestCase#C_ID}</itp:param>
		  <itp:param name="z_class_name">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
		  <itp:param name="z_serial_number">serial_number${#TestCase#C_ID}</itp:param>		  
		  <itp:param name="z_sys_id">${#TestCase#SYS_ID2}</itp:param>
		  <itp:param name="z_location">Americas</itp:param>
		  <itp:param name="z_support_group">Area 1-00</itp:param>
		  <itp:param name="z_manufacturer_name">Apple</itp:param>
		  <itp:param name="z_model_id">MacIntosh Quadra 900</itp:param>
		  <itp:param name="z_status">In Transit</itp:param>
		  <itp:param name="z_used_for">Staging</itp:param>	
		  <itp:param name="z_business_criticality">1 - most critical</itp:param>
		  <itp:param name="z_match_type">Serial, Nodename</itp:param>
		  <itp:param name="z_operational_status">Non-Operational</itp:param>
		  <itp:param name="z_supported">Yes</itp:param>
		  <itp:param name="z_type">Cisco</itp:param>
		  <itp:param name="z_maintenance_schedule">[null]</itp:param>
		  <itp:param name="z_normal_output_voltage">[null]</itp:param>
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:assertion type="XQuery Match" name="XQuery z_asset_tag" id="3f736bd9-e5a0-4ad3-9fd7-366660c66859"><con:configuration><path>declare namespace var='http://www.ca.com/itpam';
//var:ExecuteC2OFlowResult/var:params/var:param[@name='z_asset_tag']</path><content>&lt;itp:param name="z_asset_tag" xmlns:itp="http://www.ca.com/itpam">${#TestCase#C_ID}&lt;/itp:param></content><allowWildcards>true</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Received_Stage" id="457416f6-3571-4c99-a041-faada51e3ac1"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Received_Stage" id="55d0c780-75e3-4e27-a71a-cbcb75fba102"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Prepared_Stage" id="48528293-fce1-47fa-afdd-5637a87e6f0c"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Prepared_Stage" id="bb6e415a-8c96-4344-898e-478c84ca79db"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Sent_Stage" id="5e5e3597-a8a4-4822-8e8b-5fca01aed4e0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Sent_Stage" id="4d4111fd-dae6-4480-96fc-ec5c089b8543"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create2_Replied_Stage" id="74dfcec5-176e-4d03-b374-10c9b6c27cef"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID2}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create2_Replied_Stage" id="6c84a513-e533-4e1d-be3c-734363043468"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create2" id="0e813de3-6054-44bd-bc24-8b06b71cb797"><con:settings/><con:config><script>log.info "sd_ci_create2 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_accept2" id="fc4e177f-b54f-47cd-9b3d-3ffd6f9177d3"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_accept2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>
		  <!--ci adapter parameters-->
		  
		  <itp:param name="z_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_name">${#TestCase#C_NAME}</itp:param>
		  
		 <itp:param name="z_provider_sys_id">${#TestCase#SYS_ID2}</itp:param>
		  
		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Received_Stage" id="30c47a3c-02ac-42a3-8a61-c71a06f0721b"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Received_Stage" id="dac0a0a7-2322-49e4-b826-84a18b9b9ea0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Prepared_Stage" id="ef8172cc-70f6-472d-b8e4-4ab6a850a989"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Prepared_Stage" id="ce0f081b-c89f-4476-83e0-491d95915dab"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Sent_Stage" id="a50980ab-e475-4571-a680-0ded3ba1c197"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Sent_Stage" id="8edf4a5e-172c-4973-85c6-e7d7bae0db0a"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_accept2_Replied_Stage" id="58bac63c-4e02-4147-98cd-7aeac2bc34bd"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#C_CLASS},${#TestCase#C_COMPANY},${#TestCase#C_NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_accept2_Replied_Stage" id="49384e60-c7d1-4b91-aa1d-af7dc7d64e4c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_accept2_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_accept2" id="6f32cd76-7d55-41d0-b4f5-95b117a13c06"><con:settings/><con:config><script>log.info "pro_ci_accept2 has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_Relationships_SNOW" id="5c6d6d38-272e-4794-84c1-20c6fe07f1f2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_Relationships_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="98b7f96c-d381-45d1-b1e0-0ef557fd823f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relationship_.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>${#TestCase#C_CLASS}</u_child_class>
         <!--Optional:-->
         <u_child_company>${#TestCase#C_COMPANY}</u_child_company>
         <!--Optional:-->
         <u_child_name>${#TestCase#C_NAME}</u_child_name>
         <!--Optional:-->
         <u_connection_strength></u_connection_strength>
         <!--Optional:-->
         <u_parent_class>${#TestCase#P_CLASS}</u_parent_class>
         <!--Optional:-->
         <u_parent_company>${#TestCase#P_COMPANY}</u_parent_company>
         <!--Optional:-->
         <u_parent_name>${#TestCase#P_NAME}</u_parent_name>
         <!--Optional:-->
         <u_port>80</u_port>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_CREATE</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="cece91f4-4b0e-45a8-9e5c-75b36048fa3a"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relationship_/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Set_Property_Relationships" id="22617695-7ac7-48b5-96cb-24797652db09"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("insert - Create_Relationships_SNOW#Response");


def ci_sys_id = holder.getNodeValue("//ns1:sys_id");

log.info "sys_id: " + ci_sys_id


testRunner.testCase.setPropertyValue("SYS_ID3", ci_sys_id)</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_create" id="e079c8db-6c91-4771-9830-220b1fef3b2a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_create" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_create</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration154</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_NAME}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_NAME}</itp:param> 
		  <itp:param name="z_type">Members::Member of</itp:param>
          <itp:param name="z_sys_id">${#TestCase#SYS_ID3}</itp:param>

		  <itp:param name="z_port"></itp:param>
		  <itp:param name="z_connection_strength"></itp:param>

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Received_Stage" id="54681bba-01b9-46ab-8fcd-897f2a08bfa8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Received_Stage" id="d5b6aeaa-700c-4216-9f5a-62032b22cb55"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Prepared_Stage" id="9a96e916-8882-4186-aa7b-fb530bf3041e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Prepared_Stage" id="082f0b44-6b31-4fab-ae09-086ebde56c6e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Sent_Stage" id="4c5d7761-4ecd-400c-a509-9202950447a8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Sent_Stage" id="5100df7b-d750-4d3b-a6ea-cc4f22762baf"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_create_Replied_Stage" id="736dc098-b20c-4443-9ccc-bc7e56188471"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_create_Replied_Stage" id="03987041-921c-4645-8a92-7fbe9912ad61"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_create" id="d8dd403b-3d84-410d-8e85-d89245c7a26a"><con:settings/><con:config><script>log.info "sd_ci_rel_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - pro_ci_rel_accept" id="b725ceb1-2d44-4e3d-8291-ba46f1dda221"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - pro_ci_rel_accept" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">pro_ci_rel_accept</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration153</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_NAME}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_NAME}</itp:param> 
		
          <itp:param name="z_sys_id">${#TestCase#SYS_ID1}</itp:param>

		

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Received_Stage" id="1475feae-da3b-44bb-a75f-28163ddd9ddc"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Received_Stage" id="50b8b12d-8468-4ffc-a17d-f5f9df948556"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Prepared_Stage" id="3bd6a526-dbb8-4c79-bb2b-cfe43ea63a2a"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Prepared_Stage" id="6757b608-0113-4291-a58f-0f842e39c162"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Sent_Stage" id="8df43fd3-e7af-4b51-9579-548fcf9c1e18"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Sent_Stage" id="a59f0b76-2b42-4110-8179-2edebecccd50"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)


if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_pro_ci_rel_accept_Replied_Stage" id="ad0b4fe0-6550-4d13-a770-0cb2dbe28e66"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'pro_ci_rel_accept'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#P_CLASS},${#TestCase#P_COMPANY},${#TestCase#P_NAME},${#TestCase#C_COMPANY},${#TestCase#C_NAME},${#TestCase#C_CLASS}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_pro_ci_rel_accept_Replied_Stage" id="03d600f3-70fb-4a0c-8007-cb8a5354bab4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_pro_ci_rel_accept_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_pro_ci_rel_accept" id="e3c93552-2fca-41e2-8a3f-c48078101346"><con:settings/><con:config><script>log.info "pro_ci_rel_accept has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="insert - Create_Relationships_Break_SNOW" id="55af2544-760d-4011-8cf1-1edec742da3b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ServiceNowSoap</con:interface><con:operation>insert</con:operation><con:request name="insert - Create_Relationships_Break_SNOW" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="848d71ef-eaa2-405a-bfe0-0fe7267af9a7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://cscdev.service-now.com/u_connectnow_standard_cmdb_relations_upd.do?SOAP</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:u="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd">
   <soapenv:Header/>
   <soapenv:Body>
      <u:insert>
         <!--Optional:-->
         <template_import_log></template_import_log>
         <!--Optional:-->
         <u_child_class>${#TestCase#C_CLASS}</u_child_class>
         <!--Optional:-->
         <u_child_company>${#TestCase#C_COMPANY}</u_child_company>
         <!--Optional:-->
         <u_child_name>${#TestCase#C_NAME}</u_child_name>
         <!--Optional:-->
         <u_child_sys_id></u_child_sys_id>
         <!--Optional:-->
         <u_ci_rel_sys_id>${#TestCase#SYS_ID3}</u_ci_rel_sys_id>
         <!--Optional:-->
         <u_internal_status_message></u_internal_status_message>
         <!--Optional:-->
         <u_parent_class>${#TestCase#P_CLASS}</u_parent_class>
         <!--Optional:-->
         <u_parent_company>${#TestCase#P_COMPANY}</u_parent_company>
         <!--Optional:-->
         <u_parent_name>${#TestCase#P_NAME}</u_parent_name>
         <!--Optional:-->
         <u_parent_sys_id></u_parent_sys_id>
         <!--Optional:-->
         <u_relationship_type>Members::Member of</u_relationship_type>
         <!--Optional:-->
         <u_transaction_code>SD_CI_REL_BREAK</u_transaction_code>
      </u:insert>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="bd51d503-1090-49f9-99ce-a8e1e2729333"/><con:credentials><con:username>pamadmin</con:username><con:password>pamadmin</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://www.service-now.com/u_connectnow_standard_cmdb_relations_upd/insert"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ExecuteProcess - sd_ci_rel_break" id="411fd0b8-b3d6-498d-8c44-a3d72b43d074"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="ExecuteProcess - sd_ci_rel_break" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
  <soapenv:Header/>
  <soapenv:Body>
	<itp:executeProcess>
	  <itp:flow>
		<itp:name>/Integrations/Adapters/Standard/Processes/MASTER_001</itp:name>
		<itp:action>start</itp:action>
		<itp:auth>
		  <itp:token/>
		  <itp:user>pamadmin</itp:user>
		  <itp:password>pamadmin</itp:password>
		</itp:auth>
		<itp:params>
		  <!--pam parameters-->
		  <itp:param name="request_type">sd_ci_rel_break</itp:param>
		  <itp:param name="sender">cscoamndc102-de.amer.csc.com:8090</itp:param>
		  <itp:param name="effectiveUser">configuration155</itp:param>

		  <!--CI ServiceNow Adapter parameters-->		  
		  <itp:param name="z_parent_company">${#TestCase#P_COMPANY}</itp:param>	
		  <itp:param name="z_parent_class">${#TestCase#P_CLASS}</itp:param>
		  <itp:param name="z_parent_config_item">${#TestCase#P_NAME}</itp:param>		  	  
		  <itp:param name="z_child_class">${#TestCase#C_CLASS}</itp:param>
		  <itp:param name="z_child_company">${#TestCase#C_COMPANY}</itp:param>
		  <itp:param name="z_child_config_item">${#TestCase#C_NAME}</itp:param> 
		  <itp:param name="z_type">Members::Member of</itp:param>
          <itp:param name="z_sys_id">${#TestCase#SYS_ID3}</itp:param>

	

		</itp:params>
	  </itp:flow>
	</itp:executeProcess>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Received_Stage" id="5b2cebbe-bf96-4d0a-95f8-436f5533bb26"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Received_Stage" id="7a5a8768-d168-4b1e-93e9-ebd2ccfb84ce"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Prepared_Stage" id="7c88b466-725f-42f5-bfc1-178b543f1898"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Prepared_Stage" id="a224b10e-81c3-47bc-8329-4f106e2e296b"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Sent_Stage" id="465ccdff-3c59-49fb-96c3-3c59014c4996"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Sent_Stage" id="eb87cb82-bd72-4d01-b936-3c1240737a89"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_rel_break_Replied_Stage" id="a4fbad2b-0d49-4173-96cf-c2540b8ffa7e"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_rel_break'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#SYS_ID3}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_rel_break_Replied_Stage" id="bac6b0ad-8bd4-4cd4-a0c5-d8c20b1653d2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_rel_break_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_rel_break" id="1a57555c-1524-4a48-bd9f-925b3f2637c3"><con:settings/><con:config><script>log.info "sd_ci_rel_break has ran successfully"</script></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("P_ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("P_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("P_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("P_NAME", new Date().format("yyyyMMddHHmmss")) 

testRunner.testCase.setPropertyValue("C_ID", (new Date()+1).format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("C_CLASS","Business Service") 
testRunner.testCase.setPropertyValue("C_COMPANY","CSC Internal") 
testRunner.testCase.setPropertyValue("C_NAME", (new Date()+1).format("yyyyMMddHHmmss")) 



</con:setupScript><con:properties><con:property><con:name>P_ID</con:name><con:value>20150911021442</con:value></con:property><con:property><con:name>P_CLASSS</con:name><con:value/></con:property><con:property><con:name>P_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>SYS_ID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">69ea007b6f9a0a001a72be4dbb3ee4b9</con:value></con:property><con:property><con:name>P_NAME</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20150911021443</con:value></con:property><con:property><con:name>C_ID</con:name><con:value>20150912021443</con:value></con:property><con:property><con:name>C_CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>C_COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>SYS_ID2</con:name><con:value>b57bc07b6f9a0a001a72be4dbb3ee4d5</con:value></con:property><con:property><con:name>C_NAME</con:name><con:value>20150912021443</con:value></con:property><con:property><con:name>SYS_ID3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">41eb847b6f9a0a001a72be4dbb3ee4d9</con:value></con:property><con:property><con:name>P_CLASS</con:name><con:value>Business Service</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="[SN] SD_CI_CREATE" searchProperties="true" id="f2592df9-6c8b-43fe-9900-1022ba58738d" disabled="true"><con:settings/><con:testStep type="request" name="[3rd]sd_ci_create_Successful" id="db00b028-73da-4720-a96e-3e4280c53ad9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:itp="http://www.ca.com/itpam">
	<soapenv:Header/>
	<soapenv:Body>
		<itp:executeProcess>
			<itp:flow>
				<itp:name>/Framework/Processes/Routers/Configuration Item/CSC ServiceNow</itp:name>
				<itp:action>start</itp:action>
				<itp:auth>
					<!--You have a CHOICE of the next 2 items at this level-->              
					<itp:user>pamadmin</itp:user>
					<itp:password>pamadmin</itp:password>
				</itp:auth>
				<!--Optional:-->
				<itp:params>
				    <itp:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</itp:param>
					<itp:param name="z_transaction_code">sd_ci_create</itp:param>
					<itp:param name="sender">CSC ServiceNow</itp:param>
					<itp:param name="z_asset_tag">THAI_AST_151103_13_09</itp:param>
					<itp:param name="z_class_name">Accessory</itp:param>
					<itp:param name="z_company">CSC Internal</itp:param>
					<itp:param name="z_install_status">Absent</itp:param>
					<itp:param name="z_location">100 Ave Of The Americas</itp:param>
					<itp:param name="z_manufacturer">2020 Insight</itp:param>
					<itp:param name="z_model_id">1600 Series Router</itp:param>
					<itp:param name="z_name">THAI_NAME_151103_13_09</itp:param>
					<itp:param name="z_serial_number">THAI_SN_151103_13_091</itp:param>
					<itp:param name="z_support_group">Approval Test1</itp:param>
					<itp:param name="z_provider_sys_id">39b6c57c6faf8684c5afbd5dbb3ee45d</itp:param>
					<itp:param name="z_operational_status">DR Standby</itp:param>
					<itp:param name="z_type">Computer</itp:param>
					<itp:param name="z_busines_criticality">1 - most critical</itp:param>
					<itp:param name="z_match_type">Serial, Nodename</itp:param>
					<itp:param name="z_u_supported">Yes</itp:param>
					<itp:param name="z_maintenance_schedule">[null]</itp:param>
					<itp:param name="z_nom_input_volt">[null]</itp:param>
				</itp:params>
			</itp:flow>
		</itp:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="[3rd]sd_ci_create_Fail_Missing_RequireField" id="61357c78-e686-4106-bcec-dc74a9a1ff27"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="[3rd]sd_ci_create_Fail_Missing_RequireField" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
	<soapenv:Header/>
	<soapenv:Body>
		<csc:executeProcess>
			<csc:flow>
				<csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
				<csc:action>start</csc:action>
				<csc:auth>
					<csc:token/>
					<csc:user>pamadmin</csc:user>
					<csc:password>pamadmin</csc:password>
				</csc:auth>
				<csc:params>
					<!--pam parameters-->
					<csc:param name="request_type">sd_ci_create</csc:param>
					<csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="sender"><![CDATA[AT&T]]]]>><![CDATA[</csc:param>
					<csc:param name="file_base64"></csc:param>
					<csc:param name="file_name"></csc:param>
					<csc:param name="file_type"></csc:param>
					<!--standard incident adapter parameters-->

					<csc:param name="z_agent_software_version"></csc:param>	 
					<csc:param name="z_amps"></csc:param>	 
					<csc:param name="z_approval_group"></csc:param>	 
					<csc:param name="z_asset"></csc:param>	 
					<csc:param name="z_asset_tag">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_name"></csc:param>
					<csc:param name="z_status">Absent</csc:param>
					<csc:param name="z_company">Aon</csc:param>
					<csc:param name="z_class">Database</csc:param>
					<csc:param name="z_type">MySQL</csc:param>
					<csc:param name="z_manufacturer_name">2020 Insight</csc:param>
					<csc:param name="z_serial_number">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
					<csc:param name="z_business_criticality">not critical</csc:param>
					<csc:param name="z_match_type">Serial</csc:param>
					<csc:param name="z_model_id">1600 Series Router</csc:param>
					<csc:param name="z_supported">Yes</csc:param>
					<csc:param name="z_used_for">QA</csc:param>
					<csc:param name="z_operational_status">Operational</csc:param>
					<csc:param name="z_assigned_to"></csc:param>	 
					<csc:param name="z_attached_devices"></csc:param>	 
					<csc:param name="z_attached_to"></csc:param>	 
					<csc:param name="z_attributes"></csc:param>	 
					<csc:param name="z_audible_alarm_status	"></csc:param> 
					<csc:param name="z_battery_current"></csc:param>	 
					<csc:param name="z_battery_last_replaced"></csc:param>	 
					<csc:param name="z_battery_status"></csc:param>	 
					<csc:param name="z_battery_temperature"></csc:param>	 
					<csc:param name="z_battery_voltage"></csc:param>	 
					<csc:param name="z_bypass_frequency"></csc:param>	 
					<csc:param name="z_can_hub_ip"></csc:param>	 
					<csc:param name="z_can_partition_vlans"></csc:param>	 
					<csc:param name="z_can_print"></csc:param>	 
					<csc:param name="z_can_route_ip"></csc:param>	 
					<csc:param name="z_can_switch_ip"></csc:param>	 
					<csc:param name="z_category"></csc:param> 
					<csc:param name="z_cd"></csc:param>	 
					<csc:param name="z_cd_speed"></csc:param>	 
					<csc:param name="z_channels"></csc:param>	 
					<csc:param name="z_chassis_type"></csc:param>	 
					<csc:param name="z_checked_in"></csc:param>	 
					<csc:param name="z_checked_out"></csc:param>	 
					<csc:param name="z_child_class"></csc:param>	 
					<csc:param name="z_child_config_item"></csc:param>	 
					<csc:param name="z_child_name"></csc:param>	 
					<csc:param name="z_class_label"></csc:param>	 
					<csc:param name="z_classification"></csc:param>	 
					<csc:param name="z_classifier"></csc:param>	 
					<csc:param name="z_cluster_status"></csc:param>	 
					<csc:param name="z_color"></csc:param>	 
					<csc:param name="z_colors"></csc:param>	 
					<csc:param name="z_comments"></csc:param>	 
					<csc:param name="z_computer"></csc:param>	 
					<csc:param name="z_connection_strength"></csc:param>	 
					<csc:param name="z_cooling_watts"></csc:param>	 
					<csc:param name="z_correlation_id"></csc:param>	 
					<csc:param name="z_cost"></csc:param>	 
					<csc:param name="z_cost_center"></csc:param>	 
					<csc:param name="z_cost_currency"></csc:param>	 
					<csc:param name="z_cpu_core_count"></csc:param>	 
					<csc:param name="z_cpu_core_thread"></csc:param>	 
					<csc:param name="z_cpu_count"></csc:param>	 
					<csc:param name="z_cpu_manufacturer"></csc:param>	 
					<csc:param name="z_cpu_name"></csc:param>	 
					<csc:param name="z_cpu_speed"></csc:param>	 
					<csc:param name="z_cpu_type"></csc:param> 
					<csc:param name="z_current_load_state"></csc:param>	 
					<csc:param name="z_database_server"></csc:param>	 
					<csc:param name="z_date_of_manufacture"></csc:param>	 
					<csc:param name="z_default_gateway"></csc:param>	 
					<csc:param name="z_department"></csc:param>	 
					<csc:param name="z_description"></csc:param>	 
					<csc:param name="z_device_type"></csc:param>	 
					<csc:param name="z_disaster_backup_server"></csc:param>	 
					<csc:param name="z_discovery_source"></csc:param>	 
					<csc:param name="z_disk_space"></csc:param>	 
					<csc:param name="z_number_of_drives"></csc:param>	 
					<csc:param name="z_dns_domain"></csc:param>	 
					<csc:param name="z_dns_host_name"></csc:param>	 
					<csc:param name="z_domain"></csc:param>	 
					<csc:param name="z_due"></csc:param>	 
					<csc:param name="z_due_in"></csc:param>	 
					<csc:param name="z_estimated_bandwidth"></csc:param>	 
					<csc:param name="z_estimated_charge_remaining"></csc:param>	 
					<csc:param name="z_estimated_minutes_remaining"></csc:param>	 
					<csc:param name="z_fault_count"></csc:param>	 
					<csc:param name="z_firewall_status"></csc:param>	 
					<csc:param name="z_firmware_manufacturer"></csc:param>	 
					<csc:param name="z_firmware_version"></csc:param>	 
					<csc:param name="z_first_discovered"></csc:param>	 
					<csc:param name="z_floppy"></csc:param>	 
					<csc:param name="z_footprint"></csc:param>	 
					<csc:param name="z_form_factor"></csc:param>	 
					<csc:param name="z_fully_qualified_domian_name"></csc:param>	 
					<csc:param name="z_gl_account"></csc:param>	 
					<csc:param name="z_hardware_version"></csc:param>	 
					<csc:param name="z_high_voltage_transfer_point"></csc:param>	 
					<csc:param name="z_horizontal_resolution"></csc:param>	 
					<csc:param name="z_host_name"></csc:param>	 
					<csc:param name="z_input_line_bads"></csc:param>	 
					<csc:param name="z_install_count"></csc:param>	 
					<csc:param name="z_installed"></csc:param>
					<csc:param name="z_invoice_number"></csc:param>	 
					<csc:param name="z_ip_address"></csc:param>	 
					<csc:param name="z_is_virtual"></csc:param>	 
					<csc:param name="z_justification"></csc:param>	 
					<csc:param name="z_kernel_release"></csc:param>	 
					<csc:param name="z_key"></csc:param>	 
					<csc:param name="z_lease_contract"></csc:param>	 
					<csc:param name="z_licence_count"></csc:param>	 
					<csc:param name="z_licences_available"></csc:param>	 
					<csc:param name="z_location">100 MAIN ST Charleston South Carolina</csc:param>
					<csc:param name="z_low_battery_threshold"></csc:param>	 
					<csc:param name="z_low_voltage_transfer_point"></csc:param>	 
					<csc:param name="z_mac_address"></csc:param>	 
					<csc:param name="z_maintenace_shedule"></csc:param>	 
					<csc:param name="z_managed_by"></csc:param>	 
					<csc:param name="z_managed_domain"></csc:param>	 
					<csc:param name="z_master_state"></csc:param>	 
					<csc:param name="z_model_number">M003</csc:param>
					<csc:param name="z_monitor">false</csc:param>
					<csc:param name="z_monitored"></csc:param>	 
					<csc:param name="z_most_recent_discovery"></csc:param>	 
					<csc:param name="z_msft_sms_productid"></csc:param>	 
					<csc:param name="z_normal_input_frequency"></csc:param>	 
					<csc:param name="z_normal_input_voltage"></csc:param>	 
					<csc:param name="z_normal_ouput_voltage	"></csc:param> 
					<csc:param name="z_normal_output_frequency"></csc:param>	 
					<csc:param name="z_number_of_outlets"></csc:param>	 
					<csc:param name="z_operating_system"></csc:param> 
					<csc:param name="z_order_received"></csc:param>	 
					<csc:param name="z_ordered"></csc:param>	 
					<csc:param name="z_os_address_width"></csc:param>	 
					<csc:param name="z_os_domain"></csc:param>	 
					<csc:param name="z_os_service_pack"></csc:param>	 
					<csc:param name="z_os_version"></csc:param>	 
					<csc:param name="z_output_frequency"></csc:param> 
					<csc:param name="z_output_source"></csc:param>	 
					<csc:param name="z_owned_by"></csc:param>	 
					<csc:param name="z_package_name"></csc:param>	 
					<csc:param name="z_pages_per_minute"></csc:param>	 
					<csc:param name="z_paper"></csc:param>	 
					<csc:param name="z_parent_asset"></csc:param>	 
					<csc:param name="z_parent_class"></csc:param>	 
					<csc:param name="z_parent_config_item"></csc:param>	 
					<csc:param name="z_parent_name"></csc:param>	 
					<csc:param name="z_part_of"></csc:param>	 
					<csc:param name="z_pcl"></csc:param>	 
					<csc:param name="z_phone_number"></csc:param>	 
					<csc:param name="z_physical_interface_count"></csc:param>	 
					<csc:param name="z_pid"></csc:param>	 
					<csc:param name="z_po_number"></csc:param>	 
					<csc:param name="z_port"></csc:param>	 
					<csc:param name="z_ports"></csc:param>	 
					<csc:param name="z_postscript"></csc:param>	 
					<csc:param name="z_power_consumption"></csc:param>	 
					<csc:param name="z_print_type"></csc:param>	 
					<csc:param name="z_provided_by"></csc:param>	 
					<csc:param name="z_provider_child_sys_id"></csc:param>	 
					<csc:param name="z_provider_parent_sys_id"></csc:param>	 
					<csc:param name="z_provider_sys_id"></csc:param>	 
					<csc:param name="z_purchased"></csc:param>	 
					<csc:param name="z_rack_units"></csc:param>	 
					<csc:param name="z_rack_units_in_use"></csc:param>	 
					<csc:param name="z_raid_type"></csc:param>	 
					<csc:param name="z_ram"></csc:param>	 
					<csc:param name="z_range"></csc:param>	 
					<csc:param name="z_rated_output_true_power"></csc:param>	 
					<csc:param name="z_rated_output_va"></csc:param>	 
					<csc:param name="z_requires_verification"></csc:param>	 
					<csc:param name="z_resolution_units"></csc:param>	 
					<csc:param name="z_running_process"></csc:param>	 
					<csc:param name="z_scheduled_retirement"></csc:param>	 
					<csc:param name="z_seconds_on_battery"></csc:param>	 
					<csc:param name="z_seconds_on_battery_desired"></csc:param>	 
					<csc:param name="z_serial_number_desired"></csc:param>	 
					<csc:param name="z_shared"></csc:param>	 
					<csc:param name="z_skip_sync"></csc:param>	 
					<csc:param name="z_sla"></csc:param>	 
					<csc:param name="z_start_date"></csc:param>	 
					<csc:param name="z_sub_category"></csc:param>	 
					<csc:param name="z_sub_status"></csc:param>	 
					<csc:param name="z_support_group">Approval Test1</csc:param>
					<csc:param name="z_supported_by"></csc:param>	 
					<csc:param name="z_tcp_ports"></csc:param>	 
					<csc:param name="z_total_capacity"></csc:param>	 	 
					<csc:param name="z_updates"></csc:param>	 
					<csc:param name="z_ups_software_version"></csc:param>	 
					<csc:param name="z_use_count"></csc:param>	 
					<csc:param name="z_use_count_units"></csc:param>	  
					<csc:param name="z_vendor"></csc:param>	 
					<csc:param name="z_version_number"></csc:param>	 
					<csc:param name="z_vertical_resolution"></csc:param>	 
					<csc:param name="z_warranty_contract"></csc:param>	 

				</csc:params>
			</csc:flow>
		</csc:executeProcess>
	</soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Received_Stage" id="3d95cde8-468e-4933-b375-c50c3fca211c" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk], [fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='received' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="53d05541-0efb-41f4-a908-4d633efdeaaf"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Received_Stage" id="48effd5b-24cc-4d96-8754-ea3f7d29905d" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status ==null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Received_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Prepared_Stage" id="a67a1f0f-6897-4e76-8e6c-1a3b3bfaca23" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='prepared' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="1f466469-8437-4fb1-bb7f-9aba4bb107d2"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Prepared_Stage" id="f41992d7-1181-43ed-b24f-13b807766f05" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Prepared_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Sent_Stage" id="8add883d-c177-4a84-9091-328326a13b8a" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,[fw_relationship].receiver_id, fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='sent' and [fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="096bffe6-3f26-425e-ab81-16ab88c087a5"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Sent_Stage" id="11de8653-9b5e-430d-8743-422747888d49" disabled="true"><con:settings/><con:config><script><![CDATA[def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def ci = holder.getNodeValue("//RECEIVER_ID");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null && status == null && ci == null && count < 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Sent_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	ci = holder.getNodeValue("//RECEIVER_ID");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (ci)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
]]></script></con:config></con:testStep><con:testStep type="jdbc" name="JDBC_sd_ci_create_Replied_Stage" id="88b40118-fa90-4ef8-be48-2c29cb7d2231" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver><con:connectionString>jdbc:sqlserver://localhost:51357;databaseName=integrations;user=sa;password=W1llDo4now!0523;</con:connectionString><con:query>SELECT 	[fw_request].[fk],[fw_request].Status,fw_request.fw_status
FROM [integrations].[dbo].[fw_request] 
LEFT JOIN [integrations].[dbo].[fw_relationship] 
ON [fw_request].[pk]= [fw_relationship].[fk] 
WHERE [fw_request].[fk] =:CI and [fw_request].Status ='replied' and 	[fw_request].request_type= 'sd_ci_create'</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="36e7525b-35b6-4c3d-834a-c639c94ce074"/><con:properties><con:property><con:name>CI</con:name><con:value>${#TestCase#CLASS},${#TestCase#COMPANY},${#TestCase#NAME}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Groovy_sd_ci_create_Replied_Stage" id="1580301a-70f3-4a88-9d36-0fb763a2dd68" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
def fk = holder.getNodeValue("//FK");
def status = holder.getNodeValue("//STATUS");
def fw_status = holder.getNodeValue("//FW_STATUS");
def count = 0;
def index = context.currentStepIndex - 1;
def step = testRunner.testCase.getTestStepAt(index);

while(fk == null &amp;&amp; status == null &amp;&amp; count &lt; 100)
{
	sleep(5000)
	log.info "** Recall: " + count
	step.run(testRunner, context)
	sleep(5000)
	//groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
	holder = groovyUtils.getXmlHolder("JDBC_sd_ci_create_Replied_Stage#ResponseAsXml");
	fk = holder.getNodeValue("//FK");
	status = holder.getNodeValue("//STATUS");
	fw_status = holder.getNodeValue("//FW_STATUS");
	count = count + 1
}

log.info (fk)
log.info (status)
log.info (fw_status)

if(count == 100)
	assert false
else
	assert true
</script></con:config></con:testStep><con:testStep type="groovy" name="Message_sd_ci_create" id="5e56f1cf-50af-4523-bc1d-ff9a804df703" disabled="true"><con:settings/><con:config><script>log.info "sd_ci_create has ran successfully"</script></con:config></con:testStep><con:testStep type="request" name="QCTEST[3rd]sd_ci_create_Successful" id="6d17ea44-2863-4605-8ea2-a1e1550c41a8"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS0212001</csc:param>
              <csc:param name="z_provider_sys_id">VINHCaheoASSTAG_WS0212001</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Network Gear</csc:param>
               <csc:param name="z_location">Hangzhou</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset0212001</csc:param>
               <csc:param name="z_serial_number">SN:15860212001</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="COmpanyQCTEST[3rd]sd_ci_create_Successful" id="af3ba9be-1cad-4c5f-a4c8-0e33b03261cb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="COmpanyQCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://CSCPCOMDC101DE.emea.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <csc:executeProcess>\r
         <csc:flow>\r
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>\r
            <csc:action>start</csc:action>\r
            <csc:auth>\r
               <csc:token/>\r
               <csc:user>pamadmin</csc:user>\r
               <csc:password>pamadmin</csc:password>\r
            </csc:auth>\r
            <csc:params>\r
               <!--pam parameters-->\r
               <csc:param name="request_type">sd_ci_create</csc:param>\r
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>\r
               <csc:param name="sender">AT&amp;T</csc:param>\r
               <csc:param name="file_base64"/>\r
               <csc:param name="file_name"/>\r
               <csc:param name="file_type"/>\r
               <!--standard request adapter parameters-->\r
               <csc:param name="z_asset_tag">CaheoASSTAG_WS08120001</csc:param>\r
               <csc:param name="z_class">Web Server</csc:param>\r
               <csc:param name="z_location">Hangzhou</csc:param>\r
               <csc:param name="z_manufacturer_name">Apple</csc:param>\r
               <csc:param name="z_model_id">MacIntosh Quadra 900</csc:param>\r
               <csc:param name="z_name">caheo_test_asset08120001</csc:param>\r
               <csc:param name="z_serial_number">SN:158608120001</csc:param>\r
               <csc:param name="z_status">Defective</csc:param>\r
               <csc:param name="z_support_group">Application Support - TEST</csc:param>\r
               <csc:param name="z_company">CSC Internal</csc:param>\r
            </csc:params>\r
         </csc:flow>\r
      </csc:executeProcess>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CLASS_NETWORK_QCTEST[3rd]sd_ci_create_Successful" id="0fc6f414-e6c2-4887-9adb-4bb4024a3220"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="CLASS_NETWORK_QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS001</csc:param>
              <csc:param name="z_provider_sys_id">CaheoASSTAG_WS001</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Network Gear</csc:param>
               <csc:param name="z_location">Hangzhou</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset001</csc:param>
               <csc:param name="z_serial_number">SN:1586001</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="CLASS_Computer_QCTEST[3rd]sd_ci_create_Successful" id="009a2b35-441b-4369-a266-a88ca92c20e5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ItpamServiceBinding</con:interface><con:operation>ExecuteProcess</con:operation><con:request name="CLASS_Computer_QCTEST[3rd]sd_ci_create_Successful" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="96402b8f-ea71-4fb8-9a4e-37deac72a6f9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://cscvieae28162.vdc.csc.com:8080/itpam/soap</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:csc="http://www.ca.com/cscam">
   <soapenv:Header/>
   <soapenv:Body>
      <csc:executeProcess>
         <csc:flow>
            <csc:name>/Framework/Processes/Routers/Configuration Item/Standard</csc:name>
            <csc:action>start</csc:action>
            <csc:auth>
               <csc:token/>
               <csc:user>pamadmin</csc:user>
               <csc:password>pamadmin</csc:password>
            </csc:auth>
            <csc:params>
               <!--pam parameters-->
               <csc:param name="request_type">sd_ci_create</csc:param>
               <csc:param name="started">${=new Date().format("yyyy-MM-dd HH:mm:ss")}</csc:param>
               <csc:param name="sender">AT&amp;T</csc:param>
               <csc:param name="file_base64"/>
               <csc:param name="file_name"/>
               <csc:param name="file_type"/>
               <!--standard request adapter parameters-->
               <csc:param name="z_asset_tag">CaheoASSTAG_WS001</csc:param>
              <csc:param name="z_provider_sys_id">CaheoASSTAG_WS001</csc:param>
               <csc:param name="z_asset"> DD_TEST8_ASSET</csc:param>
               <csc:param name="z_class">Computer</csc:param>
               <csc:param name="z_location">Hangzhou</csc:param>
               <csc:param name="z_manufacturer_name">Cisco</csc:param>
               <csc:param name="z_model_id">1600 Series Router</csc:param>
               <csc:param name="z_name">caheo_test_asset001</csc:param>
               <csc:param name="z_serial_number">SN:1586001</csc:param>
               <csc:param name="z_status">Defective</csc:param>
               <csc:param name="z_support_group">Approval Test1</csc:param>
               <csc:param name="z_company">CSC Internal</csc:param>
            </csc:params>
         </csc:flow>
      </csc:executeProcess>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="a1559fda-22da-4833-92dc-6608a95bb4a2" disabled="true"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="ExecuteC2OFlow"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:setupScript>testRunner.testCase.setPropertyValue("ID", new Date().format("yyyyMMddHHmmss")) 
testRunner.testCase.setPropertyValue("CLASS", 'Business Service')
testRunner.testCase.setPropertyValue("COMPANY", 'CSC Internal') 
testRunner.testCase.setPropertyValue("NAME", new Date().format("yyyyMMddHHmmss")) </con:setupScript><con:properties><con:property><con:name>ID</con:name><con:value>20150908022800</con:value></con:property><con:property><con:name>CLASS</con:name><con:value>Business Service</con:value></con:property><con:property><con:name>COMPANY</con:name><con:value>CSC Internal</con:value></con:property><con:property><con:name>NAME</con:name><con:value>20150908022800</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="pamadmin">https://cscdev.service-now.com/u_connectnow_standard_incident_create.do?SOAP</con:endpoint></con:endpointStrategy><con:properties><con:property><con:name>RECEIVER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>